/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1VirtualMachineInstanceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1VirtualMachineInstanceStatus{}

// KubevirtIoApiCoreV1VirtualMachineInstanceStatus struct for KubevirtIoApiCoreV1VirtualMachineInstanceStatus
type KubevirtIoApiCoreV1VirtualMachineInstanceStatus struct {
	VSOCKCID *int64 `json:"VSOCKCID,omitempty"`
	ActivePods *map[string]string `json:"activePods,omitempty"`
	Conditions []KubevirtIoApiCoreV1VirtualMachineInstanceCondition `json:"conditions,omitempty"`
	CurrentCPUTopology *KubevirtIoApiCoreV1CPUTopology `json:"currentCPUTopology,omitempty"`
	EvacuationNodeName *string `json:"evacuationNodeName,omitempty"`
	FsFreezeStatus *string `json:"fsFreezeStatus,omitempty"`
	GuestOSInfo *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo `json:"guestOSInfo,omitempty"`
	Interfaces []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface `json:"interfaces,omitempty"`
	LauncherContainerImageVersion *string `json:"launcherContainerImageVersion,omitempty"`
	Machine *KubevirtIoApiCoreV1Machine `json:"machine,omitempty"`
	Memory *KubevirtIoApiCoreV1MemoryStatus `json:"memory,omitempty"`
	MigrationMethod *string `json:"migrationMethod,omitempty"`
	MigrationState *KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState `json:"migrationState,omitempty"`
	MigrationTransport *string `json:"migrationTransport,omitempty"`
	NodeName *string `json:"nodeName,omitempty"`
	Phase *string `json:"phase,omitempty"`
	PhaseTransitionTimestamps []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp `json:"phaseTransitionTimestamps,omitempty"`
	QosClass *string `json:"qosClass,omitempty"`
	Reason *string `json:"reason,omitempty"`
	RuntimeUser *int64 `json:"runtimeUser,omitempty"`
	SelinuxContext *string `json:"selinuxContext,omitempty"`
	TopologyHints *KubevirtIoApiCoreV1TopologyHints `json:"topologyHints,omitempty"`
	VirtualMachineRevisionName *string `json:"virtualMachineRevisionName,omitempty"`
	VolumeStatus []KubevirtIoApiCoreV1VolumeStatus `json:"volumeStatus,omitempty"`
}

// NewKubevirtIoApiCoreV1VirtualMachineInstanceStatus instantiates a new KubevirtIoApiCoreV1VirtualMachineInstanceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1VirtualMachineInstanceStatus() *KubevirtIoApiCoreV1VirtualMachineInstanceStatus {
	this := KubevirtIoApiCoreV1VirtualMachineInstanceStatus{}
	var runtimeUser int64 = 0
	this.RuntimeUser = &runtimeUser
	return &this
}

// NewKubevirtIoApiCoreV1VirtualMachineInstanceStatusWithDefaults instantiates a new KubevirtIoApiCoreV1VirtualMachineInstanceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1VirtualMachineInstanceStatusWithDefaults() *KubevirtIoApiCoreV1VirtualMachineInstanceStatus {
	this := KubevirtIoApiCoreV1VirtualMachineInstanceStatus{}
	var runtimeUser int64 = 0
	this.RuntimeUser = &runtimeUser
	return &this
}

// GetVSOCKCID returns the VSOCKCID field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVSOCKCID() int64 {
	if o == nil || IsNil(o.VSOCKCID) {
		var ret int64
		return ret
	}
	return *o.VSOCKCID
}

// GetVSOCKCIDOk returns a tuple with the VSOCKCID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVSOCKCIDOk() (*int64, bool) {
	if o == nil || IsNil(o.VSOCKCID) {
		return nil, false
	}
	return o.VSOCKCID, true
}

// HasVSOCKCID returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasVSOCKCID() bool {
	if o != nil && !IsNil(o.VSOCKCID) {
		return true
	}

	return false
}

// SetVSOCKCID gets a reference to the given int64 and assigns it to the VSOCKCID field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetVSOCKCID(v int64) {
	o.VSOCKCID = &v
}

// GetActivePods returns the ActivePods field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetActivePods() map[string]string {
	if o == nil || IsNil(o.ActivePods) {
		var ret map[string]string
		return ret
	}
	return *o.ActivePods
}

// GetActivePodsOk returns a tuple with the ActivePods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetActivePodsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ActivePods) {
		return nil, false
	}
	return o.ActivePods, true
}

// HasActivePods returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasActivePods() bool {
	if o != nil && !IsNil(o.ActivePods) {
		return true
	}

	return false
}

// SetActivePods gets a reference to the given map[string]string and assigns it to the ActivePods field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetActivePods(v map[string]string) {
	o.ActivePods = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetConditions() []KubevirtIoApiCoreV1VirtualMachineInstanceCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []KubevirtIoApiCoreV1VirtualMachineInstanceCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetConditionsOk() ([]KubevirtIoApiCoreV1VirtualMachineInstanceCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []KubevirtIoApiCoreV1VirtualMachineInstanceCondition and assigns it to the Conditions field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetConditions(v []KubevirtIoApiCoreV1VirtualMachineInstanceCondition) {
	o.Conditions = v
}

// GetCurrentCPUTopology returns the CurrentCPUTopology field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetCurrentCPUTopology() KubevirtIoApiCoreV1CPUTopology {
	if o == nil || IsNil(o.CurrentCPUTopology) {
		var ret KubevirtIoApiCoreV1CPUTopology
		return ret
	}
	return *o.CurrentCPUTopology
}

// GetCurrentCPUTopologyOk returns a tuple with the CurrentCPUTopology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetCurrentCPUTopologyOk() (*KubevirtIoApiCoreV1CPUTopology, bool) {
	if o == nil || IsNil(o.CurrentCPUTopology) {
		return nil, false
	}
	return o.CurrentCPUTopology, true
}

// HasCurrentCPUTopology returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasCurrentCPUTopology() bool {
	if o != nil && !IsNil(o.CurrentCPUTopology) {
		return true
	}

	return false
}

// SetCurrentCPUTopology gets a reference to the given KubevirtIoApiCoreV1CPUTopology and assigns it to the CurrentCPUTopology field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetCurrentCPUTopology(v KubevirtIoApiCoreV1CPUTopology) {
	o.CurrentCPUTopology = &v
}

// GetEvacuationNodeName returns the EvacuationNodeName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetEvacuationNodeName() string {
	if o == nil || IsNil(o.EvacuationNodeName) {
		var ret string
		return ret
	}
	return *o.EvacuationNodeName
}

// GetEvacuationNodeNameOk returns a tuple with the EvacuationNodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetEvacuationNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.EvacuationNodeName) {
		return nil, false
	}
	return o.EvacuationNodeName, true
}

// HasEvacuationNodeName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasEvacuationNodeName() bool {
	if o != nil && !IsNil(o.EvacuationNodeName) {
		return true
	}

	return false
}

// SetEvacuationNodeName gets a reference to the given string and assigns it to the EvacuationNodeName field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetEvacuationNodeName(v string) {
	o.EvacuationNodeName = &v
}

// GetFsFreezeStatus returns the FsFreezeStatus field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetFsFreezeStatus() string {
	if o == nil || IsNil(o.FsFreezeStatus) {
		var ret string
		return ret
	}
	return *o.FsFreezeStatus
}

// GetFsFreezeStatusOk returns a tuple with the FsFreezeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetFsFreezeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FsFreezeStatus) {
		return nil, false
	}
	return o.FsFreezeStatus, true
}

// HasFsFreezeStatus returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasFsFreezeStatus() bool {
	if o != nil && !IsNil(o.FsFreezeStatus) {
		return true
	}

	return false
}

// SetFsFreezeStatus gets a reference to the given string and assigns it to the FsFreezeStatus field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetFsFreezeStatus(v string) {
	o.FsFreezeStatus = &v
}

// GetGuestOSInfo returns the GuestOSInfo field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetGuestOSInfo() KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo {
	if o == nil || IsNil(o.GuestOSInfo) {
		var ret KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo
		return ret
	}
	return *o.GuestOSInfo
}

// GetGuestOSInfoOk returns a tuple with the GuestOSInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetGuestOSInfoOk() (*KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo, bool) {
	if o == nil || IsNil(o.GuestOSInfo) {
		return nil, false
	}
	return o.GuestOSInfo, true
}

// HasGuestOSInfo returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasGuestOSInfo() bool {
	if o != nil && !IsNil(o.GuestOSInfo) {
		return true
	}

	return false
}

// SetGuestOSInfo gets a reference to the given KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo and assigns it to the GuestOSInfo field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetGuestOSInfo(v KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) {
	o.GuestOSInfo = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetInterfaces() []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface {
	if o == nil || IsNil(o.Interfaces) {
		var ret []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetInterfacesOk() ([]KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface and assigns it to the Interfaces field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetInterfaces(v []KubevirtIoApiCoreV1VirtualMachineInstanceNetworkInterface) {
	o.Interfaces = v
}

// GetLauncherContainerImageVersion returns the LauncherContainerImageVersion field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetLauncherContainerImageVersion() string {
	if o == nil || IsNil(o.LauncherContainerImageVersion) {
		var ret string
		return ret
	}
	return *o.LauncherContainerImageVersion
}

// GetLauncherContainerImageVersionOk returns a tuple with the LauncherContainerImageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetLauncherContainerImageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LauncherContainerImageVersion) {
		return nil, false
	}
	return o.LauncherContainerImageVersion, true
}

// HasLauncherContainerImageVersion returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasLauncherContainerImageVersion() bool {
	if o != nil && !IsNil(o.LauncherContainerImageVersion) {
		return true
	}

	return false
}

// SetLauncherContainerImageVersion gets a reference to the given string and assigns it to the LauncherContainerImageVersion field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetLauncherContainerImageVersion(v string) {
	o.LauncherContainerImageVersion = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMachine() KubevirtIoApiCoreV1Machine {
	if o == nil || IsNil(o.Machine) {
		var ret KubevirtIoApiCoreV1Machine
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMachineOk() (*KubevirtIoApiCoreV1Machine, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given KubevirtIoApiCoreV1Machine and assigns it to the Machine field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetMachine(v KubevirtIoApiCoreV1Machine) {
	o.Machine = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMemory() KubevirtIoApiCoreV1MemoryStatus {
	if o == nil || IsNil(o.Memory) {
		var ret KubevirtIoApiCoreV1MemoryStatus
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMemoryOk() (*KubevirtIoApiCoreV1MemoryStatus, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given KubevirtIoApiCoreV1MemoryStatus and assigns it to the Memory field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetMemory(v KubevirtIoApiCoreV1MemoryStatus) {
	o.Memory = &v
}

// GetMigrationMethod returns the MigrationMethod field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationMethod() string {
	if o == nil || IsNil(o.MigrationMethod) {
		var ret string
		return ret
	}
	return *o.MigrationMethod
}

// GetMigrationMethodOk returns a tuple with the MigrationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.MigrationMethod) {
		return nil, false
	}
	return o.MigrationMethod, true
}

// HasMigrationMethod returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasMigrationMethod() bool {
	if o != nil && !IsNil(o.MigrationMethod) {
		return true
	}

	return false
}

// SetMigrationMethod gets a reference to the given string and assigns it to the MigrationMethod field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetMigrationMethod(v string) {
	o.MigrationMethod = &v
}

// GetMigrationState returns the MigrationState field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationState() KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState {
	if o == nil || IsNil(o.MigrationState) {
		var ret KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState
		return ret
	}
	return *o.MigrationState
}

// GetMigrationStateOk returns a tuple with the MigrationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationStateOk() (*KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState, bool) {
	if o == nil || IsNil(o.MigrationState) {
		return nil, false
	}
	return o.MigrationState, true
}

// HasMigrationState returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasMigrationState() bool {
	if o != nil && !IsNil(o.MigrationState) {
		return true
	}

	return false
}

// SetMigrationState gets a reference to the given KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState and assigns it to the MigrationState field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetMigrationState(v KubevirtIoApiCoreV1VirtualMachineInstanceMigrationState) {
	o.MigrationState = &v
}

// GetMigrationTransport returns the MigrationTransport field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationTransport() string {
	if o == nil || IsNil(o.MigrationTransport) {
		var ret string
		return ret
	}
	return *o.MigrationTransport
}

// GetMigrationTransportOk returns a tuple with the MigrationTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetMigrationTransportOk() (*string, bool) {
	if o == nil || IsNil(o.MigrationTransport) {
		return nil, false
	}
	return o.MigrationTransport, true
}

// HasMigrationTransport returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasMigrationTransport() bool {
	if o != nil && !IsNil(o.MigrationTransport) {
		return true
	}

	return false
}

// SetMigrationTransport gets a reference to the given string and assigns it to the MigrationTransport field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetMigrationTransport(v string) {
	o.MigrationTransport = &v
}

// GetNodeName returns the NodeName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetNodeName() string {
	if o == nil || IsNil(o.NodeName) {
		var ret string
		return ret
	}
	return *o.NodeName
}

// GetNodeNameOk returns a tuple with the NodeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetNodeNameOk() (*string, bool) {
	if o == nil || IsNil(o.NodeName) {
		return nil, false
	}
	return o.NodeName, true
}

// HasNodeName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasNodeName() bool {
	if o != nil && !IsNil(o.NodeName) {
		return true
	}

	return false
}

// SetNodeName gets a reference to the given string and assigns it to the NodeName field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetNodeName(v string) {
	o.NodeName = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetPhase(v string) {
	o.Phase = &v
}

// GetPhaseTransitionTimestamps returns the PhaseTransitionTimestamps field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetPhaseTransitionTimestamps() []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp {
	if o == nil || IsNil(o.PhaseTransitionTimestamps) {
		var ret []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp
		return ret
	}
	return o.PhaseTransitionTimestamps
}

// GetPhaseTransitionTimestampsOk returns a tuple with the PhaseTransitionTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetPhaseTransitionTimestampsOk() ([]KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp, bool) {
	if o == nil || IsNil(o.PhaseTransitionTimestamps) {
		return nil, false
	}
	return o.PhaseTransitionTimestamps, true
}

// HasPhaseTransitionTimestamps returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasPhaseTransitionTimestamps() bool {
	if o != nil && !IsNil(o.PhaseTransitionTimestamps) {
		return true
	}

	return false
}

// SetPhaseTransitionTimestamps gets a reference to the given []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp and assigns it to the PhaseTransitionTimestamps field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetPhaseTransitionTimestamps(v []KubevirtIoApiCoreV1VirtualMachineInstancePhaseTransitionTimestamp) {
	o.PhaseTransitionTimestamps = v
}

// GetQosClass returns the QosClass field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetQosClass() string {
	if o == nil || IsNil(o.QosClass) {
		var ret string
		return ret
	}
	return *o.QosClass
}

// GetQosClassOk returns a tuple with the QosClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetQosClassOk() (*string, bool) {
	if o == nil || IsNil(o.QosClass) {
		return nil, false
	}
	return o.QosClass, true
}

// HasQosClass returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasQosClass() bool {
	if o != nil && !IsNil(o.QosClass) {
		return true
	}

	return false
}

// SetQosClass gets a reference to the given string and assigns it to the QosClass field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetQosClass(v string) {
	o.QosClass = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetReason(v string) {
	o.Reason = &v
}

// GetRuntimeUser returns the RuntimeUser field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetRuntimeUser() int64 {
	if o == nil || IsNil(o.RuntimeUser) {
		var ret int64
		return ret
	}
	return *o.RuntimeUser
}

// GetRuntimeUserOk returns a tuple with the RuntimeUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetRuntimeUserOk() (*int64, bool) {
	if o == nil || IsNil(o.RuntimeUser) {
		return nil, false
	}
	return o.RuntimeUser, true
}

// HasRuntimeUser returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasRuntimeUser() bool {
	if o != nil && !IsNil(o.RuntimeUser) {
		return true
	}

	return false
}

// SetRuntimeUser gets a reference to the given int64 and assigns it to the RuntimeUser field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetRuntimeUser(v int64) {
	o.RuntimeUser = &v
}

// GetSelinuxContext returns the SelinuxContext field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetSelinuxContext() string {
	if o == nil || IsNil(o.SelinuxContext) {
		var ret string
		return ret
	}
	return *o.SelinuxContext
}

// GetSelinuxContextOk returns a tuple with the SelinuxContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetSelinuxContextOk() (*string, bool) {
	if o == nil || IsNil(o.SelinuxContext) {
		return nil, false
	}
	return o.SelinuxContext, true
}

// HasSelinuxContext returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasSelinuxContext() bool {
	if o != nil && !IsNil(o.SelinuxContext) {
		return true
	}

	return false
}

// SetSelinuxContext gets a reference to the given string and assigns it to the SelinuxContext field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetSelinuxContext(v string) {
	o.SelinuxContext = &v
}

// GetTopologyHints returns the TopologyHints field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetTopologyHints() KubevirtIoApiCoreV1TopologyHints {
	if o == nil || IsNil(o.TopologyHints) {
		var ret KubevirtIoApiCoreV1TopologyHints
		return ret
	}
	return *o.TopologyHints
}

// GetTopologyHintsOk returns a tuple with the TopologyHints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetTopologyHintsOk() (*KubevirtIoApiCoreV1TopologyHints, bool) {
	if o == nil || IsNil(o.TopologyHints) {
		return nil, false
	}
	return o.TopologyHints, true
}

// HasTopologyHints returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasTopologyHints() bool {
	if o != nil && !IsNil(o.TopologyHints) {
		return true
	}

	return false
}

// SetTopologyHints gets a reference to the given KubevirtIoApiCoreV1TopologyHints and assigns it to the TopologyHints field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetTopologyHints(v KubevirtIoApiCoreV1TopologyHints) {
	o.TopologyHints = &v
}

// GetVirtualMachineRevisionName returns the VirtualMachineRevisionName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVirtualMachineRevisionName() string {
	if o == nil || IsNil(o.VirtualMachineRevisionName) {
		var ret string
		return ret
	}
	return *o.VirtualMachineRevisionName
}

// GetVirtualMachineRevisionNameOk returns a tuple with the VirtualMachineRevisionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVirtualMachineRevisionNameOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualMachineRevisionName) {
		return nil, false
	}
	return o.VirtualMachineRevisionName, true
}

// HasVirtualMachineRevisionName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasVirtualMachineRevisionName() bool {
	if o != nil && !IsNil(o.VirtualMachineRevisionName) {
		return true
	}

	return false
}

// SetVirtualMachineRevisionName gets a reference to the given string and assigns it to the VirtualMachineRevisionName field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetVirtualMachineRevisionName(v string) {
	o.VirtualMachineRevisionName = &v
}

// GetVolumeStatus returns the VolumeStatus field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVolumeStatus() []KubevirtIoApiCoreV1VolumeStatus {
	if o == nil || IsNil(o.VolumeStatus) {
		var ret []KubevirtIoApiCoreV1VolumeStatus
		return ret
	}
	return o.VolumeStatus
}

// GetVolumeStatusOk returns a tuple with the VolumeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) GetVolumeStatusOk() ([]KubevirtIoApiCoreV1VolumeStatus, bool) {
	if o == nil || IsNil(o.VolumeStatus) {
		return nil, false
	}
	return o.VolumeStatus, true
}

// HasVolumeStatus returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) HasVolumeStatus() bool {
	if o != nil && !IsNil(o.VolumeStatus) {
		return true
	}

	return false
}

// SetVolumeStatus gets a reference to the given []KubevirtIoApiCoreV1VolumeStatus and assigns it to the VolumeStatus field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) SetVolumeStatus(v []KubevirtIoApiCoreV1VolumeStatus) {
	o.VolumeStatus = v
}

func (o KubevirtIoApiCoreV1VirtualMachineInstanceStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1VirtualMachineInstanceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VSOCKCID) {
		toSerialize["VSOCKCID"] = o.VSOCKCID
	}
	if !IsNil(o.ActivePods) {
		toSerialize["activePods"] = o.ActivePods
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.CurrentCPUTopology) {
		toSerialize["currentCPUTopology"] = o.CurrentCPUTopology
	}
	if !IsNil(o.EvacuationNodeName) {
		toSerialize["evacuationNodeName"] = o.EvacuationNodeName
	}
	if !IsNil(o.FsFreezeStatus) {
		toSerialize["fsFreezeStatus"] = o.FsFreezeStatus
	}
	if !IsNil(o.GuestOSInfo) {
		toSerialize["guestOSInfo"] = o.GuestOSInfo
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.LauncherContainerImageVersion) {
		toSerialize["launcherContainerImageVersion"] = o.LauncherContainerImageVersion
	}
	if !IsNil(o.Machine) {
		toSerialize["machine"] = o.Machine
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.MigrationMethod) {
		toSerialize["migrationMethod"] = o.MigrationMethod
	}
	if !IsNil(o.MigrationState) {
		toSerialize["migrationState"] = o.MigrationState
	}
	if !IsNil(o.MigrationTransport) {
		toSerialize["migrationTransport"] = o.MigrationTransport
	}
	if !IsNil(o.NodeName) {
		toSerialize["nodeName"] = o.NodeName
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.PhaseTransitionTimestamps) {
		toSerialize["phaseTransitionTimestamps"] = o.PhaseTransitionTimestamps
	}
	if !IsNil(o.QosClass) {
		toSerialize["qosClass"] = o.QosClass
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.RuntimeUser) {
		toSerialize["runtimeUser"] = o.RuntimeUser
	}
	if !IsNil(o.SelinuxContext) {
		toSerialize["selinuxContext"] = o.SelinuxContext
	}
	if !IsNil(o.TopologyHints) {
		toSerialize["topologyHints"] = o.TopologyHints
	}
	if !IsNil(o.VirtualMachineRevisionName) {
		toSerialize["virtualMachineRevisionName"] = o.VirtualMachineRevisionName
	}
	if !IsNil(o.VolumeStatus) {
		toSerialize["volumeStatus"] = o.VolumeStatus
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus struct {
	value *KubevirtIoApiCoreV1VirtualMachineInstanceStatus
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) Get() *KubevirtIoApiCoreV1VirtualMachineInstanceStatus {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) Set(val *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus(val *KubevirtIoApiCoreV1VirtualMachineInstanceStatus) *NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus {
	return &NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


