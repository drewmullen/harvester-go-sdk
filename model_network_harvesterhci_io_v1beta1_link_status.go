/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkHarvesterhciIoV1beta1LinkStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkHarvesterhciIoV1beta1LinkStatus{}

// NetworkHarvesterhciIoV1beta1LinkStatus struct for NetworkHarvesterhciIoV1beta1LinkStatus
type NetworkHarvesterhciIoV1beta1LinkStatus struct {
	Index *int32 `json:"index,omitempty"`
	Mac *string `json:"mac,omitempty"`
	MasterIndex *int32 `json:"masterIndex,omitempty"`
	Name string `json:"name"`
	Promiscuous *bool `json:"promiscuous,omitempty"`
	State *string `json:"state,omitempty"`
	Type *string `json:"type,omitempty"`
}

type _NetworkHarvesterhciIoV1beta1LinkStatus NetworkHarvesterhciIoV1beta1LinkStatus

// NewNetworkHarvesterhciIoV1beta1LinkStatus instantiates a new NetworkHarvesterhciIoV1beta1LinkStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkHarvesterhciIoV1beta1LinkStatus(name string) *NetworkHarvesterhciIoV1beta1LinkStatus {
	this := NetworkHarvesterhciIoV1beta1LinkStatus{}
	this.Name = name
	return &this
}

// NewNetworkHarvesterhciIoV1beta1LinkStatusWithDefaults instantiates a new NetworkHarvesterhciIoV1beta1LinkStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkHarvesterhciIoV1beta1LinkStatusWithDefaults() *NetworkHarvesterhciIoV1beta1LinkStatus {
	this := NetworkHarvesterhciIoV1beta1LinkStatus{}
	var name string = ""
	this.Name = name
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetIndex(v int32) {
	o.Index = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetMac(v string) {
	o.Mac = &v
}

// GetMasterIndex returns the MasterIndex field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetMasterIndex() int32 {
	if o == nil || IsNil(o.MasterIndex) {
		var ret int32
		return ret
	}
	return *o.MasterIndex
}

// GetMasterIndexOk returns a tuple with the MasterIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetMasterIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.MasterIndex) {
		return nil, false
	}
	return o.MasterIndex, true
}

// HasMasterIndex returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasMasterIndex() bool {
	if o != nil && !IsNil(o.MasterIndex) {
		return true
	}

	return false
}

// SetMasterIndex gets a reference to the given int32 and assigns it to the MasterIndex field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetMasterIndex(v int32) {
	o.MasterIndex = &v
}

// GetName returns the Name field value
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetName(v string) {
	o.Name = v
}

// GetPromiscuous returns the Promiscuous field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetPromiscuous() bool {
	if o == nil || IsNil(o.Promiscuous) {
		var ret bool
		return ret
	}
	return *o.Promiscuous
}

// GetPromiscuousOk returns a tuple with the Promiscuous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetPromiscuousOk() (*bool, bool) {
	if o == nil || IsNil(o.Promiscuous) {
		return nil, false
	}
	return o.Promiscuous, true
}

// HasPromiscuous returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasPromiscuous() bool {
	if o != nil && !IsNil(o.Promiscuous) {
		return true
	}

	return false
}

// SetPromiscuous gets a reference to the given bool and assigns it to the Promiscuous field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetPromiscuous(v bool) {
	o.Promiscuous = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetState(v string) {
	o.State = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NetworkHarvesterhciIoV1beta1LinkStatus) SetType(v string) {
	o.Type = &v
}

func (o NetworkHarvesterhciIoV1beta1LinkStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkHarvesterhciIoV1beta1LinkStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.MasterIndex) {
		toSerialize["masterIndex"] = o.MasterIndex
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Promiscuous) {
		toSerialize["promiscuous"] = o.Promiscuous
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *NetworkHarvesterhciIoV1beta1LinkStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkHarvesterhciIoV1beta1LinkStatus := _NetworkHarvesterhciIoV1beta1LinkStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkHarvesterhciIoV1beta1LinkStatus)

	if err != nil {
		return err
	}

	*o = NetworkHarvesterhciIoV1beta1LinkStatus(varNetworkHarvesterhciIoV1beta1LinkStatus)

	return err
}

type NullableNetworkHarvesterhciIoV1beta1LinkStatus struct {
	value *NetworkHarvesterhciIoV1beta1LinkStatus
	isSet bool
}

func (v NullableNetworkHarvesterhciIoV1beta1LinkStatus) Get() *NetworkHarvesterhciIoV1beta1LinkStatus {
	return v.value
}

func (v *NullableNetworkHarvesterhciIoV1beta1LinkStatus) Set(val *NetworkHarvesterhciIoV1beta1LinkStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkHarvesterhciIoV1beta1LinkStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkHarvesterhciIoV1beta1LinkStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkHarvesterhciIoV1beta1LinkStatus(val *NetworkHarvesterhciIoV1beta1LinkStatus) *NullableNetworkHarvesterhciIoV1beta1LinkStatus {
	return &NullableNetworkHarvesterhciIoV1beta1LinkStatus{value: val, isSet: true}
}

func (v NullableNetworkHarvesterhciIoV1beta1LinkStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkHarvesterhciIoV1beta1LinkStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


