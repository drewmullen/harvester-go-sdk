/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the K8sIoV1PodAntiAffinity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1PodAntiAffinity{}

// K8sIoV1PodAntiAffinity Pod anti affinity is a group of inter pod anti affinity scheduling rules.
type K8sIoV1PodAntiAffinity struct {
	// The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
	PreferredDuringSchedulingIgnoredDuringExecution []K8sIoV1WeightedPodAffinityTerm `json:"preferredDuringSchedulingIgnoredDuringExecution,omitempty"`
	// If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
	RequiredDuringSchedulingIgnoredDuringExecution []K8sIoV1PodAffinityTerm `json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

// NewK8sIoV1PodAntiAffinity instantiates a new K8sIoV1PodAntiAffinity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1PodAntiAffinity() *K8sIoV1PodAntiAffinity {
	this := K8sIoV1PodAntiAffinity{}
	return &this
}

// NewK8sIoV1PodAntiAffinityWithDefaults instantiates a new K8sIoV1PodAntiAffinity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1PodAntiAffinityWithDefaults() *K8sIoV1PodAntiAffinity {
	this := K8sIoV1PodAntiAffinity{}
	return &this
}

// GetPreferredDuringSchedulingIgnoredDuringExecution returns the PreferredDuringSchedulingIgnoredDuringExecution field value if set, zero value otherwise.
func (o *K8sIoV1PodAntiAffinity) GetPreferredDuringSchedulingIgnoredDuringExecution() []K8sIoV1WeightedPodAffinityTerm {
	if o == nil || IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		var ret []K8sIoV1WeightedPodAffinityTerm
		return ret
	}
	return o.PreferredDuringSchedulingIgnoredDuringExecution
}

// GetPreferredDuringSchedulingIgnoredDuringExecutionOk returns a tuple with the PreferredDuringSchedulingIgnoredDuringExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1PodAntiAffinity) GetPreferredDuringSchedulingIgnoredDuringExecutionOk() ([]K8sIoV1WeightedPodAffinityTerm, bool) {
	if o == nil || IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		return nil, false
	}
	return o.PreferredDuringSchedulingIgnoredDuringExecution, true
}

// HasPreferredDuringSchedulingIgnoredDuringExecution returns a boolean if a field has been set.
func (o *K8sIoV1PodAntiAffinity) HasPreferredDuringSchedulingIgnoredDuringExecution() bool {
	if o != nil && !IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		return true
	}

	return false
}

// SetPreferredDuringSchedulingIgnoredDuringExecution gets a reference to the given []K8sIoV1WeightedPodAffinityTerm and assigns it to the PreferredDuringSchedulingIgnoredDuringExecution field.
func (o *K8sIoV1PodAntiAffinity) SetPreferredDuringSchedulingIgnoredDuringExecution(v []K8sIoV1WeightedPodAffinityTerm) {
	o.PreferredDuringSchedulingIgnoredDuringExecution = v
}

// GetRequiredDuringSchedulingIgnoredDuringExecution returns the RequiredDuringSchedulingIgnoredDuringExecution field value if set, zero value otherwise.
func (o *K8sIoV1PodAntiAffinity) GetRequiredDuringSchedulingIgnoredDuringExecution() []K8sIoV1PodAffinityTerm {
	if o == nil || IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		var ret []K8sIoV1PodAffinityTerm
		return ret
	}
	return o.RequiredDuringSchedulingIgnoredDuringExecution
}

// GetRequiredDuringSchedulingIgnoredDuringExecutionOk returns a tuple with the RequiredDuringSchedulingIgnoredDuringExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1PodAntiAffinity) GetRequiredDuringSchedulingIgnoredDuringExecutionOk() ([]K8sIoV1PodAffinityTerm, bool) {
	if o == nil || IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		return nil, false
	}
	return o.RequiredDuringSchedulingIgnoredDuringExecution, true
}

// HasRequiredDuringSchedulingIgnoredDuringExecution returns a boolean if a field has been set.
func (o *K8sIoV1PodAntiAffinity) HasRequiredDuringSchedulingIgnoredDuringExecution() bool {
	if o != nil && !IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		return true
	}

	return false
}

// SetRequiredDuringSchedulingIgnoredDuringExecution gets a reference to the given []K8sIoV1PodAffinityTerm and assigns it to the RequiredDuringSchedulingIgnoredDuringExecution field.
func (o *K8sIoV1PodAntiAffinity) SetRequiredDuringSchedulingIgnoredDuringExecution(v []K8sIoV1PodAffinityTerm) {
	o.RequiredDuringSchedulingIgnoredDuringExecution = v
}

func (o K8sIoV1PodAntiAffinity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1PodAntiAffinity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		toSerialize["preferredDuringSchedulingIgnoredDuringExecution"] = o.PreferredDuringSchedulingIgnoredDuringExecution
	}
	if !IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		toSerialize["requiredDuringSchedulingIgnoredDuringExecution"] = o.RequiredDuringSchedulingIgnoredDuringExecution
	}
	return toSerialize, nil
}

type NullableK8sIoV1PodAntiAffinity struct {
	value *K8sIoV1PodAntiAffinity
	isSet bool
}

func (v NullableK8sIoV1PodAntiAffinity) Get() *K8sIoV1PodAntiAffinity {
	return v.value
}

func (v *NullableK8sIoV1PodAntiAffinity) Set(val *K8sIoV1PodAntiAffinity) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1PodAntiAffinity) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1PodAntiAffinity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1PodAntiAffinity(val *K8sIoV1PodAntiAffinity) *NullableK8sIoV1PodAntiAffinity {
	return &NullableK8sIoV1PodAntiAffinity{value: val, isSet: true}
}

func (v NullableK8sIoV1PodAntiAffinity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1PodAntiAffinity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


