/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1VolumeStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1VolumeStatus{}

// KubevirtIoApiCoreV1VolumeStatus struct for KubevirtIoApiCoreV1VolumeStatus
type KubevirtIoApiCoreV1VolumeStatus struct {
	HotplugVolume *KubevirtIoApiCoreV1HotplugVolumeStatus `json:"hotplugVolume,omitempty"`
	MemoryDumpVolume *KubevirtIoApiCoreV1DomainMemoryDumpInfo `json:"memoryDumpVolume,omitempty"`
	Message *string `json:"message,omitempty"`
	Name string `json:"name"`
	PersistentVolumeClaimInfo *KubevirtIoApiCoreV1PersistentVolumeClaimInfo `json:"persistentVolumeClaimInfo,omitempty"`
	Phase *string `json:"phase,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Size *int64 `json:"size,omitempty"`
	Target string `json:"target"`
}

type _KubevirtIoApiCoreV1VolumeStatus KubevirtIoApiCoreV1VolumeStatus

// NewKubevirtIoApiCoreV1VolumeStatus instantiates a new KubevirtIoApiCoreV1VolumeStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1VolumeStatus(name string, target string) *KubevirtIoApiCoreV1VolumeStatus {
	this := KubevirtIoApiCoreV1VolumeStatus{}
	this.Name = name
	this.Target = target
	return &this
}

// NewKubevirtIoApiCoreV1VolumeStatusWithDefaults instantiates a new KubevirtIoApiCoreV1VolumeStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1VolumeStatusWithDefaults() *KubevirtIoApiCoreV1VolumeStatus {
	this := KubevirtIoApiCoreV1VolumeStatus{}
	var name string = ""
	this.Name = name
	var target string = ""
	this.Target = target
	return &this
}

// GetHotplugVolume returns the HotplugVolume field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetHotplugVolume() KubevirtIoApiCoreV1HotplugVolumeStatus {
	if o == nil || IsNil(o.HotplugVolume) {
		var ret KubevirtIoApiCoreV1HotplugVolumeStatus
		return ret
	}
	return *o.HotplugVolume
}

// GetHotplugVolumeOk returns a tuple with the HotplugVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetHotplugVolumeOk() (*KubevirtIoApiCoreV1HotplugVolumeStatus, bool) {
	if o == nil || IsNil(o.HotplugVolume) {
		return nil, false
	}
	return o.HotplugVolume, true
}

// HasHotplugVolume returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasHotplugVolume() bool {
	if o != nil && !IsNil(o.HotplugVolume) {
		return true
	}

	return false
}

// SetHotplugVolume gets a reference to the given KubevirtIoApiCoreV1HotplugVolumeStatus and assigns it to the HotplugVolume field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetHotplugVolume(v KubevirtIoApiCoreV1HotplugVolumeStatus) {
	o.HotplugVolume = &v
}

// GetMemoryDumpVolume returns the MemoryDumpVolume field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetMemoryDumpVolume() KubevirtIoApiCoreV1DomainMemoryDumpInfo {
	if o == nil || IsNil(o.MemoryDumpVolume) {
		var ret KubevirtIoApiCoreV1DomainMemoryDumpInfo
		return ret
	}
	return *o.MemoryDumpVolume
}

// GetMemoryDumpVolumeOk returns a tuple with the MemoryDumpVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetMemoryDumpVolumeOk() (*KubevirtIoApiCoreV1DomainMemoryDumpInfo, bool) {
	if o == nil || IsNil(o.MemoryDumpVolume) {
		return nil, false
	}
	return o.MemoryDumpVolume, true
}

// HasMemoryDumpVolume returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasMemoryDumpVolume() bool {
	if o != nil && !IsNil(o.MemoryDumpVolume) {
		return true
	}

	return false
}

// SetMemoryDumpVolume gets a reference to the given KubevirtIoApiCoreV1DomainMemoryDumpInfo and assigns it to the MemoryDumpVolume field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetMemoryDumpVolume(v KubevirtIoApiCoreV1DomainMemoryDumpInfo) {
	o.MemoryDumpVolume = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1VolumeStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1VolumeStatus) SetName(v string) {
	o.Name = v
}

// GetPersistentVolumeClaimInfo returns the PersistentVolumeClaimInfo field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetPersistentVolumeClaimInfo() KubevirtIoApiCoreV1PersistentVolumeClaimInfo {
	if o == nil || IsNil(o.PersistentVolumeClaimInfo) {
		var ret KubevirtIoApiCoreV1PersistentVolumeClaimInfo
		return ret
	}
	return *o.PersistentVolumeClaimInfo
}

// GetPersistentVolumeClaimInfoOk returns a tuple with the PersistentVolumeClaimInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetPersistentVolumeClaimInfoOk() (*KubevirtIoApiCoreV1PersistentVolumeClaimInfo, bool) {
	if o == nil || IsNil(o.PersistentVolumeClaimInfo) {
		return nil, false
	}
	return o.PersistentVolumeClaimInfo, true
}

// HasPersistentVolumeClaimInfo returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasPersistentVolumeClaimInfo() bool {
	if o != nil && !IsNil(o.PersistentVolumeClaimInfo) {
		return true
	}

	return false
}

// SetPersistentVolumeClaimInfo gets a reference to the given KubevirtIoApiCoreV1PersistentVolumeClaimInfo and assigns it to the PersistentVolumeClaimInfo field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetPersistentVolumeClaimInfo(v KubevirtIoApiCoreV1PersistentVolumeClaimInfo) {
	o.PersistentVolumeClaimInfo = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetPhase(v string) {
	o.Phase = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetReason(v string) {
	o.Reason = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *KubevirtIoApiCoreV1VolumeStatus) SetSize(v int64) {
	o.Size = &v
}

// GetTarget returns the Target field value
func (o *KubevirtIoApiCoreV1VolumeStatus) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeStatus) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *KubevirtIoApiCoreV1VolumeStatus) SetTarget(v string) {
	o.Target = v
}

func (o KubevirtIoApiCoreV1VolumeStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1VolumeStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HotplugVolume) {
		toSerialize["hotplugVolume"] = o.HotplugVolume
	}
	if !IsNil(o.MemoryDumpVolume) {
		toSerialize["memoryDumpVolume"] = o.MemoryDumpVolume
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.PersistentVolumeClaimInfo) {
		toSerialize["persistentVolumeClaimInfo"] = o.PersistentVolumeClaimInfo
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	toSerialize["target"] = o.Target
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1VolumeStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1VolumeStatus := _KubevirtIoApiCoreV1VolumeStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1VolumeStatus)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1VolumeStatus(varKubevirtIoApiCoreV1VolumeStatus)

	return err
}

type NullableKubevirtIoApiCoreV1VolumeStatus struct {
	value *KubevirtIoApiCoreV1VolumeStatus
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1VolumeStatus) Get() *KubevirtIoApiCoreV1VolumeStatus {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1VolumeStatus) Set(val *KubevirtIoApiCoreV1VolumeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1VolumeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1VolumeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1VolumeStatus(val *KubevirtIoApiCoreV1VolumeStatus) *NullableKubevirtIoApiCoreV1VolumeStatus {
	return &NullableKubevirtIoApiCoreV1VolumeStatus{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1VolumeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1VolumeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


