/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1SysprepSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1SysprepSource{}

// KubevirtIoApiCoreV1SysprepSource struct for KubevirtIoApiCoreV1SysprepSource
type KubevirtIoApiCoreV1SysprepSource struct {
	ConfigMap *K8sIoV1LocalObjectReference `json:"configMap,omitempty"`
	Secret *K8sIoV1LocalObjectReference `json:"secret,omitempty"`
}

// NewKubevirtIoApiCoreV1SysprepSource instantiates a new KubevirtIoApiCoreV1SysprepSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1SysprepSource() *KubevirtIoApiCoreV1SysprepSource {
	this := KubevirtIoApiCoreV1SysprepSource{}
	return &this
}

// NewKubevirtIoApiCoreV1SysprepSourceWithDefaults instantiates a new KubevirtIoApiCoreV1SysprepSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1SysprepSourceWithDefaults() *KubevirtIoApiCoreV1SysprepSource {
	this := KubevirtIoApiCoreV1SysprepSource{}
	return &this
}

// GetConfigMap returns the ConfigMap field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1SysprepSource) GetConfigMap() K8sIoV1LocalObjectReference {
	if o == nil || IsNil(o.ConfigMap) {
		var ret K8sIoV1LocalObjectReference
		return ret
	}
	return *o.ConfigMap
}

// GetConfigMapOk returns a tuple with the ConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1SysprepSource) GetConfigMapOk() (*K8sIoV1LocalObjectReference, bool) {
	if o == nil || IsNil(o.ConfigMap) {
		return nil, false
	}
	return o.ConfigMap, true
}

// HasConfigMap returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1SysprepSource) HasConfigMap() bool {
	if o != nil && !IsNil(o.ConfigMap) {
		return true
	}

	return false
}

// SetConfigMap gets a reference to the given K8sIoV1LocalObjectReference and assigns it to the ConfigMap field.
func (o *KubevirtIoApiCoreV1SysprepSource) SetConfigMap(v K8sIoV1LocalObjectReference) {
	o.ConfigMap = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1SysprepSource) GetSecret() K8sIoV1LocalObjectReference {
	if o == nil || IsNil(o.Secret) {
		var ret K8sIoV1LocalObjectReference
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1SysprepSource) GetSecretOk() (*K8sIoV1LocalObjectReference, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1SysprepSource) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given K8sIoV1LocalObjectReference and assigns it to the Secret field.
func (o *KubevirtIoApiCoreV1SysprepSource) SetSecret(v K8sIoV1LocalObjectReference) {
	o.Secret = &v
}

func (o KubevirtIoApiCoreV1SysprepSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1SysprepSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigMap) {
		toSerialize["configMap"] = o.ConfigMap
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1SysprepSource struct {
	value *KubevirtIoApiCoreV1SysprepSource
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1SysprepSource) Get() *KubevirtIoApiCoreV1SysprepSource {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1SysprepSource) Set(val *KubevirtIoApiCoreV1SysprepSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1SysprepSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1SysprepSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1SysprepSource(val *KubevirtIoApiCoreV1SysprepSource) *NullableKubevirtIoApiCoreV1SysprepSource {
	return &NullableKubevirtIoApiCoreV1SysprepSource{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1SysprepSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1SysprepSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


