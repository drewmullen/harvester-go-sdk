/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1Port type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Port{}

// KubevirtIoApiCoreV1Port struct for KubevirtIoApiCoreV1Port
type KubevirtIoApiCoreV1Port struct {
	Name *string `json:"name,omitempty"`
	Port int32 `json:"port"`
	Protocol *string `json:"protocol,omitempty"`
}

type _KubevirtIoApiCoreV1Port KubevirtIoApiCoreV1Port

// NewKubevirtIoApiCoreV1Port instantiates a new KubevirtIoApiCoreV1Port object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Port(port int32) *KubevirtIoApiCoreV1Port {
	this := KubevirtIoApiCoreV1Port{}
	this.Port = port
	return &this
}

// NewKubevirtIoApiCoreV1PortWithDefaults instantiates a new KubevirtIoApiCoreV1Port object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1PortWithDefaults() *KubevirtIoApiCoreV1Port {
	this := KubevirtIoApiCoreV1Port{}
	var port int32 = 0
	this.Port = port
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Port) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Port) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Port) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KubevirtIoApiCoreV1Port) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value
func (o *KubevirtIoApiCoreV1Port) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Port) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *KubevirtIoApiCoreV1Port) SetPort(v int32) {
	o.Port = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Port) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Port) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Port) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *KubevirtIoApiCoreV1Port) SetProtocol(v string) {
	o.Protocol = &v
}

func (o KubevirtIoApiCoreV1Port) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Port) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["port"] = o.Port
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1Port) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1Port := _KubevirtIoApiCoreV1Port{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1Port)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1Port(varKubevirtIoApiCoreV1Port)

	return err
}

type NullableKubevirtIoApiCoreV1Port struct {
	value *KubevirtIoApiCoreV1Port
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Port) Get() *KubevirtIoApiCoreV1Port {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Port) Set(val *KubevirtIoApiCoreV1Port) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Port) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Port) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Port(val *KubevirtIoApiCoreV1Port) *NullableKubevirtIoApiCoreV1Port {
	return &NullableKubevirtIoApiCoreV1Port{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Port) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Port) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


