/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the NetworkHarvesterhciIoV1beta1NodeNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkHarvesterhciIoV1beta1NodeNetwork{}

// NetworkHarvesterhciIoV1beta1NodeNetwork struct for NetworkHarvesterhciIoV1beta1NodeNetwork
type NetworkHarvesterhciIoV1beta1NodeNetwork struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	Metadata *K8sIoV1ObjectMeta `json:"metadata,omitempty"`
	Spec *NetworkHarvesterhciIoV1beta1NodeNetworkSpec `json:"spec,omitempty"`
	Status *NetworkHarvesterhciIoV1beta1NodeNetworkStatus `json:"status,omitempty"`
}

// NewNetworkHarvesterhciIoV1beta1NodeNetwork instantiates a new NetworkHarvesterhciIoV1beta1NodeNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkHarvesterhciIoV1beta1NodeNetwork() *NetworkHarvesterhciIoV1beta1NodeNetwork {
	this := NetworkHarvesterhciIoV1beta1NodeNetwork{}
	var metadata K8sIoV1ObjectMeta
	this.Metadata = &metadata
	var spec NetworkHarvesterhciIoV1beta1NodeNetworkSpec
	this.Spec = &spec
	var status NetworkHarvesterhciIoV1beta1NodeNetworkStatus
	this.Status = &status
	return &this
}

// NewNetworkHarvesterhciIoV1beta1NodeNetworkWithDefaults instantiates a new NetworkHarvesterhciIoV1beta1NodeNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkHarvesterhciIoV1beta1NodeNetworkWithDefaults() *NetworkHarvesterhciIoV1beta1NodeNetwork {
	this := NetworkHarvesterhciIoV1beta1NodeNetwork{}
	var metadata K8sIoV1ObjectMeta
	this.Metadata = &metadata
	var spec NetworkHarvesterhciIoV1beta1NodeNetworkSpec
	this.Spec = &spec
	var status NetworkHarvesterhciIoV1beta1NodeNetworkStatus
	this.Status = &status
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetMetadata() K8sIoV1ObjectMeta {
	if o == nil || IsNil(o.Metadata) {
		var ret K8sIoV1ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetMetadataOk() (*K8sIoV1ObjectMeta, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given K8sIoV1ObjectMeta and assigns it to the Metadata field.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) SetMetadata(v K8sIoV1ObjectMeta) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetSpec() NetworkHarvesterhciIoV1beta1NodeNetworkSpec {
	if o == nil || IsNil(o.Spec) {
		var ret NetworkHarvesterhciIoV1beta1NodeNetworkSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetSpecOk() (*NetworkHarvesterhciIoV1beta1NodeNetworkSpec, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given NetworkHarvesterhciIoV1beta1NodeNetworkSpec and assigns it to the Spec field.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) SetSpec(v NetworkHarvesterhciIoV1beta1NodeNetworkSpec) {
	o.Spec = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetStatus() NetworkHarvesterhciIoV1beta1NodeNetworkStatus {
	if o == nil || IsNil(o.Status) {
		var ret NetworkHarvesterhciIoV1beta1NodeNetworkStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) GetStatusOk() (*NetworkHarvesterhciIoV1beta1NodeNetworkStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NetworkHarvesterhciIoV1beta1NodeNetworkStatus and assigns it to the Status field.
func (o *NetworkHarvesterhciIoV1beta1NodeNetwork) SetStatus(v NetworkHarvesterhciIoV1beta1NodeNetworkStatus) {
	o.Status = &v
}

func (o NetworkHarvesterhciIoV1beta1NodeNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkHarvesterhciIoV1beta1NodeNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableNetworkHarvesterhciIoV1beta1NodeNetwork struct {
	value *NetworkHarvesterhciIoV1beta1NodeNetwork
	isSet bool
}

func (v NullableNetworkHarvesterhciIoV1beta1NodeNetwork) Get() *NetworkHarvesterhciIoV1beta1NodeNetwork {
	return v.value
}

func (v *NullableNetworkHarvesterhciIoV1beta1NodeNetwork) Set(val *NetworkHarvesterhciIoV1beta1NodeNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkHarvesterhciIoV1beta1NodeNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkHarvesterhciIoV1beta1NodeNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkHarvesterhciIoV1beta1NodeNetwork(val *NetworkHarvesterhciIoV1beta1NodeNetwork) *NullableNetworkHarvesterhciIoV1beta1NodeNetwork {
	return &NullableNetworkHarvesterhciIoV1beta1NodeNetwork{value: val, isSet: true}
}

func (v NullableNetworkHarvesterhciIoV1beta1NodeNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkHarvesterhciIoV1beta1NodeNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


