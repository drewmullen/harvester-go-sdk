/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1HostDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1HostDevice{}

// KubevirtIoApiCoreV1HostDevice struct for KubevirtIoApiCoreV1HostDevice
type KubevirtIoApiCoreV1HostDevice struct {
	// DeviceName is the resource name of the host device exposed by a device plugin
	DeviceName string `json:"deviceName"`
	Name string `json:"name"`
	// If specified, the virtual network interface address and its tag will be provided to the guest via config drive
	Tag *string `json:"tag,omitempty"`
}

type _KubevirtIoApiCoreV1HostDevice KubevirtIoApiCoreV1HostDevice

// NewKubevirtIoApiCoreV1HostDevice instantiates a new KubevirtIoApiCoreV1HostDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1HostDevice(deviceName string, name string) *KubevirtIoApiCoreV1HostDevice {
	this := KubevirtIoApiCoreV1HostDevice{}
	this.DeviceName = deviceName
	this.Name = name
	return &this
}

// NewKubevirtIoApiCoreV1HostDeviceWithDefaults instantiates a new KubevirtIoApiCoreV1HostDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1HostDeviceWithDefaults() *KubevirtIoApiCoreV1HostDevice {
	this := KubevirtIoApiCoreV1HostDevice{}
	var deviceName string = ""
	this.DeviceName = deviceName
	var name string = ""
	this.Name = name
	return &this
}

// GetDeviceName returns the DeviceName field value
func (o *KubevirtIoApiCoreV1HostDevice) GetDeviceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HostDevice) GetDeviceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceName, true
}

// SetDeviceName sets field value
func (o *KubevirtIoApiCoreV1HostDevice) SetDeviceName(v string) {
	o.DeviceName = v
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1HostDevice) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HostDevice) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1HostDevice) SetName(v string) {
	o.Name = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HostDevice) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HostDevice) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HostDevice) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *KubevirtIoApiCoreV1HostDevice) SetTag(v string) {
	o.Tag = &v
}

func (o KubevirtIoApiCoreV1HostDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1HostDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deviceName"] = o.DeviceName
	toSerialize["name"] = o.Name
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1HostDevice) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deviceName",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1HostDevice := _KubevirtIoApiCoreV1HostDevice{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1HostDevice)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1HostDevice(varKubevirtIoApiCoreV1HostDevice)

	return err
}

type NullableKubevirtIoApiCoreV1HostDevice struct {
	value *KubevirtIoApiCoreV1HostDevice
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1HostDevice) Get() *KubevirtIoApiCoreV1HostDevice {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1HostDevice) Set(val *KubevirtIoApiCoreV1HostDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1HostDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1HostDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1HostDevice(val *KubevirtIoApiCoreV1HostDevice) *NullableKubevirtIoApiCoreV1HostDevice {
	return &NullableKubevirtIoApiCoreV1HostDevice{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1HostDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1HostDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


