/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1TopologyHints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1TopologyHints{}

// KubevirtIoApiCoreV1TopologyHints struct for KubevirtIoApiCoreV1TopologyHints
type KubevirtIoApiCoreV1TopologyHints struct {
	TscFrequency *int64 `json:"tscFrequency,omitempty"`
}

// NewKubevirtIoApiCoreV1TopologyHints instantiates a new KubevirtIoApiCoreV1TopologyHints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1TopologyHints() *KubevirtIoApiCoreV1TopologyHints {
	this := KubevirtIoApiCoreV1TopologyHints{}
	return &this
}

// NewKubevirtIoApiCoreV1TopologyHintsWithDefaults instantiates a new KubevirtIoApiCoreV1TopologyHints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1TopologyHintsWithDefaults() *KubevirtIoApiCoreV1TopologyHints {
	this := KubevirtIoApiCoreV1TopologyHints{}
	return &this
}

// GetTscFrequency returns the TscFrequency field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1TopologyHints) GetTscFrequency() int64 {
	if o == nil || IsNil(o.TscFrequency) {
		var ret int64
		return ret
	}
	return *o.TscFrequency
}

// GetTscFrequencyOk returns a tuple with the TscFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1TopologyHints) GetTscFrequencyOk() (*int64, bool) {
	if o == nil || IsNil(o.TscFrequency) {
		return nil, false
	}
	return o.TscFrequency, true
}

// HasTscFrequency returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1TopologyHints) HasTscFrequency() bool {
	if o != nil && !IsNil(o.TscFrequency) {
		return true
	}

	return false
}

// SetTscFrequency gets a reference to the given int64 and assigns it to the TscFrequency field.
func (o *KubevirtIoApiCoreV1TopologyHints) SetTscFrequency(v int64) {
	o.TscFrequency = &v
}

func (o KubevirtIoApiCoreV1TopologyHints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1TopologyHints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TscFrequency) {
		toSerialize["tscFrequency"] = o.TscFrequency
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1TopologyHints struct {
	value *KubevirtIoApiCoreV1TopologyHints
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1TopologyHints) Get() *KubevirtIoApiCoreV1TopologyHints {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1TopologyHints) Set(val *KubevirtIoApiCoreV1TopologyHints) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1TopologyHints) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1TopologyHints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1TopologyHints(val *KubevirtIoApiCoreV1TopologyHints) *NullableKubevirtIoApiCoreV1TopologyHints {
	return &NullableKubevirtIoApiCoreV1TopologyHints{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1TopologyHints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1TopologyHints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


