/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the K8sIoV1ManagedFieldsEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1ManagedFieldsEntry{}

// K8sIoV1ManagedFieldsEntry struct for K8sIoV1ManagedFieldsEntry
type K8sIoV1ManagedFieldsEntry struct {
	ApiVersion *string `json:"apiVersion,omitempty"`
	FieldsType *string `json:"fieldsType,omitempty"`
	FieldsV1 map[string]interface{} `json:"fieldsV1,omitempty"`
	Manager *string `json:"manager,omitempty"`
	Operation *string `json:"operation,omitempty"`
	Subresource *string `json:"subresource,omitempty"`
	Time *string `json:"time,omitempty"`
}

// NewK8sIoV1ManagedFieldsEntry instantiates a new K8sIoV1ManagedFieldsEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1ManagedFieldsEntry() *K8sIoV1ManagedFieldsEntry {
	this := K8sIoV1ManagedFieldsEntry{}
	var time string = ""
	this.Time = &time
	return &this
}

// NewK8sIoV1ManagedFieldsEntryWithDefaults instantiates a new K8sIoV1ManagedFieldsEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1ManagedFieldsEntryWithDefaults() *K8sIoV1ManagedFieldsEntry {
	this := K8sIoV1ManagedFieldsEntry{}
	var time string = ""
	this.Time = &time
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *K8sIoV1ManagedFieldsEntry) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetFieldsType returns the FieldsType field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetFieldsType() string {
	if o == nil || IsNil(o.FieldsType) {
		var ret string
		return ret
	}
	return *o.FieldsType
}

// GetFieldsTypeOk returns a tuple with the FieldsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetFieldsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FieldsType) {
		return nil, false
	}
	return o.FieldsType, true
}

// HasFieldsType returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasFieldsType() bool {
	if o != nil && !IsNil(o.FieldsType) {
		return true
	}

	return false
}

// SetFieldsType gets a reference to the given string and assigns it to the FieldsType field.
func (o *K8sIoV1ManagedFieldsEntry) SetFieldsType(v string) {
	o.FieldsType = &v
}

// GetFieldsV1 returns the FieldsV1 field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetFieldsV1() map[string]interface{} {
	if o == nil || IsNil(o.FieldsV1) {
		var ret map[string]interface{}
		return ret
	}
	return o.FieldsV1
}

// GetFieldsV1Ok returns a tuple with the FieldsV1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetFieldsV1Ok() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FieldsV1) {
		return map[string]interface{}{}, false
	}
	return o.FieldsV1, true
}

// HasFieldsV1 returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasFieldsV1() bool {
	if o != nil && !IsNil(o.FieldsV1) {
		return true
	}

	return false
}

// SetFieldsV1 gets a reference to the given map[string]interface{} and assigns it to the FieldsV1 field.
func (o *K8sIoV1ManagedFieldsEntry) SetFieldsV1(v map[string]interface{}) {
	o.FieldsV1 = v
}

// GetManager returns the Manager field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetManager() string {
	if o == nil || IsNil(o.Manager) {
		var ret string
		return ret
	}
	return *o.Manager
}

// GetManagerOk returns a tuple with the Manager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetManagerOk() (*string, bool) {
	if o == nil || IsNil(o.Manager) {
		return nil, false
	}
	return o.Manager, true
}

// HasManager returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasManager() bool {
	if o != nil && !IsNil(o.Manager) {
		return true
	}

	return false
}

// SetManager gets a reference to the given string and assigns it to the Manager field.
func (o *K8sIoV1ManagedFieldsEntry) SetManager(v string) {
	o.Manager = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *K8sIoV1ManagedFieldsEntry) SetOperation(v string) {
	o.Operation = &v
}

// GetSubresource returns the Subresource field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetSubresource() string {
	if o == nil || IsNil(o.Subresource) {
		var ret string
		return ret
	}
	return *o.Subresource
}

// GetSubresourceOk returns a tuple with the Subresource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetSubresourceOk() (*string, bool) {
	if o == nil || IsNil(o.Subresource) {
		return nil, false
	}
	return o.Subresource, true
}

// HasSubresource returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasSubresource() bool {
	if o != nil && !IsNil(o.Subresource) {
		return true
	}

	return false
}

// SetSubresource gets a reference to the given string and assigns it to the Subresource field.
func (o *K8sIoV1ManagedFieldsEntry) SetSubresource(v string) {
	o.Subresource = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *K8sIoV1ManagedFieldsEntry) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ManagedFieldsEntry) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *K8sIoV1ManagedFieldsEntry) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *K8sIoV1ManagedFieldsEntry) SetTime(v string) {
	o.Time = &v
}

func (o K8sIoV1ManagedFieldsEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1ManagedFieldsEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.FieldsType) {
		toSerialize["fieldsType"] = o.FieldsType
	}
	if !IsNil(o.FieldsV1) {
		toSerialize["fieldsV1"] = o.FieldsV1
	}
	if !IsNil(o.Manager) {
		toSerialize["manager"] = o.Manager
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Subresource) {
		toSerialize["subresource"] = o.Subresource
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableK8sIoV1ManagedFieldsEntry struct {
	value *K8sIoV1ManagedFieldsEntry
	isSet bool
}

func (v NullableK8sIoV1ManagedFieldsEntry) Get() *K8sIoV1ManagedFieldsEntry {
	return v.value
}

func (v *NullableK8sIoV1ManagedFieldsEntry) Set(val *K8sIoV1ManagedFieldsEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1ManagedFieldsEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1ManagedFieldsEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1ManagedFieldsEntry(val *K8sIoV1ManagedFieldsEntry) *NullableK8sIoV1ManagedFieldsEntry {
	return &NullableK8sIoV1ManagedFieldsEntry{value: val, isSet: true}
}

func (v NullableK8sIoV1ManagedFieldsEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1ManagedFieldsEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


