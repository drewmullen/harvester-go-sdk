/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1CloudInitNoCloudSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1CloudInitNoCloudSource{}

// KubevirtIoApiCoreV1CloudInitNoCloudSource struct for KubevirtIoApiCoreV1CloudInitNoCloudSource
type KubevirtIoApiCoreV1CloudInitNoCloudSource struct {
	NetworkData *string `json:"networkData,omitempty"`
	NetworkDataBase64 *string `json:"networkDataBase64,omitempty"`
	NetworkDataSecretRef *K8sIoV1LocalObjectReference `json:"networkDataSecretRef,omitempty"`
	SecretRef *K8sIoV1LocalObjectReference `json:"secretRef,omitempty"`
	UserData *string `json:"userData,omitempty"`
	UserDataBase64 *string `json:"userDataBase64,omitempty"`
}

// NewKubevirtIoApiCoreV1CloudInitNoCloudSource instantiates a new KubevirtIoApiCoreV1CloudInitNoCloudSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1CloudInitNoCloudSource() *KubevirtIoApiCoreV1CloudInitNoCloudSource {
	this := KubevirtIoApiCoreV1CloudInitNoCloudSource{}
	return &this
}

// NewKubevirtIoApiCoreV1CloudInitNoCloudSourceWithDefaults instantiates a new KubevirtIoApiCoreV1CloudInitNoCloudSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1CloudInitNoCloudSourceWithDefaults() *KubevirtIoApiCoreV1CloudInitNoCloudSource {
	this := KubevirtIoApiCoreV1CloudInitNoCloudSource{}
	return &this
}

// GetNetworkData returns the NetworkData field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkData() string {
	if o == nil || IsNil(o.NetworkData) {
		var ret string
		return ret
	}
	return *o.NetworkData
}

// GetNetworkDataOk returns a tuple with the NetworkData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkDataOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkData) {
		return nil, false
	}
	return o.NetworkData, true
}

// HasNetworkData returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasNetworkData() bool {
	if o != nil && !IsNil(o.NetworkData) {
		return true
	}

	return false
}

// SetNetworkData gets a reference to the given string and assigns it to the NetworkData field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetNetworkData(v string) {
	o.NetworkData = &v
}

// GetNetworkDataBase64 returns the NetworkDataBase64 field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkDataBase64() string {
	if o == nil || IsNil(o.NetworkDataBase64) {
		var ret string
		return ret
	}
	return *o.NetworkDataBase64
}

// GetNetworkDataBase64Ok returns a tuple with the NetworkDataBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkDataBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.NetworkDataBase64) {
		return nil, false
	}
	return o.NetworkDataBase64, true
}

// HasNetworkDataBase64 returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasNetworkDataBase64() bool {
	if o != nil && !IsNil(o.NetworkDataBase64) {
		return true
	}

	return false
}

// SetNetworkDataBase64 gets a reference to the given string and assigns it to the NetworkDataBase64 field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetNetworkDataBase64(v string) {
	o.NetworkDataBase64 = &v
}

// GetNetworkDataSecretRef returns the NetworkDataSecretRef field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkDataSecretRef() K8sIoV1LocalObjectReference {
	if o == nil || IsNil(o.NetworkDataSecretRef) {
		var ret K8sIoV1LocalObjectReference
		return ret
	}
	return *o.NetworkDataSecretRef
}

// GetNetworkDataSecretRefOk returns a tuple with the NetworkDataSecretRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetNetworkDataSecretRefOk() (*K8sIoV1LocalObjectReference, bool) {
	if o == nil || IsNil(o.NetworkDataSecretRef) {
		return nil, false
	}
	return o.NetworkDataSecretRef, true
}

// HasNetworkDataSecretRef returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasNetworkDataSecretRef() bool {
	if o != nil && !IsNil(o.NetworkDataSecretRef) {
		return true
	}

	return false
}

// SetNetworkDataSecretRef gets a reference to the given K8sIoV1LocalObjectReference and assigns it to the NetworkDataSecretRef field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetNetworkDataSecretRef(v K8sIoV1LocalObjectReference) {
	o.NetworkDataSecretRef = &v
}

// GetSecretRef returns the SecretRef field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetSecretRef() K8sIoV1LocalObjectReference {
	if o == nil || IsNil(o.SecretRef) {
		var ret K8sIoV1LocalObjectReference
		return ret
	}
	return *o.SecretRef
}

// GetSecretRefOk returns a tuple with the SecretRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetSecretRefOk() (*K8sIoV1LocalObjectReference, bool) {
	if o == nil || IsNil(o.SecretRef) {
		return nil, false
	}
	return o.SecretRef, true
}

// HasSecretRef returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasSecretRef() bool {
	if o != nil && !IsNil(o.SecretRef) {
		return true
	}

	return false
}

// SetSecretRef gets a reference to the given K8sIoV1LocalObjectReference and assigns it to the SecretRef field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetSecretRef(v K8sIoV1LocalObjectReference) {
	o.SecretRef = &v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetUserData() string {
	if o == nil || IsNil(o.UserData) {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetUserDataOk() (*string, bool) {
	if o == nil || IsNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasUserData() bool {
	if o != nil && !IsNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetUserData(v string) {
	o.UserData = &v
}

// GetUserDataBase64 returns the UserDataBase64 field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetUserDataBase64() string {
	if o == nil || IsNil(o.UserDataBase64) {
		var ret string
		return ret
	}
	return *o.UserDataBase64
}

// GetUserDataBase64Ok returns a tuple with the UserDataBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) GetUserDataBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.UserDataBase64) {
		return nil, false
	}
	return o.UserDataBase64, true
}

// HasUserDataBase64 returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) HasUserDataBase64() bool {
	if o != nil && !IsNil(o.UserDataBase64) {
		return true
	}

	return false
}

// SetUserDataBase64 gets a reference to the given string and assigns it to the UserDataBase64 field.
func (o *KubevirtIoApiCoreV1CloudInitNoCloudSource) SetUserDataBase64(v string) {
	o.UserDataBase64 = &v
}

func (o KubevirtIoApiCoreV1CloudInitNoCloudSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1CloudInitNoCloudSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkData) {
		toSerialize["networkData"] = o.NetworkData
	}
	if !IsNil(o.NetworkDataBase64) {
		toSerialize["networkDataBase64"] = o.NetworkDataBase64
	}
	if !IsNil(o.NetworkDataSecretRef) {
		toSerialize["networkDataSecretRef"] = o.NetworkDataSecretRef
	}
	if !IsNil(o.SecretRef) {
		toSerialize["secretRef"] = o.SecretRef
	}
	if !IsNil(o.UserData) {
		toSerialize["userData"] = o.UserData
	}
	if !IsNil(o.UserDataBase64) {
		toSerialize["userDataBase64"] = o.UserDataBase64
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1CloudInitNoCloudSource struct {
	value *KubevirtIoApiCoreV1CloudInitNoCloudSource
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) Get() *KubevirtIoApiCoreV1CloudInitNoCloudSource {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) Set(val *KubevirtIoApiCoreV1CloudInitNoCloudSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1CloudInitNoCloudSource(val *KubevirtIoApiCoreV1CloudInitNoCloudSource) *NullableKubevirtIoApiCoreV1CloudInitNoCloudSource {
	return &NullableKubevirtIoApiCoreV1CloudInitNoCloudSource{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1CloudInitNoCloudSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


