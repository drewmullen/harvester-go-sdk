/*
Harvester APIs

Testing VirtualMachineTemplatesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/drewmullen/harvester-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_VirtualMachineTemplatesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VirtualMachineTemplatesAPIService CreateNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.CreateNamespacedVirtualMachineTemplate(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService CreateNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.CreateNamespacedVirtualMachineTemplateVersion(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService DeleteNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.DeleteNamespacedVirtualMachineTemplate(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService DeleteNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.DeleteNamespacedVirtualMachineTemplateVersion(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ListNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ListNamespacedVirtualMachineTemplate(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ListNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ListNamespacedVirtualMachineTemplateVersion(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ListVirtualMachineTemplateForAllNamespaces", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ListVirtualMachineTemplateForAllNamespaces(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ListVirtualMachineTemplateVersionForAllNamespaces", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ListVirtualMachineTemplateVersionForAllNamespaces(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService PatchNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.PatchNamespacedVirtualMachineTemplate(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService PatchNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.PatchNamespacedVirtualMachineTemplateVersion(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ReadNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ReadNamespacedVirtualMachineTemplate(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ReadNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ReadNamespacedVirtualMachineTemplateVersion(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ReplaceNamespacedVirtualMachineTemplate", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ReplaceNamespacedVirtualMachineTemplate(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualMachineTemplatesAPIService ReplaceNamespacedVirtualMachineTemplateVersion", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.VirtualMachineTemplatesAPI.ReplaceNamespacedVirtualMachineTemplateVersion(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
