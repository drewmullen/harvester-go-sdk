/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1Network type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Network{}

// KubevirtIoApiCoreV1Network struct for KubevirtIoApiCoreV1Network
type KubevirtIoApiCoreV1Network struct {
	Multus *KubevirtIoApiCoreV1MultusNetwork `json:"multus,omitempty"`
	Name string `json:"name"`
	Pod *KubevirtIoApiCoreV1PodNetwork `json:"pod,omitempty"`
}

type _KubevirtIoApiCoreV1Network KubevirtIoApiCoreV1Network

// NewKubevirtIoApiCoreV1Network instantiates a new KubevirtIoApiCoreV1Network object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Network(name string) *KubevirtIoApiCoreV1Network {
	this := KubevirtIoApiCoreV1Network{}
	this.Name = name
	return &this
}

// NewKubevirtIoApiCoreV1NetworkWithDefaults instantiates a new KubevirtIoApiCoreV1Network object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1NetworkWithDefaults() *KubevirtIoApiCoreV1Network {
	this := KubevirtIoApiCoreV1Network{}
	var name string = ""
	this.Name = name
	return &this
}

// GetMultus returns the Multus field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Network) GetMultus() KubevirtIoApiCoreV1MultusNetwork {
	if o == nil || IsNil(o.Multus) {
		var ret KubevirtIoApiCoreV1MultusNetwork
		return ret
	}
	return *o.Multus
}

// GetMultusOk returns a tuple with the Multus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Network) GetMultusOk() (*KubevirtIoApiCoreV1MultusNetwork, bool) {
	if o == nil || IsNil(o.Multus) {
		return nil, false
	}
	return o.Multus, true
}

// HasMultus returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Network) HasMultus() bool {
	if o != nil && !IsNil(o.Multus) {
		return true
	}

	return false
}

// SetMultus gets a reference to the given KubevirtIoApiCoreV1MultusNetwork and assigns it to the Multus field.
func (o *KubevirtIoApiCoreV1Network) SetMultus(v KubevirtIoApiCoreV1MultusNetwork) {
	o.Multus = &v
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1Network) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Network) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1Network) SetName(v string) {
	o.Name = v
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Network) GetPod() KubevirtIoApiCoreV1PodNetwork {
	if o == nil || IsNil(o.Pod) {
		var ret KubevirtIoApiCoreV1PodNetwork
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Network) GetPodOk() (*KubevirtIoApiCoreV1PodNetwork, bool) {
	if o == nil || IsNil(o.Pod) {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Network) HasPod() bool {
	if o != nil && !IsNil(o.Pod) {
		return true
	}

	return false
}

// SetPod gets a reference to the given KubevirtIoApiCoreV1PodNetwork and assigns it to the Pod field.
func (o *KubevirtIoApiCoreV1Network) SetPod(v KubevirtIoApiCoreV1PodNetwork) {
	o.Pod = &v
}

func (o KubevirtIoApiCoreV1Network) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Network) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Multus) {
		toSerialize["multus"] = o.Multus
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Pod) {
		toSerialize["pod"] = o.Pod
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1Network) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1Network := _KubevirtIoApiCoreV1Network{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1Network)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1Network(varKubevirtIoApiCoreV1Network)

	return err
}

type NullableKubevirtIoApiCoreV1Network struct {
	value *KubevirtIoApiCoreV1Network
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Network) Get() *KubevirtIoApiCoreV1Network {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Network) Set(val *KubevirtIoApiCoreV1Network) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Network) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Network) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Network(val *KubevirtIoApiCoreV1Network) *NullableKubevirtIoApiCoreV1Network {
	return &NullableKubevirtIoApiCoreV1Network{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Network) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Network) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


