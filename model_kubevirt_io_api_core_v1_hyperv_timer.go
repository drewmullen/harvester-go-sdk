/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1HypervTimer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1HypervTimer{}

// KubevirtIoApiCoreV1HypervTimer struct for KubevirtIoApiCoreV1HypervTimer
type KubevirtIoApiCoreV1HypervTimer struct {
	Present *bool `json:"present,omitempty"`
}

// NewKubevirtIoApiCoreV1HypervTimer instantiates a new KubevirtIoApiCoreV1HypervTimer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1HypervTimer() *KubevirtIoApiCoreV1HypervTimer {
	this := KubevirtIoApiCoreV1HypervTimer{}
	return &this
}

// NewKubevirtIoApiCoreV1HypervTimerWithDefaults instantiates a new KubevirtIoApiCoreV1HypervTimer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1HypervTimerWithDefaults() *KubevirtIoApiCoreV1HypervTimer {
	this := KubevirtIoApiCoreV1HypervTimer{}
	return &this
}

// GetPresent returns the Present field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HypervTimer) GetPresent() bool {
	if o == nil || IsNil(o.Present) {
		var ret bool
		return ret
	}
	return *o.Present
}

// GetPresentOk returns a tuple with the Present field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HypervTimer) GetPresentOk() (*bool, bool) {
	if o == nil || IsNil(o.Present) {
		return nil, false
	}
	return o.Present, true
}

// HasPresent returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HypervTimer) HasPresent() bool {
	if o != nil && !IsNil(o.Present) {
		return true
	}

	return false
}

// SetPresent gets a reference to the given bool and assigns it to the Present field.
func (o *KubevirtIoApiCoreV1HypervTimer) SetPresent(v bool) {
	o.Present = &v
}

func (o KubevirtIoApiCoreV1HypervTimer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1HypervTimer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Present) {
		toSerialize["present"] = o.Present
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1HypervTimer struct {
	value *KubevirtIoApiCoreV1HypervTimer
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1HypervTimer) Get() *KubevirtIoApiCoreV1HypervTimer {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1HypervTimer) Set(val *KubevirtIoApiCoreV1HypervTimer) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1HypervTimer) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1HypervTimer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1HypervTimer(val *KubevirtIoApiCoreV1HypervTimer) *NullableKubevirtIoApiCoreV1HypervTimer {
	return &NullableKubevirtIoApiCoreV1HypervTimer{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1HypervTimer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1HypervTimer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


