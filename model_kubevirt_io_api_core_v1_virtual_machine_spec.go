/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1VirtualMachineSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1VirtualMachineSpec{}

// KubevirtIoApiCoreV1VirtualMachineSpec struct for KubevirtIoApiCoreV1VirtualMachineSpec
type KubevirtIoApiCoreV1VirtualMachineSpec struct {
	DataVolumeTemplates []KubevirtIoApiCoreV1DataVolumeTemplateSpec `json:"dataVolumeTemplates,omitempty"`
	Instancetype *KubevirtIoApiCoreV1InstancetypeMatcher `json:"instancetype,omitempty"`
	LiveUpdateFeatures *KubevirtIoApiCoreV1LiveUpdateFeatures `json:"liveUpdateFeatures,omitempty"`
	Preference *KubevirtIoApiCoreV1PreferenceMatcher `json:"preference,omitempty"`
	RunStrategy *string `json:"runStrategy,omitempty"`
	Running *bool `json:"running,omitempty"`
	Template KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec `json:"template"`
}

type _KubevirtIoApiCoreV1VirtualMachineSpec KubevirtIoApiCoreV1VirtualMachineSpec

// NewKubevirtIoApiCoreV1VirtualMachineSpec instantiates a new KubevirtIoApiCoreV1VirtualMachineSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1VirtualMachineSpec(template KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec) *KubevirtIoApiCoreV1VirtualMachineSpec {
	this := KubevirtIoApiCoreV1VirtualMachineSpec{}
	this.Template = template
	return &this
}

// NewKubevirtIoApiCoreV1VirtualMachineSpecWithDefaults instantiates a new KubevirtIoApiCoreV1VirtualMachineSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1VirtualMachineSpecWithDefaults() *KubevirtIoApiCoreV1VirtualMachineSpec {
	this := KubevirtIoApiCoreV1VirtualMachineSpec{}
	return &this
}

// GetDataVolumeTemplates returns the DataVolumeTemplates field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetDataVolumeTemplates() []KubevirtIoApiCoreV1DataVolumeTemplateSpec {
	if o == nil || IsNil(o.DataVolumeTemplates) {
		var ret []KubevirtIoApiCoreV1DataVolumeTemplateSpec
		return ret
	}
	return o.DataVolumeTemplates
}

// GetDataVolumeTemplatesOk returns a tuple with the DataVolumeTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetDataVolumeTemplatesOk() ([]KubevirtIoApiCoreV1DataVolumeTemplateSpec, bool) {
	if o == nil || IsNil(o.DataVolumeTemplates) {
		return nil, false
	}
	return o.DataVolumeTemplates, true
}

// HasDataVolumeTemplates returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasDataVolumeTemplates() bool {
	if o != nil && !IsNil(o.DataVolumeTemplates) {
		return true
	}

	return false
}

// SetDataVolumeTemplates gets a reference to the given []KubevirtIoApiCoreV1DataVolumeTemplateSpec and assigns it to the DataVolumeTemplates field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetDataVolumeTemplates(v []KubevirtIoApiCoreV1DataVolumeTemplateSpec) {
	o.DataVolumeTemplates = v
}

// GetInstancetype returns the Instancetype field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetInstancetype() KubevirtIoApiCoreV1InstancetypeMatcher {
	if o == nil || IsNil(o.Instancetype) {
		var ret KubevirtIoApiCoreV1InstancetypeMatcher
		return ret
	}
	return *o.Instancetype
}

// GetInstancetypeOk returns a tuple with the Instancetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetInstancetypeOk() (*KubevirtIoApiCoreV1InstancetypeMatcher, bool) {
	if o == nil || IsNil(o.Instancetype) {
		return nil, false
	}
	return o.Instancetype, true
}

// HasInstancetype returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasInstancetype() bool {
	if o != nil && !IsNil(o.Instancetype) {
		return true
	}

	return false
}

// SetInstancetype gets a reference to the given KubevirtIoApiCoreV1InstancetypeMatcher and assigns it to the Instancetype field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetInstancetype(v KubevirtIoApiCoreV1InstancetypeMatcher) {
	o.Instancetype = &v
}

// GetLiveUpdateFeatures returns the LiveUpdateFeatures field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetLiveUpdateFeatures() KubevirtIoApiCoreV1LiveUpdateFeatures {
	if o == nil || IsNil(o.LiveUpdateFeatures) {
		var ret KubevirtIoApiCoreV1LiveUpdateFeatures
		return ret
	}
	return *o.LiveUpdateFeatures
}

// GetLiveUpdateFeaturesOk returns a tuple with the LiveUpdateFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetLiveUpdateFeaturesOk() (*KubevirtIoApiCoreV1LiveUpdateFeatures, bool) {
	if o == nil || IsNil(o.LiveUpdateFeatures) {
		return nil, false
	}
	return o.LiveUpdateFeatures, true
}

// HasLiveUpdateFeatures returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasLiveUpdateFeatures() bool {
	if o != nil && !IsNil(o.LiveUpdateFeatures) {
		return true
	}

	return false
}

// SetLiveUpdateFeatures gets a reference to the given KubevirtIoApiCoreV1LiveUpdateFeatures and assigns it to the LiveUpdateFeatures field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetLiveUpdateFeatures(v KubevirtIoApiCoreV1LiveUpdateFeatures) {
	o.LiveUpdateFeatures = &v
}

// GetPreference returns the Preference field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetPreference() KubevirtIoApiCoreV1PreferenceMatcher {
	if o == nil || IsNil(o.Preference) {
		var ret KubevirtIoApiCoreV1PreferenceMatcher
		return ret
	}
	return *o.Preference
}

// GetPreferenceOk returns a tuple with the Preference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetPreferenceOk() (*KubevirtIoApiCoreV1PreferenceMatcher, bool) {
	if o == nil || IsNil(o.Preference) {
		return nil, false
	}
	return o.Preference, true
}

// HasPreference returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasPreference() bool {
	if o != nil && !IsNil(o.Preference) {
		return true
	}

	return false
}

// SetPreference gets a reference to the given KubevirtIoApiCoreV1PreferenceMatcher and assigns it to the Preference field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetPreference(v KubevirtIoApiCoreV1PreferenceMatcher) {
	o.Preference = &v
}

// GetRunStrategy returns the RunStrategy field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetRunStrategy() string {
	if o == nil || IsNil(o.RunStrategy) {
		var ret string
		return ret
	}
	return *o.RunStrategy
}

// GetRunStrategyOk returns a tuple with the RunStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetRunStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.RunStrategy) {
		return nil, false
	}
	return o.RunStrategy, true
}

// HasRunStrategy returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasRunStrategy() bool {
	if o != nil && !IsNil(o.RunStrategy) {
		return true
	}

	return false
}

// SetRunStrategy gets a reference to the given string and assigns it to the RunStrategy field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetRunStrategy(v string) {
	o.RunStrategy = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetRunning() bool {
	if o == nil || IsNil(o.Running) {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetRunning(v bool) {
	o.Running = &v
}

// GetTemplate returns the Template field value
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetTemplate() KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec {
	if o == nil {
		var ret KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) GetTemplateOk() (*KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *KubevirtIoApiCoreV1VirtualMachineSpec) SetTemplate(v KubevirtIoApiCoreV1VirtualMachineInstanceTemplateSpec) {
	o.Template = v
}

func (o KubevirtIoApiCoreV1VirtualMachineSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1VirtualMachineSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataVolumeTemplates) {
		toSerialize["dataVolumeTemplates"] = o.DataVolumeTemplates
	}
	if !IsNil(o.Instancetype) {
		toSerialize["instancetype"] = o.Instancetype
	}
	if !IsNil(o.LiveUpdateFeatures) {
		toSerialize["liveUpdateFeatures"] = o.LiveUpdateFeatures
	}
	if !IsNil(o.Preference) {
		toSerialize["preference"] = o.Preference
	}
	if !IsNil(o.RunStrategy) {
		toSerialize["runStrategy"] = o.RunStrategy
	}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	toSerialize["template"] = o.Template
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1VirtualMachineSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"template",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1VirtualMachineSpec := _KubevirtIoApiCoreV1VirtualMachineSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1VirtualMachineSpec)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1VirtualMachineSpec(varKubevirtIoApiCoreV1VirtualMachineSpec)

	return err
}

type NullableKubevirtIoApiCoreV1VirtualMachineSpec struct {
	value *KubevirtIoApiCoreV1VirtualMachineSpec
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineSpec) Get() *KubevirtIoApiCoreV1VirtualMachineSpec {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineSpec) Set(val *KubevirtIoApiCoreV1VirtualMachineSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1VirtualMachineSpec(val *KubevirtIoApiCoreV1VirtualMachineSpec) *NullableKubevirtIoApiCoreV1VirtualMachineSpec {
	return &NullableKubevirtIoApiCoreV1VirtualMachineSpec{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


