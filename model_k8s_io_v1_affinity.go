/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the K8sIoV1Affinity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1Affinity{}

// K8sIoV1Affinity Affinity is a group of affinity scheduling rules.
type K8sIoV1Affinity struct {
	// Describes node affinity scheduling rules for the pod.
	NodeAffinity *K8sIoV1NodeAffinity `json:"nodeAffinity,omitempty"`
	// Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
	PodAffinity *K8sIoV1PodAffinity `json:"podAffinity,omitempty"`
	// Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
	PodAntiAffinity *K8sIoV1PodAntiAffinity `json:"podAntiAffinity,omitempty"`
}

// NewK8sIoV1Affinity instantiates a new K8sIoV1Affinity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1Affinity() *K8sIoV1Affinity {
	this := K8sIoV1Affinity{}
	return &this
}

// NewK8sIoV1AffinityWithDefaults instantiates a new K8sIoV1Affinity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1AffinityWithDefaults() *K8sIoV1Affinity {
	this := K8sIoV1Affinity{}
	return &this
}

// GetNodeAffinity returns the NodeAffinity field value if set, zero value otherwise.
func (o *K8sIoV1Affinity) GetNodeAffinity() K8sIoV1NodeAffinity {
	if o == nil || IsNil(o.NodeAffinity) {
		var ret K8sIoV1NodeAffinity
		return ret
	}
	return *o.NodeAffinity
}

// GetNodeAffinityOk returns a tuple with the NodeAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Affinity) GetNodeAffinityOk() (*K8sIoV1NodeAffinity, bool) {
	if o == nil || IsNil(o.NodeAffinity) {
		return nil, false
	}
	return o.NodeAffinity, true
}

// HasNodeAffinity returns a boolean if a field has been set.
func (o *K8sIoV1Affinity) HasNodeAffinity() bool {
	if o != nil && !IsNil(o.NodeAffinity) {
		return true
	}

	return false
}

// SetNodeAffinity gets a reference to the given K8sIoV1NodeAffinity and assigns it to the NodeAffinity field.
func (o *K8sIoV1Affinity) SetNodeAffinity(v K8sIoV1NodeAffinity) {
	o.NodeAffinity = &v
}

// GetPodAffinity returns the PodAffinity field value if set, zero value otherwise.
func (o *K8sIoV1Affinity) GetPodAffinity() K8sIoV1PodAffinity {
	if o == nil || IsNil(o.PodAffinity) {
		var ret K8sIoV1PodAffinity
		return ret
	}
	return *o.PodAffinity
}

// GetPodAffinityOk returns a tuple with the PodAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Affinity) GetPodAffinityOk() (*K8sIoV1PodAffinity, bool) {
	if o == nil || IsNil(o.PodAffinity) {
		return nil, false
	}
	return o.PodAffinity, true
}

// HasPodAffinity returns a boolean if a field has been set.
func (o *K8sIoV1Affinity) HasPodAffinity() bool {
	if o != nil && !IsNil(o.PodAffinity) {
		return true
	}

	return false
}

// SetPodAffinity gets a reference to the given K8sIoV1PodAffinity and assigns it to the PodAffinity field.
func (o *K8sIoV1Affinity) SetPodAffinity(v K8sIoV1PodAffinity) {
	o.PodAffinity = &v
}

// GetPodAntiAffinity returns the PodAntiAffinity field value if set, zero value otherwise.
func (o *K8sIoV1Affinity) GetPodAntiAffinity() K8sIoV1PodAntiAffinity {
	if o == nil || IsNil(o.PodAntiAffinity) {
		var ret K8sIoV1PodAntiAffinity
		return ret
	}
	return *o.PodAntiAffinity
}

// GetPodAntiAffinityOk returns a tuple with the PodAntiAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Affinity) GetPodAntiAffinityOk() (*K8sIoV1PodAntiAffinity, bool) {
	if o == nil || IsNil(o.PodAntiAffinity) {
		return nil, false
	}
	return o.PodAntiAffinity, true
}

// HasPodAntiAffinity returns a boolean if a field has been set.
func (o *K8sIoV1Affinity) HasPodAntiAffinity() bool {
	if o != nil && !IsNil(o.PodAntiAffinity) {
		return true
	}

	return false
}

// SetPodAntiAffinity gets a reference to the given K8sIoV1PodAntiAffinity and assigns it to the PodAntiAffinity field.
func (o *K8sIoV1Affinity) SetPodAntiAffinity(v K8sIoV1PodAntiAffinity) {
	o.PodAntiAffinity = &v
}

func (o K8sIoV1Affinity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1Affinity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeAffinity) {
		toSerialize["nodeAffinity"] = o.NodeAffinity
	}
	if !IsNil(o.PodAffinity) {
		toSerialize["podAffinity"] = o.PodAffinity
	}
	if !IsNil(o.PodAntiAffinity) {
		toSerialize["podAntiAffinity"] = o.PodAntiAffinity
	}
	return toSerialize, nil
}

type NullableK8sIoV1Affinity struct {
	value *K8sIoV1Affinity
	isSet bool
}

func (v NullableK8sIoV1Affinity) Get() *K8sIoV1Affinity {
	return v.value
}

func (v *NullableK8sIoV1Affinity) Set(val *K8sIoV1Affinity) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1Affinity) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1Affinity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1Affinity(val *K8sIoV1Affinity) *NullableK8sIoV1Affinity {
	return &NullableK8sIoV1Affinity{value: val, isSet: true}
}

func (v NullableK8sIoV1Affinity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1Affinity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


