/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1Probe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Probe{}

// KubevirtIoApiCoreV1Probe struct for KubevirtIoApiCoreV1Probe
type KubevirtIoApiCoreV1Probe struct {
	Exec *K8sIoV1ExecAction `json:"exec,omitempty"`
	FailureThreshold *int32 `json:"failureThreshold,omitempty"`
	GuestAgentPing map[string]interface{} `json:"guestAgentPing,omitempty"`
	HttpGet *K8sIoV1HTTPGetAction `json:"httpGet,omitempty"`
	InitialDelaySeconds *int32 `json:"initialDelaySeconds,omitempty"`
	PeriodSeconds *int32 `json:"periodSeconds,omitempty"`
	SuccessThreshold *int32 `json:"successThreshold,omitempty"`
	TcpSocket *K8sIoV1TCPSocketAction `json:"tcpSocket,omitempty"`
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
}

// NewKubevirtIoApiCoreV1Probe instantiates a new KubevirtIoApiCoreV1Probe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Probe() *KubevirtIoApiCoreV1Probe {
	this := KubevirtIoApiCoreV1Probe{}
	return &this
}

// NewKubevirtIoApiCoreV1ProbeWithDefaults instantiates a new KubevirtIoApiCoreV1Probe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1ProbeWithDefaults() *KubevirtIoApiCoreV1Probe {
	this := KubevirtIoApiCoreV1Probe{}
	return &this
}

// GetExec returns the Exec field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetExec() K8sIoV1ExecAction {
	if o == nil || IsNil(o.Exec) {
		var ret K8sIoV1ExecAction
		return ret
	}
	return *o.Exec
}

// GetExecOk returns a tuple with the Exec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetExecOk() (*K8sIoV1ExecAction, bool) {
	if o == nil || IsNil(o.Exec) {
		return nil, false
	}
	return o.Exec, true
}

// HasExec returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasExec() bool {
	if o != nil && !IsNil(o.Exec) {
		return true
	}

	return false
}

// SetExec gets a reference to the given K8sIoV1ExecAction and assigns it to the Exec field.
func (o *KubevirtIoApiCoreV1Probe) SetExec(v K8sIoV1ExecAction) {
	o.Exec = &v
}

// GetFailureThreshold returns the FailureThreshold field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetFailureThreshold() int32 {
	if o == nil || IsNil(o.FailureThreshold) {
		var ret int32
		return ret
	}
	return *o.FailureThreshold
}

// GetFailureThresholdOk returns a tuple with the FailureThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetFailureThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.FailureThreshold) {
		return nil, false
	}
	return o.FailureThreshold, true
}

// HasFailureThreshold returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasFailureThreshold() bool {
	if o != nil && !IsNil(o.FailureThreshold) {
		return true
	}

	return false
}

// SetFailureThreshold gets a reference to the given int32 and assigns it to the FailureThreshold field.
func (o *KubevirtIoApiCoreV1Probe) SetFailureThreshold(v int32) {
	o.FailureThreshold = &v
}

// GetGuestAgentPing returns the GuestAgentPing field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetGuestAgentPing() map[string]interface{} {
	if o == nil || IsNil(o.GuestAgentPing) {
		var ret map[string]interface{}
		return ret
	}
	return o.GuestAgentPing
}

// GetGuestAgentPingOk returns a tuple with the GuestAgentPing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetGuestAgentPingOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.GuestAgentPing) {
		return map[string]interface{}{}, false
	}
	return o.GuestAgentPing, true
}

// HasGuestAgentPing returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasGuestAgentPing() bool {
	if o != nil && !IsNil(o.GuestAgentPing) {
		return true
	}

	return false
}

// SetGuestAgentPing gets a reference to the given map[string]interface{} and assigns it to the GuestAgentPing field.
func (o *KubevirtIoApiCoreV1Probe) SetGuestAgentPing(v map[string]interface{}) {
	o.GuestAgentPing = v
}

// GetHttpGet returns the HttpGet field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetHttpGet() K8sIoV1HTTPGetAction {
	if o == nil || IsNil(o.HttpGet) {
		var ret K8sIoV1HTTPGetAction
		return ret
	}
	return *o.HttpGet
}

// GetHttpGetOk returns a tuple with the HttpGet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetHttpGetOk() (*K8sIoV1HTTPGetAction, bool) {
	if o == nil || IsNil(o.HttpGet) {
		return nil, false
	}
	return o.HttpGet, true
}

// HasHttpGet returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasHttpGet() bool {
	if o != nil && !IsNil(o.HttpGet) {
		return true
	}

	return false
}

// SetHttpGet gets a reference to the given K8sIoV1HTTPGetAction and assigns it to the HttpGet field.
func (o *KubevirtIoApiCoreV1Probe) SetHttpGet(v K8sIoV1HTTPGetAction) {
	o.HttpGet = &v
}

// GetInitialDelaySeconds returns the InitialDelaySeconds field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetInitialDelaySeconds() int32 {
	if o == nil || IsNil(o.InitialDelaySeconds) {
		var ret int32
		return ret
	}
	return *o.InitialDelaySeconds
}

// GetInitialDelaySecondsOk returns a tuple with the InitialDelaySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetInitialDelaySecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialDelaySeconds) {
		return nil, false
	}
	return o.InitialDelaySeconds, true
}

// HasInitialDelaySeconds returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasInitialDelaySeconds() bool {
	if o != nil && !IsNil(o.InitialDelaySeconds) {
		return true
	}

	return false
}

// SetInitialDelaySeconds gets a reference to the given int32 and assigns it to the InitialDelaySeconds field.
func (o *KubevirtIoApiCoreV1Probe) SetInitialDelaySeconds(v int32) {
	o.InitialDelaySeconds = &v
}

// GetPeriodSeconds returns the PeriodSeconds field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetPeriodSeconds() int32 {
	if o == nil || IsNil(o.PeriodSeconds) {
		var ret int32
		return ret
	}
	return *o.PeriodSeconds
}

// GetPeriodSecondsOk returns a tuple with the PeriodSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetPeriodSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.PeriodSeconds) {
		return nil, false
	}
	return o.PeriodSeconds, true
}

// HasPeriodSeconds returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasPeriodSeconds() bool {
	if o != nil && !IsNil(o.PeriodSeconds) {
		return true
	}

	return false
}

// SetPeriodSeconds gets a reference to the given int32 and assigns it to the PeriodSeconds field.
func (o *KubevirtIoApiCoreV1Probe) SetPeriodSeconds(v int32) {
	o.PeriodSeconds = &v
}

// GetSuccessThreshold returns the SuccessThreshold field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetSuccessThreshold() int32 {
	if o == nil || IsNil(o.SuccessThreshold) {
		var ret int32
		return ret
	}
	return *o.SuccessThreshold
}

// GetSuccessThresholdOk returns a tuple with the SuccessThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetSuccessThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.SuccessThreshold) {
		return nil, false
	}
	return o.SuccessThreshold, true
}

// HasSuccessThreshold returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasSuccessThreshold() bool {
	if o != nil && !IsNil(o.SuccessThreshold) {
		return true
	}

	return false
}

// SetSuccessThreshold gets a reference to the given int32 and assigns it to the SuccessThreshold field.
func (o *KubevirtIoApiCoreV1Probe) SetSuccessThreshold(v int32) {
	o.SuccessThreshold = &v
}

// GetTcpSocket returns the TcpSocket field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetTcpSocket() K8sIoV1TCPSocketAction {
	if o == nil || IsNil(o.TcpSocket) {
		var ret K8sIoV1TCPSocketAction
		return ret
	}
	return *o.TcpSocket
}

// GetTcpSocketOk returns a tuple with the TcpSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetTcpSocketOk() (*K8sIoV1TCPSocketAction, bool) {
	if o == nil || IsNil(o.TcpSocket) {
		return nil, false
	}
	return o.TcpSocket, true
}

// HasTcpSocket returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasTcpSocket() bool {
	if o != nil && !IsNil(o.TcpSocket) {
		return true
	}

	return false
}

// SetTcpSocket gets a reference to the given K8sIoV1TCPSocketAction and assigns it to the TcpSocket field.
func (o *KubevirtIoApiCoreV1Probe) SetTcpSocket(v K8sIoV1TCPSocketAction) {
	o.TcpSocket = &v
}

// GetTimeoutSeconds returns the TimeoutSeconds field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Probe) GetTimeoutSeconds() int32 {
	if o == nil || IsNil(o.TimeoutSeconds) {
		var ret int32
		return ret
	}
	return *o.TimeoutSeconds
}

// GetTimeoutSecondsOk returns a tuple with the TimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Probe) GetTimeoutSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutSeconds) {
		return nil, false
	}
	return o.TimeoutSeconds, true
}

// HasTimeoutSeconds returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Probe) HasTimeoutSeconds() bool {
	if o != nil && !IsNil(o.TimeoutSeconds) {
		return true
	}

	return false
}

// SetTimeoutSeconds gets a reference to the given int32 and assigns it to the TimeoutSeconds field.
func (o *KubevirtIoApiCoreV1Probe) SetTimeoutSeconds(v int32) {
	o.TimeoutSeconds = &v
}

func (o KubevirtIoApiCoreV1Probe) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Probe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exec) {
		toSerialize["exec"] = o.Exec
	}
	if !IsNil(o.FailureThreshold) {
		toSerialize["failureThreshold"] = o.FailureThreshold
	}
	if !IsNil(o.GuestAgentPing) {
		toSerialize["guestAgentPing"] = o.GuestAgentPing
	}
	if !IsNil(o.HttpGet) {
		toSerialize["httpGet"] = o.HttpGet
	}
	if !IsNil(o.InitialDelaySeconds) {
		toSerialize["initialDelaySeconds"] = o.InitialDelaySeconds
	}
	if !IsNil(o.PeriodSeconds) {
		toSerialize["periodSeconds"] = o.PeriodSeconds
	}
	if !IsNil(o.SuccessThreshold) {
		toSerialize["successThreshold"] = o.SuccessThreshold
	}
	if !IsNil(o.TcpSocket) {
		toSerialize["tcpSocket"] = o.TcpSocket
	}
	if !IsNil(o.TimeoutSeconds) {
		toSerialize["timeoutSeconds"] = o.TimeoutSeconds
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1Probe struct {
	value *KubevirtIoApiCoreV1Probe
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Probe) Get() *KubevirtIoApiCoreV1Probe {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Probe) Set(val *KubevirtIoApiCoreV1Probe) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Probe) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Probe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Probe(val *KubevirtIoApiCoreV1Probe) *NullableKubevirtIoApiCoreV1Probe {
	return &NullableKubevirtIoApiCoreV1Probe{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Probe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Probe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


