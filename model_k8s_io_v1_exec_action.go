/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the K8sIoV1ExecAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1ExecAction{}

// K8sIoV1ExecAction ExecAction describes a \"run in container\" action.
type K8sIoV1ExecAction struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `json:"command,omitempty"`
}

// NewK8sIoV1ExecAction instantiates a new K8sIoV1ExecAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1ExecAction() *K8sIoV1ExecAction {
	this := K8sIoV1ExecAction{}
	return &this
}

// NewK8sIoV1ExecActionWithDefaults instantiates a new K8sIoV1ExecAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1ExecActionWithDefaults() *K8sIoV1ExecAction {
	this := K8sIoV1ExecAction{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *K8sIoV1ExecAction) GetCommand() []string {
	if o == nil || IsNil(o.Command) {
		var ret []string
		return ret
	}
	return o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1ExecAction) GetCommandOk() ([]string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *K8sIoV1ExecAction) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []string and assigns it to the Command field.
func (o *K8sIoV1ExecAction) SetCommand(v []string) {
	o.Command = v
}

func (o K8sIoV1ExecAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1ExecAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	return toSerialize, nil
}

type NullableK8sIoV1ExecAction struct {
	value *K8sIoV1ExecAction
	isSet bool
}

func (v NullableK8sIoV1ExecAction) Get() *K8sIoV1ExecAction {
	return v.value
}

func (v *NullableK8sIoV1ExecAction) Set(val *K8sIoV1ExecAction) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1ExecAction) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1ExecAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1ExecAction(val *K8sIoV1ExecAction) *NullableK8sIoV1ExecAction {
	return &NullableK8sIoV1ExecAction{value: val, isSet: true}
}

func (v NullableK8sIoV1ExecAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1ExecAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


