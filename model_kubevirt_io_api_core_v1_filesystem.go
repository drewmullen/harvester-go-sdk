/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1Filesystem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Filesystem{}

// KubevirtIoApiCoreV1Filesystem struct for KubevirtIoApiCoreV1Filesystem
type KubevirtIoApiCoreV1Filesystem struct {
	Name string `json:"name"`
	Virtiofs map[string]interface{} `json:"virtiofs"`
}

type _KubevirtIoApiCoreV1Filesystem KubevirtIoApiCoreV1Filesystem

// NewKubevirtIoApiCoreV1Filesystem instantiates a new KubevirtIoApiCoreV1Filesystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Filesystem(name string, virtiofs map[string]interface{}) *KubevirtIoApiCoreV1Filesystem {
	this := KubevirtIoApiCoreV1Filesystem{}
	this.Name = name
	this.Virtiofs = virtiofs
	return &this
}

// NewKubevirtIoApiCoreV1FilesystemWithDefaults instantiates a new KubevirtIoApiCoreV1Filesystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1FilesystemWithDefaults() *KubevirtIoApiCoreV1Filesystem {
	this := KubevirtIoApiCoreV1Filesystem{}
	var name string = ""
	this.Name = name
	return &this
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1Filesystem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Filesystem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1Filesystem) SetName(v string) {
	o.Name = v
}

// GetVirtiofs returns the Virtiofs field value
func (o *KubevirtIoApiCoreV1Filesystem) GetVirtiofs() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Virtiofs
}

// GetVirtiofsOk returns a tuple with the Virtiofs field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Filesystem) GetVirtiofsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Virtiofs, true
}

// SetVirtiofs sets field value
func (o *KubevirtIoApiCoreV1Filesystem) SetVirtiofs(v map[string]interface{}) {
	o.Virtiofs = v
}

func (o KubevirtIoApiCoreV1Filesystem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Filesystem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["virtiofs"] = o.Virtiofs
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1Filesystem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"virtiofs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1Filesystem := _KubevirtIoApiCoreV1Filesystem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1Filesystem)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1Filesystem(varKubevirtIoApiCoreV1Filesystem)

	return err
}

type NullableKubevirtIoApiCoreV1Filesystem struct {
	value *KubevirtIoApiCoreV1Filesystem
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Filesystem) Get() *KubevirtIoApiCoreV1Filesystem {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Filesystem) Set(val *KubevirtIoApiCoreV1Filesystem) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Filesystem) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Filesystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Filesystem(val *KubevirtIoApiCoreV1Filesystem) *NullableKubevirtIoApiCoreV1Filesystem {
	return &NullableKubevirtIoApiCoreV1Filesystem{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Filesystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Filesystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


