/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1HotplugVolumeStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1HotplugVolumeStatus{}

// KubevirtIoApiCoreV1HotplugVolumeStatus struct for KubevirtIoApiCoreV1HotplugVolumeStatus
type KubevirtIoApiCoreV1HotplugVolumeStatus struct {
	AttachPodName *string `json:"attachPodName,omitempty"`
	AttachPodUID *string `json:"attachPodUID,omitempty"`
}

// NewKubevirtIoApiCoreV1HotplugVolumeStatus instantiates a new KubevirtIoApiCoreV1HotplugVolumeStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1HotplugVolumeStatus() *KubevirtIoApiCoreV1HotplugVolumeStatus {
	this := KubevirtIoApiCoreV1HotplugVolumeStatus{}
	return &this
}

// NewKubevirtIoApiCoreV1HotplugVolumeStatusWithDefaults instantiates a new KubevirtIoApiCoreV1HotplugVolumeStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1HotplugVolumeStatusWithDefaults() *KubevirtIoApiCoreV1HotplugVolumeStatus {
	this := KubevirtIoApiCoreV1HotplugVolumeStatus{}
	return &this
}

// GetAttachPodName returns the AttachPodName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) GetAttachPodName() string {
	if o == nil || IsNil(o.AttachPodName) {
		var ret string
		return ret
	}
	return *o.AttachPodName
}

// GetAttachPodNameOk returns a tuple with the AttachPodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) GetAttachPodNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttachPodName) {
		return nil, false
	}
	return o.AttachPodName, true
}

// HasAttachPodName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) HasAttachPodName() bool {
	if o != nil && !IsNil(o.AttachPodName) {
		return true
	}

	return false
}

// SetAttachPodName gets a reference to the given string and assigns it to the AttachPodName field.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) SetAttachPodName(v string) {
	o.AttachPodName = &v
}

// GetAttachPodUID returns the AttachPodUID field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) GetAttachPodUID() string {
	if o == nil || IsNil(o.AttachPodUID) {
		var ret string
		return ret
	}
	return *o.AttachPodUID
}

// GetAttachPodUIDOk returns a tuple with the AttachPodUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) GetAttachPodUIDOk() (*string, bool) {
	if o == nil || IsNil(o.AttachPodUID) {
		return nil, false
	}
	return o.AttachPodUID, true
}

// HasAttachPodUID returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) HasAttachPodUID() bool {
	if o != nil && !IsNil(o.AttachPodUID) {
		return true
	}

	return false
}

// SetAttachPodUID gets a reference to the given string and assigns it to the AttachPodUID field.
func (o *KubevirtIoApiCoreV1HotplugVolumeStatus) SetAttachPodUID(v string) {
	o.AttachPodUID = &v
}

func (o KubevirtIoApiCoreV1HotplugVolumeStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1HotplugVolumeStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttachPodName) {
		toSerialize["attachPodName"] = o.AttachPodName
	}
	if !IsNil(o.AttachPodUID) {
		toSerialize["attachPodUID"] = o.AttachPodUID
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1HotplugVolumeStatus struct {
	value *KubevirtIoApiCoreV1HotplugVolumeStatus
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeStatus) Get() *KubevirtIoApiCoreV1HotplugVolumeStatus {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeStatus) Set(val *KubevirtIoApiCoreV1HotplugVolumeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1HotplugVolumeStatus(val *KubevirtIoApiCoreV1HotplugVolumeStatus) *NullableKubevirtIoApiCoreV1HotplugVolumeStatus {
	return &NullableKubevirtIoApiCoreV1HotplugVolumeStatus{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


