/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1HotplugVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1HotplugVolumeSource{}

// KubevirtIoApiCoreV1HotplugVolumeSource struct for KubevirtIoApiCoreV1HotplugVolumeSource
type KubevirtIoApiCoreV1HotplugVolumeSource struct {
	DataVolume *KubevirtIoApiCoreV1DataVolumeSource `json:"dataVolume,omitempty"`
	PersistentVolumeClaim *KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource `json:"persistentVolumeClaim,omitempty"`
}

// NewKubevirtIoApiCoreV1HotplugVolumeSource instantiates a new KubevirtIoApiCoreV1HotplugVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1HotplugVolumeSource() *KubevirtIoApiCoreV1HotplugVolumeSource {
	this := KubevirtIoApiCoreV1HotplugVolumeSource{}
	return &this
}

// NewKubevirtIoApiCoreV1HotplugVolumeSourceWithDefaults instantiates a new KubevirtIoApiCoreV1HotplugVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1HotplugVolumeSourceWithDefaults() *KubevirtIoApiCoreV1HotplugVolumeSource {
	this := KubevirtIoApiCoreV1HotplugVolumeSource{}
	return &this
}

// GetDataVolume returns the DataVolume field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) GetDataVolume() KubevirtIoApiCoreV1DataVolumeSource {
	if o == nil || IsNil(o.DataVolume) {
		var ret KubevirtIoApiCoreV1DataVolumeSource
		return ret
	}
	return *o.DataVolume
}

// GetDataVolumeOk returns a tuple with the DataVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) GetDataVolumeOk() (*KubevirtIoApiCoreV1DataVolumeSource, bool) {
	if o == nil || IsNil(o.DataVolume) {
		return nil, false
	}
	return o.DataVolume, true
}

// HasDataVolume returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) HasDataVolume() bool {
	if o != nil && !IsNil(o.DataVolume) {
		return true
	}

	return false
}

// SetDataVolume gets a reference to the given KubevirtIoApiCoreV1DataVolumeSource and assigns it to the DataVolume field.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) SetDataVolume(v KubevirtIoApiCoreV1DataVolumeSource) {
	o.DataVolume = &v
}

// GetPersistentVolumeClaim returns the PersistentVolumeClaim field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) GetPersistentVolumeClaim() KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource {
	if o == nil || IsNil(o.PersistentVolumeClaim) {
		var ret KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource
		return ret
	}
	return *o.PersistentVolumeClaim
}

// GetPersistentVolumeClaimOk returns a tuple with the PersistentVolumeClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) GetPersistentVolumeClaimOk() (*KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource, bool) {
	if o == nil || IsNil(o.PersistentVolumeClaim) {
		return nil, false
	}
	return o.PersistentVolumeClaim, true
}

// HasPersistentVolumeClaim returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) HasPersistentVolumeClaim() bool {
	if o != nil && !IsNil(o.PersistentVolumeClaim) {
		return true
	}

	return false
}

// SetPersistentVolumeClaim gets a reference to the given KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource and assigns it to the PersistentVolumeClaim field.
func (o *KubevirtIoApiCoreV1HotplugVolumeSource) SetPersistentVolumeClaim(v KubevirtIoApiCoreV1PersistentVolumeClaimVolumeSource) {
	o.PersistentVolumeClaim = &v
}

func (o KubevirtIoApiCoreV1HotplugVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1HotplugVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataVolume) {
		toSerialize["dataVolume"] = o.DataVolume
	}
	if !IsNil(o.PersistentVolumeClaim) {
		toSerialize["persistentVolumeClaim"] = o.PersistentVolumeClaim
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1HotplugVolumeSource struct {
	value *KubevirtIoApiCoreV1HotplugVolumeSource
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeSource) Get() *KubevirtIoApiCoreV1HotplugVolumeSource {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeSource) Set(val *KubevirtIoApiCoreV1HotplugVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1HotplugVolumeSource(val *KubevirtIoApiCoreV1HotplugVolumeSource) *NullableKubevirtIoApiCoreV1HotplugVolumeSource {
	return &NullableKubevirtIoApiCoreV1HotplugVolumeSource{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1HotplugVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1HotplugVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


