/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1Devices type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Devices{}

// KubevirtIoApiCoreV1Devices struct for KubevirtIoApiCoreV1Devices
type KubevirtIoApiCoreV1Devices struct {
	AutoattachGraphicsDevice *bool `json:"autoattachGraphicsDevice,omitempty"`
	AutoattachInputDevice *bool `json:"autoattachInputDevice,omitempty"`
	AutoattachMemBalloon *bool `json:"autoattachMemBalloon,omitempty"`
	AutoattachPodInterface *bool `json:"autoattachPodInterface,omitempty"`
	AutoattachSerialConsole *bool `json:"autoattachSerialConsole,omitempty"`
	AutoattachVSOCK *bool `json:"autoattachVSOCK,omitempty"`
	BlockMultiQueue *bool `json:"blockMultiQueue,omitempty"`
	ClientPassthrough map[string]interface{} `json:"clientPassthrough,omitempty"`
	DisableHotplug *bool `json:"disableHotplug,omitempty"`
	Disks []KubevirtIoApiCoreV1Disk `json:"disks,omitempty"`
	DownwardMetrics map[string]interface{} `json:"downwardMetrics,omitempty"`
	Filesystems []KubevirtIoApiCoreV1Filesystem `json:"filesystems,omitempty"`
	Gpus []KubevirtIoApiCoreV1GPU `json:"gpus,omitempty"`
	HostDevices []KubevirtIoApiCoreV1HostDevice `json:"hostDevices,omitempty"`
	Inputs []KubevirtIoApiCoreV1Input `json:"inputs,omitempty"`
	Interfaces []KubevirtIoApiCoreV1Interface `json:"interfaces,omitempty"`
	LogSerialConsole *bool `json:"logSerialConsole,omitempty"`
	NetworkInterfaceMultiqueue *bool `json:"networkInterfaceMultiqueue,omitempty"`
	Rng map[string]interface{} `json:"rng,omitempty"`
	Sound *KubevirtIoApiCoreV1SoundDevice `json:"sound,omitempty"`
	Tpm *KubevirtIoApiCoreV1TPMDevice `json:"tpm,omitempty"`
	UseVirtioTransitional *bool `json:"useVirtioTransitional,omitempty"`
	Watchdog *KubevirtIoApiCoreV1Watchdog `json:"watchdog,omitempty"`
}

// NewKubevirtIoApiCoreV1Devices instantiates a new KubevirtIoApiCoreV1Devices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Devices() *KubevirtIoApiCoreV1Devices {
	this := KubevirtIoApiCoreV1Devices{}
	return &this
}

// NewKubevirtIoApiCoreV1DevicesWithDefaults instantiates a new KubevirtIoApiCoreV1Devices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1DevicesWithDefaults() *KubevirtIoApiCoreV1Devices {
	this := KubevirtIoApiCoreV1Devices{}
	return &this
}

// GetAutoattachGraphicsDevice returns the AutoattachGraphicsDevice field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachGraphicsDevice() bool {
	if o == nil || IsNil(o.AutoattachGraphicsDevice) {
		var ret bool
		return ret
	}
	return *o.AutoattachGraphicsDevice
}

// GetAutoattachGraphicsDeviceOk returns a tuple with the AutoattachGraphicsDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachGraphicsDeviceOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachGraphicsDevice) {
		return nil, false
	}
	return o.AutoattachGraphicsDevice, true
}

// HasAutoattachGraphicsDevice returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachGraphicsDevice() bool {
	if o != nil && !IsNil(o.AutoattachGraphicsDevice) {
		return true
	}

	return false
}

// SetAutoattachGraphicsDevice gets a reference to the given bool and assigns it to the AutoattachGraphicsDevice field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachGraphicsDevice(v bool) {
	o.AutoattachGraphicsDevice = &v
}

// GetAutoattachInputDevice returns the AutoattachInputDevice field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachInputDevice() bool {
	if o == nil || IsNil(o.AutoattachInputDevice) {
		var ret bool
		return ret
	}
	return *o.AutoattachInputDevice
}

// GetAutoattachInputDeviceOk returns a tuple with the AutoattachInputDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachInputDeviceOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachInputDevice) {
		return nil, false
	}
	return o.AutoattachInputDevice, true
}

// HasAutoattachInputDevice returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachInputDevice() bool {
	if o != nil && !IsNil(o.AutoattachInputDevice) {
		return true
	}

	return false
}

// SetAutoattachInputDevice gets a reference to the given bool and assigns it to the AutoattachInputDevice field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachInputDevice(v bool) {
	o.AutoattachInputDevice = &v
}

// GetAutoattachMemBalloon returns the AutoattachMemBalloon field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachMemBalloon() bool {
	if o == nil || IsNil(o.AutoattachMemBalloon) {
		var ret bool
		return ret
	}
	return *o.AutoattachMemBalloon
}

// GetAutoattachMemBalloonOk returns a tuple with the AutoattachMemBalloon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachMemBalloonOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachMemBalloon) {
		return nil, false
	}
	return o.AutoattachMemBalloon, true
}

// HasAutoattachMemBalloon returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachMemBalloon() bool {
	if o != nil && !IsNil(o.AutoattachMemBalloon) {
		return true
	}

	return false
}

// SetAutoattachMemBalloon gets a reference to the given bool and assigns it to the AutoattachMemBalloon field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachMemBalloon(v bool) {
	o.AutoattachMemBalloon = &v
}

// GetAutoattachPodInterface returns the AutoattachPodInterface field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachPodInterface() bool {
	if o == nil || IsNil(o.AutoattachPodInterface) {
		var ret bool
		return ret
	}
	return *o.AutoattachPodInterface
}

// GetAutoattachPodInterfaceOk returns a tuple with the AutoattachPodInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachPodInterfaceOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachPodInterface) {
		return nil, false
	}
	return o.AutoattachPodInterface, true
}

// HasAutoattachPodInterface returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachPodInterface() bool {
	if o != nil && !IsNil(o.AutoattachPodInterface) {
		return true
	}

	return false
}

// SetAutoattachPodInterface gets a reference to the given bool and assigns it to the AutoattachPodInterface field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachPodInterface(v bool) {
	o.AutoattachPodInterface = &v
}

// GetAutoattachSerialConsole returns the AutoattachSerialConsole field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachSerialConsole() bool {
	if o == nil || IsNil(o.AutoattachSerialConsole) {
		var ret bool
		return ret
	}
	return *o.AutoattachSerialConsole
}

// GetAutoattachSerialConsoleOk returns a tuple with the AutoattachSerialConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachSerialConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachSerialConsole) {
		return nil, false
	}
	return o.AutoattachSerialConsole, true
}

// HasAutoattachSerialConsole returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachSerialConsole() bool {
	if o != nil && !IsNil(o.AutoattachSerialConsole) {
		return true
	}

	return false
}

// SetAutoattachSerialConsole gets a reference to the given bool and assigns it to the AutoattachSerialConsole field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachSerialConsole(v bool) {
	o.AutoattachSerialConsole = &v
}

// GetAutoattachVSOCK returns the AutoattachVSOCK field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachVSOCK() bool {
	if o == nil || IsNil(o.AutoattachVSOCK) {
		var ret bool
		return ret
	}
	return *o.AutoattachVSOCK
}

// GetAutoattachVSOCKOk returns a tuple with the AutoattachVSOCK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetAutoattachVSOCKOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoattachVSOCK) {
		return nil, false
	}
	return o.AutoattachVSOCK, true
}

// HasAutoattachVSOCK returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasAutoattachVSOCK() bool {
	if o != nil && !IsNil(o.AutoattachVSOCK) {
		return true
	}

	return false
}

// SetAutoattachVSOCK gets a reference to the given bool and assigns it to the AutoattachVSOCK field.
func (o *KubevirtIoApiCoreV1Devices) SetAutoattachVSOCK(v bool) {
	o.AutoattachVSOCK = &v
}

// GetBlockMultiQueue returns the BlockMultiQueue field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetBlockMultiQueue() bool {
	if o == nil || IsNil(o.BlockMultiQueue) {
		var ret bool
		return ret
	}
	return *o.BlockMultiQueue
}

// GetBlockMultiQueueOk returns a tuple with the BlockMultiQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetBlockMultiQueueOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockMultiQueue) {
		return nil, false
	}
	return o.BlockMultiQueue, true
}

// HasBlockMultiQueue returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasBlockMultiQueue() bool {
	if o != nil && !IsNil(o.BlockMultiQueue) {
		return true
	}

	return false
}

// SetBlockMultiQueue gets a reference to the given bool and assigns it to the BlockMultiQueue field.
func (o *KubevirtIoApiCoreV1Devices) SetBlockMultiQueue(v bool) {
	o.BlockMultiQueue = &v
}

// GetClientPassthrough returns the ClientPassthrough field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetClientPassthrough() map[string]interface{} {
	if o == nil || IsNil(o.ClientPassthrough) {
		var ret map[string]interface{}
		return ret
	}
	return o.ClientPassthrough
}

// GetClientPassthroughOk returns a tuple with the ClientPassthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetClientPassthroughOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ClientPassthrough) {
		return map[string]interface{}{}, false
	}
	return o.ClientPassthrough, true
}

// HasClientPassthrough returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasClientPassthrough() bool {
	if o != nil && !IsNil(o.ClientPassthrough) {
		return true
	}

	return false
}

// SetClientPassthrough gets a reference to the given map[string]interface{} and assigns it to the ClientPassthrough field.
func (o *KubevirtIoApiCoreV1Devices) SetClientPassthrough(v map[string]interface{}) {
	o.ClientPassthrough = v
}

// GetDisableHotplug returns the DisableHotplug field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetDisableHotplug() bool {
	if o == nil || IsNil(o.DisableHotplug) {
		var ret bool
		return ret
	}
	return *o.DisableHotplug
}

// GetDisableHotplugOk returns a tuple with the DisableHotplug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetDisableHotplugOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableHotplug) {
		return nil, false
	}
	return o.DisableHotplug, true
}

// HasDisableHotplug returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasDisableHotplug() bool {
	if o != nil && !IsNil(o.DisableHotplug) {
		return true
	}

	return false
}

// SetDisableHotplug gets a reference to the given bool and assigns it to the DisableHotplug field.
func (o *KubevirtIoApiCoreV1Devices) SetDisableHotplug(v bool) {
	o.DisableHotplug = &v
}

// GetDisks returns the Disks field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetDisks() []KubevirtIoApiCoreV1Disk {
	if o == nil || IsNil(o.Disks) {
		var ret []KubevirtIoApiCoreV1Disk
		return ret
	}
	return o.Disks
}

// GetDisksOk returns a tuple with the Disks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetDisksOk() ([]KubevirtIoApiCoreV1Disk, bool) {
	if o == nil || IsNil(o.Disks) {
		return nil, false
	}
	return o.Disks, true
}

// HasDisks returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasDisks() bool {
	if o != nil && !IsNil(o.Disks) {
		return true
	}

	return false
}

// SetDisks gets a reference to the given []KubevirtIoApiCoreV1Disk and assigns it to the Disks field.
func (o *KubevirtIoApiCoreV1Devices) SetDisks(v []KubevirtIoApiCoreV1Disk) {
	o.Disks = v
}

// GetDownwardMetrics returns the DownwardMetrics field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetDownwardMetrics() map[string]interface{} {
	if o == nil || IsNil(o.DownwardMetrics) {
		var ret map[string]interface{}
		return ret
	}
	return o.DownwardMetrics
}

// GetDownwardMetricsOk returns a tuple with the DownwardMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetDownwardMetricsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DownwardMetrics) {
		return map[string]interface{}{}, false
	}
	return o.DownwardMetrics, true
}

// HasDownwardMetrics returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasDownwardMetrics() bool {
	if o != nil && !IsNil(o.DownwardMetrics) {
		return true
	}

	return false
}

// SetDownwardMetrics gets a reference to the given map[string]interface{} and assigns it to the DownwardMetrics field.
func (o *KubevirtIoApiCoreV1Devices) SetDownwardMetrics(v map[string]interface{}) {
	o.DownwardMetrics = v
}

// GetFilesystems returns the Filesystems field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetFilesystems() []KubevirtIoApiCoreV1Filesystem {
	if o == nil || IsNil(o.Filesystems) {
		var ret []KubevirtIoApiCoreV1Filesystem
		return ret
	}
	return o.Filesystems
}

// GetFilesystemsOk returns a tuple with the Filesystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetFilesystemsOk() ([]KubevirtIoApiCoreV1Filesystem, bool) {
	if o == nil || IsNil(o.Filesystems) {
		return nil, false
	}
	return o.Filesystems, true
}

// HasFilesystems returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasFilesystems() bool {
	if o != nil && !IsNil(o.Filesystems) {
		return true
	}

	return false
}

// SetFilesystems gets a reference to the given []KubevirtIoApiCoreV1Filesystem and assigns it to the Filesystems field.
func (o *KubevirtIoApiCoreV1Devices) SetFilesystems(v []KubevirtIoApiCoreV1Filesystem) {
	o.Filesystems = v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetGpus() []KubevirtIoApiCoreV1GPU {
	if o == nil || IsNil(o.Gpus) {
		var ret []KubevirtIoApiCoreV1GPU
		return ret
	}
	return o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetGpusOk() ([]KubevirtIoApiCoreV1GPU, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given []KubevirtIoApiCoreV1GPU and assigns it to the Gpus field.
func (o *KubevirtIoApiCoreV1Devices) SetGpus(v []KubevirtIoApiCoreV1GPU) {
	o.Gpus = v
}

// GetHostDevices returns the HostDevices field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetHostDevices() []KubevirtIoApiCoreV1HostDevice {
	if o == nil || IsNil(o.HostDevices) {
		var ret []KubevirtIoApiCoreV1HostDevice
		return ret
	}
	return o.HostDevices
}

// GetHostDevicesOk returns a tuple with the HostDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetHostDevicesOk() ([]KubevirtIoApiCoreV1HostDevice, bool) {
	if o == nil || IsNil(o.HostDevices) {
		return nil, false
	}
	return o.HostDevices, true
}

// HasHostDevices returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasHostDevices() bool {
	if o != nil && !IsNil(o.HostDevices) {
		return true
	}

	return false
}

// SetHostDevices gets a reference to the given []KubevirtIoApiCoreV1HostDevice and assigns it to the HostDevices field.
func (o *KubevirtIoApiCoreV1Devices) SetHostDevices(v []KubevirtIoApiCoreV1HostDevice) {
	o.HostDevices = v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetInputs() []KubevirtIoApiCoreV1Input {
	if o == nil || IsNil(o.Inputs) {
		var ret []KubevirtIoApiCoreV1Input
		return ret
	}
	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetInputsOk() ([]KubevirtIoApiCoreV1Input, bool) {
	if o == nil || IsNil(o.Inputs) {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasInputs() bool {
	if o != nil && !IsNil(o.Inputs) {
		return true
	}

	return false
}

// SetInputs gets a reference to the given []KubevirtIoApiCoreV1Input and assigns it to the Inputs field.
func (o *KubevirtIoApiCoreV1Devices) SetInputs(v []KubevirtIoApiCoreV1Input) {
	o.Inputs = v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetInterfaces() []KubevirtIoApiCoreV1Interface {
	if o == nil || IsNil(o.Interfaces) {
		var ret []KubevirtIoApiCoreV1Interface
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetInterfacesOk() ([]KubevirtIoApiCoreV1Interface, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []KubevirtIoApiCoreV1Interface and assigns it to the Interfaces field.
func (o *KubevirtIoApiCoreV1Devices) SetInterfaces(v []KubevirtIoApiCoreV1Interface) {
	o.Interfaces = v
}

// GetLogSerialConsole returns the LogSerialConsole field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetLogSerialConsole() bool {
	if o == nil || IsNil(o.LogSerialConsole) {
		var ret bool
		return ret
	}
	return *o.LogSerialConsole
}

// GetLogSerialConsoleOk returns a tuple with the LogSerialConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetLogSerialConsoleOk() (*bool, bool) {
	if o == nil || IsNil(o.LogSerialConsole) {
		return nil, false
	}
	return o.LogSerialConsole, true
}

// HasLogSerialConsole returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasLogSerialConsole() bool {
	if o != nil && !IsNil(o.LogSerialConsole) {
		return true
	}

	return false
}

// SetLogSerialConsole gets a reference to the given bool and assigns it to the LogSerialConsole field.
func (o *KubevirtIoApiCoreV1Devices) SetLogSerialConsole(v bool) {
	o.LogSerialConsole = &v
}

// GetNetworkInterfaceMultiqueue returns the NetworkInterfaceMultiqueue field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetNetworkInterfaceMultiqueue() bool {
	if o == nil || IsNil(o.NetworkInterfaceMultiqueue) {
		var ret bool
		return ret
	}
	return *o.NetworkInterfaceMultiqueue
}

// GetNetworkInterfaceMultiqueueOk returns a tuple with the NetworkInterfaceMultiqueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetNetworkInterfaceMultiqueueOk() (*bool, bool) {
	if o == nil || IsNil(o.NetworkInterfaceMultiqueue) {
		return nil, false
	}
	return o.NetworkInterfaceMultiqueue, true
}

// HasNetworkInterfaceMultiqueue returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasNetworkInterfaceMultiqueue() bool {
	if o != nil && !IsNil(o.NetworkInterfaceMultiqueue) {
		return true
	}

	return false
}

// SetNetworkInterfaceMultiqueue gets a reference to the given bool and assigns it to the NetworkInterfaceMultiqueue field.
func (o *KubevirtIoApiCoreV1Devices) SetNetworkInterfaceMultiqueue(v bool) {
	o.NetworkInterfaceMultiqueue = &v
}

// GetRng returns the Rng field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetRng() map[string]interface{} {
	if o == nil || IsNil(o.Rng) {
		var ret map[string]interface{}
		return ret
	}
	return o.Rng
}

// GetRngOk returns a tuple with the Rng field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetRngOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Rng) {
		return map[string]interface{}{}, false
	}
	return o.Rng, true
}

// HasRng returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasRng() bool {
	if o != nil && !IsNil(o.Rng) {
		return true
	}

	return false
}

// SetRng gets a reference to the given map[string]interface{} and assigns it to the Rng field.
func (o *KubevirtIoApiCoreV1Devices) SetRng(v map[string]interface{}) {
	o.Rng = v
}

// GetSound returns the Sound field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetSound() KubevirtIoApiCoreV1SoundDevice {
	if o == nil || IsNil(o.Sound) {
		var ret KubevirtIoApiCoreV1SoundDevice
		return ret
	}
	return *o.Sound
}

// GetSoundOk returns a tuple with the Sound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetSoundOk() (*KubevirtIoApiCoreV1SoundDevice, bool) {
	if o == nil || IsNil(o.Sound) {
		return nil, false
	}
	return o.Sound, true
}

// HasSound returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasSound() bool {
	if o != nil && !IsNil(o.Sound) {
		return true
	}

	return false
}

// SetSound gets a reference to the given KubevirtIoApiCoreV1SoundDevice and assigns it to the Sound field.
func (o *KubevirtIoApiCoreV1Devices) SetSound(v KubevirtIoApiCoreV1SoundDevice) {
	o.Sound = &v
}

// GetTpm returns the Tpm field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetTpm() KubevirtIoApiCoreV1TPMDevice {
	if o == nil || IsNil(o.Tpm) {
		var ret KubevirtIoApiCoreV1TPMDevice
		return ret
	}
	return *o.Tpm
}

// GetTpmOk returns a tuple with the Tpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetTpmOk() (*KubevirtIoApiCoreV1TPMDevice, bool) {
	if o == nil || IsNil(o.Tpm) {
		return nil, false
	}
	return o.Tpm, true
}

// HasTpm returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasTpm() bool {
	if o != nil && !IsNil(o.Tpm) {
		return true
	}

	return false
}

// SetTpm gets a reference to the given KubevirtIoApiCoreV1TPMDevice and assigns it to the Tpm field.
func (o *KubevirtIoApiCoreV1Devices) SetTpm(v KubevirtIoApiCoreV1TPMDevice) {
	o.Tpm = &v
}

// GetUseVirtioTransitional returns the UseVirtioTransitional field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetUseVirtioTransitional() bool {
	if o == nil || IsNil(o.UseVirtioTransitional) {
		var ret bool
		return ret
	}
	return *o.UseVirtioTransitional
}

// GetUseVirtioTransitionalOk returns a tuple with the UseVirtioTransitional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetUseVirtioTransitionalOk() (*bool, bool) {
	if o == nil || IsNil(o.UseVirtioTransitional) {
		return nil, false
	}
	return o.UseVirtioTransitional, true
}

// HasUseVirtioTransitional returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasUseVirtioTransitional() bool {
	if o != nil && !IsNil(o.UseVirtioTransitional) {
		return true
	}

	return false
}

// SetUseVirtioTransitional gets a reference to the given bool and assigns it to the UseVirtioTransitional field.
func (o *KubevirtIoApiCoreV1Devices) SetUseVirtioTransitional(v bool) {
	o.UseVirtioTransitional = &v
}

// GetWatchdog returns the Watchdog field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Devices) GetWatchdog() KubevirtIoApiCoreV1Watchdog {
	if o == nil || IsNil(o.Watchdog) {
		var ret KubevirtIoApiCoreV1Watchdog
		return ret
	}
	return *o.Watchdog
}

// GetWatchdogOk returns a tuple with the Watchdog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Devices) GetWatchdogOk() (*KubevirtIoApiCoreV1Watchdog, bool) {
	if o == nil || IsNil(o.Watchdog) {
		return nil, false
	}
	return o.Watchdog, true
}

// HasWatchdog returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Devices) HasWatchdog() bool {
	if o != nil && !IsNil(o.Watchdog) {
		return true
	}

	return false
}

// SetWatchdog gets a reference to the given KubevirtIoApiCoreV1Watchdog and assigns it to the Watchdog field.
func (o *KubevirtIoApiCoreV1Devices) SetWatchdog(v KubevirtIoApiCoreV1Watchdog) {
	o.Watchdog = &v
}

func (o KubevirtIoApiCoreV1Devices) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Devices) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoattachGraphicsDevice) {
		toSerialize["autoattachGraphicsDevice"] = o.AutoattachGraphicsDevice
	}
	if !IsNil(o.AutoattachInputDevice) {
		toSerialize["autoattachInputDevice"] = o.AutoattachInputDevice
	}
	if !IsNil(o.AutoattachMemBalloon) {
		toSerialize["autoattachMemBalloon"] = o.AutoattachMemBalloon
	}
	if !IsNil(o.AutoattachPodInterface) {
		toSerialize["autoattachPodInterface"] = o.AutoattachPodInterface
	}
	if !IsNil(o.AutoattachSerialConsole) {
		toSerialize["autoattachSerialConsole"] = o.AutoattachSerialConsole
	}
	if !IsNil(o.AutoattachVSOCK) {
		toSerialize["autoattachVSOCK"] = o.AutoattachVSOCK
	}
	if !IsNil(o.BlockMultiQueue) {
		toSerialize["blockMultiQueue"] = o.BlockMultiQueue
	}
	if !IsNil(o.ClientPassthrough) {
		toSerialize["clientPassthrough"] = o.ClientPassthrough
	}
	if !IsNil(o.DisableHotplug) {
		toSerialize["disableHotplug"] = o.DisableHotplug
	}
	if !IsNil(o.Disks) {
		toSerialize["disks"] = o.Disks
	}
	if !IsNil(o.DownwardMetrics) {
		toSerialize["downwardMetrics"] = o.DownwardMetrics
	}
	if !IsNil(o.Filesystems) {
		toSerialize["filesystems"] = o.Filesystems
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.HostDevices) {
		toSerialize["hostDevices"] = o.HostDevices
	}
	if !IsNil(o.Inputs) {
		toSerialize["inputs"] = o.Inputs
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.LogSerialConsole) {
		toSerialize["logSerialConsole"] = o.LogSerialConsole
	}
	if !IsNil(o.NetworkInterfaceMultiqueue) {
		toSerialize["networkInterfaceMultiqueue"] = o.NetworkInterfaceMultiqueue
	}
	if !IsNil(o.Rng) {
		toSerialize["rng"] = o.Rng
	}
	if !IsNil(o.Sound) {
		toSerialize["sound"] = o.Sound
	}
	if !IsNil(o.Tpm) {
		toSerialize["tpm"] = o.Tpm
	}
	if !IsNil(o.UseVirtioTransitional) {
		toSerialize["useVirtioTransitional"] = o.UseVirtioTransitional
	}
	if !IsNil(o.Watchdog) {
		toSerialize["watchdog"] = o.Watchdog
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1Devices struct {
	value *KubevirtIoApiCoreV1Devices
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Devices) Get() *KubevirtIoApiCoreV1Devices {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Devices) Set(val *KubevirtIoApiCoreV1Devices) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Devices) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Devices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Devices(val *KubevirtIoApiCoreV1Devices) *NullableKubevirtIoApiCoreV1Devices {
	return &NullableKubevirtIoApiCoreV1Devices{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Devices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Devices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


