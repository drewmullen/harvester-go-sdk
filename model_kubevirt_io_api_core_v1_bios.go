/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1BIOS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1BIOS{}

// KubevirtIoApiCoreV1BIOS struct for KubevirtIoApiCoreV1BIOS
type KubevirtIoApiCoreV1BIOS struct {
	UseSerial *bool `json:"useSerial,omitempty"`
}

// NewKubevirtIoApiCoreV1BIOS instantiates a new KubevirtIoApiCoreV1BIOS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1BIOS() *KubevirtIoApiCoreV1BIOS {
	this := KubevirtIoApiCoreV1BIOS{}
	return &this
}

// NewKubevirtIoApiCoreV1BIOSWithDefaults instantiates a new KubevirtIoApiCoreV1BIOS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1BIOSWithDefaults() *KubevirtIoApiCoreV1BIOS {
	this := KubevirtIoApiCoreV1BIOS{}
	return &this
}

// GetUseSerial returns the UseSerial field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1BIOS) GetUseSerial() bool {
	if o == nil || IsNil(o.UseSerial) {
		var ret bool
		return ret
	}
	return *o.UseSerial
}

// GetUseSerialOk returns a tuple with the UseSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1BIOS) GetUseSerialOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSerial) {
		return nil, false
	}
	return o.UseSerial, true
}

// HasUseSerial returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1BIOS) HasUseSerial() bool {
	if o != nil && !IsNil(o.UseSerial) {
		return true
	}

	return false
}

// SetUseSerial gets a reference to the given bool and assigns it to the UseSerial field.
func (o *KubevirtIoApiCoreV1BIOS) SetUseSerial(v bool) {
	o.UseSerial = &v
}

func (o KubevirtIoApiCoreV1BIOS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1BIOS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UseSerial) {
		toSerialize["useSerial"] = o.UseSerial
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1BIOS struct {
	value *KubevirtIoApiCoreV1BIOS
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1BIOS) Get() *KubevirtIoApiCoreV1BIOS {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1BIOS) Set(val *KubevirtIoApiCoreV1BIOS) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1BIOS) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1BIOS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1BIOS(val *KubevirtIoApiCoreV1BIOS) *NullableKubevirtIoApiCoreV1BIOS {
	return &NullableKubevirtIoApiCoreV1BIOS{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1BIOS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1BIOS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


