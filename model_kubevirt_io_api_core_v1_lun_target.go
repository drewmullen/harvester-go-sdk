/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1LunTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1LunTarget{}

// KubevirtIoApiCoreV1LunTarget struct for KubevirtIoApiCoreV1LunTarget
type KubevirtIoApiCoreV1LunTarget struct {
	// Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.
	Bus *string `json:"bus,omitempty"`
	// ReadOnly. Defaults to false.
	Readonly *bool `json:"readonly,omitempty"`
	// Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk
	Reservation *bool `json:"reservation,omitempty"`
}

// NewKubevirtIoApiCoreV1LunTarget instantiates a new KubevirtIoApiCoreV1LunTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1LunTarget() *KubevirtIoApiCoreV1LunTarget {
	this := KubevirtIoApiCoreV1LunTarget{}
	return &this
}

// NewKubevirtIoApiCoreV1LunTargetWithDefaults instantiates a new KubevirtIoApiCoreV1LunTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1LunTargetWithDefaults() *KubevirtIoApiCoreV1LunTarget {
	this := KubevirtIoApiCoreV1LunTarget{}
	return &this
}

// GetBus returns the Bus field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1LunTarget) GetBus() string {
	if o == nil || IsNil(o.Bus) {
		var ret string
		return ret
	}
	return *o.Bus
}

// GetBusOk returns a tuple with the Bus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1LunTarget) GetBusOk() (*string, bool) {
	if o == nil || IsNil(o.Bus) {
		return nil, false
	}
	return o.Bus, true
}

// HasBus returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1LunTarget) HasBus() bool {
	if o != nil && !IsNil(o.Bus) {
		return true
	}

	return false
}

// SetBus gets a reference to the given string and assigns it to the Bus field.
func (o *KubevirtIoApiCoreV1LunTarget) SetBus(v string) {
	o.Bus = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1LunTarget) GetReadonly() bool {
	if o == nil || IsNil(o.Readonly) {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1LunTarget) GetReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1LunTarget) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *KubevirtIoApiCoreV1LunTarget) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetReservation returns the Reservation field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1LunTarget) GetReservation() bool {
	if o == nil || IsNil(o.Reservation) {
		var ret bool
		return ret
	}
	return *o.Reservation
}

// GetReservationOk returns a tuple with the Reservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1LunTarget) GetReservationOk() (*bool, bool) {
	if o == nil || IsNil(o.Reservation) {
		return nil, false
	}
	return o.Reservation, true
}

// HasReservation returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1LunTarget) HasReservation() bool {
	if o != nil && !IsNil(o.Reservation) {
		return true
	}

	return false
}

// SetReservation gets a reference to the given bool and assigns it to the Reservation field.
func (o *KubevirtIoApiCoreV1LunTarget) SetReservation(v bool) {
	o.Reservation = &v
}

func (o KubevirtIoApiCoreV1LunTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1LunTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bus) {
		toSerialize["bus"] = o.Bus
	}
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	if !IsNil(o.Reservation) {
		toSerialize["reservation"] = o.Reservation
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1LunTarget struct {
	value *KubevirtIoApiCoreV1LunTarget
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1LunTarget) Get() *KubevirtIoApiCoreV1LunTarget {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1LunTarget) Set(val *KubevirtIoApiCoreV1LunTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1LunTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1LunTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1LunTarget(val *KubevirtIoApiCoreV1LunTarget) *NullableKubevirtIoApiCoreV1LunTarget {
	return &NullableKubevirtIoApiCoreV1LunTarget{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1LunTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1LunTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


