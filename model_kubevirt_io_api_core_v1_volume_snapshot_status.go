/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1VolumeSnapshotStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1VolumeSnapshotStatus{}

// KubevirtIoApiCoreV1VolumeSnapshotStatus struct for KubevirtIoApiCoreV1VolumeSnapshotStatus
type KubevirtIoApiCoreV1VolumeSnapshotStatus struct {
	Enabled bool `json:"enabled"`
	Name string `json:"name"`
	Reason *string `json:"reason,omitempty"`
}

type _KubevirtIoApiCoreV1VolumeSnapshotStatus KubevirtIoApiCoreV1VolumeSnapshotStatus

// NewKubevirtIoApiCoreV1VolumeSnapshotStatus instantiates a new KubevirtIoApiCoreV1VolumeSnapshotStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1VolumeSnapshotStatus(enabled bool, name string) *KubevirtIoApiCoreV1VolumeSnapshotStatus {
	this := KubevirtIoApiCoreV1VolumeSnapshotStatus{}
	this.Enabled = enabled
	this.Name = name
	return &this
}

// NewKubevirtIoApiCoreV1VolumeSnapshotStatusWithDefaults instantiates a new KubevirtIoApiCoreV1VolumeSnapshotStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1VolumeSnapshotStatusWithDefaults() *KubevirtIoApiCoreV1VolumeSnapshotStatus {
	this := KubevirtIoApiCoreV1VolumeSnapshotStatus{}
	var enabled bool = false
	this.Enabled = enabled
	var name string = ""
	this.Name = name
	return &this
}

// GetEnabled returns the Enabled field value
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) SetEnabled(v bool) {
	o.Enabled = v
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) SetName(v string) {
	o.Name = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) SetReason(v string) {
	o.Reason = &v
}

func (o KubevirtIoApiCoreV1VolumeSnapshotStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1VolumeSnapshotStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	toSerialize["name"] = o.Name
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1VolumeSnapshotStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1VolumeSnapshotStatus := _KubevirtIoApiCoreV1VolumeSnapshotStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1VolumeSnapshotStatus)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1VolumeSnapshotStatus(varKubevirtIoApiCoreV1VolumeSnapshotStatus)

	return err
}

type NullableKubevirtIoApiCoreV1VolumeSnapshotStatus struct {
	value *KubevirtIoApiCoreV1VolumeSnapshotStatus
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) Get() *KubevirtIoApiCoreV1VolumeSnapshotStatus {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) Set(val *KubevirtIoApiCoreV1VolumeSnapshotStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1VolumeSnapshotStatus(val *KubevirtIoApiCoreV1VolumeSnapshotStatus) *NullableKubevirtIoApiCoreV1VolumeSnapshotStatus {
	return &NullableKubevirtIoApiCoreV1VolumeSnapshotStatus{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1VolumeSnapshotStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


