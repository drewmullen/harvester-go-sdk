/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the HarvesterhciIoV1beta1VolumeRestore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarvesterhciIoV1beta1VolumeRestore{}

// HarvesterhciIoV1beta1VolumeRestore struct for HarvesterhciIoV1beta1VolumeRestore
type HarvesterhciIoV1beta1VolumeRestore struct {
	LonghornEngineName *string `json:"longhornEngineName,omitempty"`
	PersistentVolumeClaimSpec *HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec `json:"persistentVolumeClaimSpec,omitempty"`
	Progress *int32 `json:"progress,omitempty"`
	VolumeBackupName *string `json:"volumeBackupName,omitempty"`
	VolumeName *string `json:"volumeName,omitempty"`
	VolumeSize *int64 `json:"volumeSize,omitempty"`
}

// NewHarvesterhciIoV1beta1VolumeRestore instantiates a new HarvesterhciIoV1beta1VolumeRestore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvesterhciIoV1beta1VolumeRestore() *HarvesterhciIoV1beta1VolumeRestore {
	this := HarvesterhciIoV1beta1VolumeRestore{}
	var persistentVolumeClaimSpec HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec = {}
	this.PersistentVolumeClaimSpec = &persistentVolumeClaimSpec
	return &this
}

// NewHarvesterhciIoV1beta1VolumeRestoreWithDefaults instantiates a new HarvesterhciIoV1beta1VolumeRestore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvesterhciIoV1beta1VolumeRestoreWithDefaults() *HarvesterhciIoV1beta1VolumeRestore {
	this := HarvesterhciIoV1beta1VolumeRestore{}
	var persistentVolumeClaimSpec HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec = {}
	this.PersistentVolumeClaimSpec = &persistentVolumeClaimSpec
	return &this
}

// GetLonghornEngineName returns the LonghornEngineName field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetLonghornEngineName() string {
	if o == nil || IsNil(o.LonghornEngineName) {
		var ret string
		return ret
	}
	return *o.LonghornEngineName
}

// GetLonghornEngineNameOk returns a tuple with the LonghornEngineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetLonghornEngineNameOk() (*string, bool) {
	if o == nil || IsNil(o.LonghornEngineName) {
		return nil, false
	}
	return o.LonghornEngineName, true
}

// HasLonghornEngineName returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasLonghornEngineName() bool {
	if o != nil && !IsNil(o.LonghornEngineName) {
		return true
	}

	return false
}

// SetLonghornEngineName gets a reference to the given string and assigns it to the LonghornEngineName field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetLonghornEngineName(v string) {
	o.LonghornEngineName = &v
}

// GetPersistentVolumeClaimSpec returns the PersistentVolumeClaimSpec field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetPersistentVolumeClaimSpec() HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec {
	if o == nil || IsNil(o.PersistentVolumeClaimSpec) {
		var ret HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec
		return ret
	}
	return *o.PersistentVolumeClaimSpec
}

// GetPersistentVolumeClaimSpecOk returns a tuple with the PersistentVolumeClaimSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetPersistentVolumeClaimSpecOk() (*HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec, bool) {
	if o == nil || IsNil(o.PersistentVolumeClaimSpec) {
		return nil, false
	}
	return o.PersistentVolumeClaimSpec, true
}

// HasPersistentVolumeClaimSpec returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasPersistentVolumeClaimSpec() bool {
	if o != nil && !IsNil(o.PersistentVolumeClaimSpec) {
		return true
	}

	return false
}

// SetPersistentVolumeClaimSpec gets a reference to the given HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec and assigns it to the PersistentVolumeClaimSpec field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetPersistentVolumeClaimSpec(v HarvesterhciIoV1beta1PersistentVolumeClaimSourceSpec) {
	o.PersistentVolumeClaimSpec = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetProgress(v int32) {
	o.Progress = &v
}

// GetVolumeBackupName returns the VolumeBackupName field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeBackupName() string {
	if o == nil || IsNil(o.VolumeBackupName) {
		var ret string
		return ret
	}
	return *o.VolumeBackupName
}

// GetVolumeBackupNameOk returns a tuple with the VolumeBackupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeBackupNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeBackupName) {
		return nil, false
	}
	return o.VolumeBackupName, true
}

// HasVolumeBackupName returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasVolumeBackupName() bool {
	if o != nil && !IsNil(o.VolumeBackupName) {
		return true
	}

	return false
}

// SetVolumeBackupName gets a reference to the given string and assigns it to the VolumeBackupName field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetVolumeBackupName(v string) {
	o.VolumeBackupName = &v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeName() string {
	if o == nil || IsNil(o.VolumeName) {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeName) {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasVolumeName() bool {
	if o != nil && !IsNil(o.VolumeName) {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetVolumeName(v string) {
	o.VolumeName = &v
}

// GetVolumeSize returns the VolumeSize field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeSize() int64 {
	if o == nil || IsNil(o.VolumeSize) {
		var ret int64
		return ret
	}
	return *o.VolumeSize
}

// GetVolumeSizeOk returns a tuple with the VolumeSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) GetVolumeSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.VolumeSize) {
		return nil, false
	}
	return o.VolumeSize, true
}

// HasVolumeSize returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VolumeRestore) HasVolumeSize() bool {
	if o != nil && !IsNil(o.VolumeSize) {
		return true
	}

	return false
}

// SetVolumeSize gets a reference to the given int64 and assigns it to the VolumeSize field.
func (o *HarvesterhciIoV1beta1VolumeRestore) SetVolumeSize(v int64) {
	o.VolumeSize = &v
}

func (o HarvesterhciIoV1beta1VolumeRestore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarvesterhciIoV1beta1VolumeRestore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LonghornEngineName) {
		toSerialize["longhornEngineName"] = o.LonghornEngineName
	}
	if !IsNil(o.PersistentVolumeClaimSpec) {
		toSerialize["persistentVolumeClaimSpec"] = o.PersistentVolumeClaimSpec
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.VolumeBackupName) {
		toSerialize["volumeBackupName"] = o.VolumeBackupName
	}
	if !IsNil(o.VolumeName) {
		toSerialize["volumeName"] = o.VolumeName
	}
	if !IsNil(o.VolumeSize) {
		toSerialize["volumeSize"] = o.VolumeSize
	}
	return toSerialize, nil
}

type NullableHarvesterhciIoV1beta1VolumeRestore struct {
	value *HarvesterhciIoV1beta1VolumeRestore
	isSet bool
}

func (v NullableHarvesterhciIoV1beta1VolumeRestore) Get() *HarvesterhciIoV1beta1VolumeRestore {
	return v.value
}

func (v *NullableHarvesterhciIoV1beta1VolumeRestore) Set(val *HarvesterhciIoV1beta1VolumeRestore) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvesterhciIoV1beta1VolumeRestore) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvesterhciIoV1beta1VolumeRestore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvesterhciIoV1beta1VolumeRestore(val *HarvesterhciIoV1beta1VolumeRestore) *NullableHarvesterhciIoV1beta1VolumeRestore {
	return &NullableHarvesterhciIoV1beta1VolumeRestore{value: val, isSet: true}
}

func (v NullableHarvesterhciIoV1beta1VolumeRestore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvesterhciIoV1beta1VolumeRestore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


