/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1DHCPPrivateOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1DHCPPrivateOptions{}

// KubevirtIoApiCoreV1DHCPPrivateOptions struct for KubevirtIoApiCoreV1DHCPPrivateOptions
type KubevirtIoApiCoreV1DHCPPrivateOptions struct {
	Option int32 `json:"option"`
	Value string `json:"value"`
}

type _KubevirtIoApiCoreV1DHCPPrivateOptions KubevirtIoApiCoreV1DHCPPrivateOptions

// NewKubevirtIoApiCoreV1DHCPPrivateOptions instantiates a new KubevirtIoApiCoreV1DHCPPrivateOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1DHCPPrivateOptions(option int32, value string) *KubevirtIoApiCoreV1DHCPPrivateOptions {
	this := KubevirtIoApiCoreV1DHCPPrivateOptions{}
	this.Option = option
	this.Value = value
	return &this
}

// NewKubevirtIoApiCoreV1DHCPPrivateOptionsWithDefaults instantiates a new KubevirtIoApiCoreV1DHCPPrivateOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1DHCPPrivateOptionsWithDefaults() *KubevirtIoApiCoreV1DHCPPrivateOptions {
	this := KubevirtIoApiCoreV1DHCPPrivateOptions{}
	var option int32 = 0
	this.Option = option
	var value string = ""
	this.Value = value
	return &this
}

// GetOption returns the Option field value
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) GetOption() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Option
}

// GetOptionOk returns a tuple with the Option field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) GetOptionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Option, true
}

// SetOption sets field value
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) SetOption(v int32) {
	o.Option = v
}

// GetValue returns the Value field value
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) SetValue(v string) {
	o.Value = v
}

func (o KubevirtIoApiCoreV1DHCPPrivateOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1DHCPPrivateOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["option"] = o.Option
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1DHCPPrivateOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"option",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1DHCPPrivateOptions := _KubevirtIoApiCoreV1DHCPPrivateOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1DHCPPrivateOptions)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1DHCPPrivateOptions(varKubevirtIoApiCoreV1DHCPPrivateOptions)

	return err
}

type NullableKubevirtIoApiCoreV1DHCPPrivateOptions struct {
	value *KubevirtIoApiCoreV1DHCPPrivateOptions
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1DHCPPrivateOptions) Get() *KubevirtIoApiCoreV1DHCPPrivateOptions {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1DHCPPrivateOptions) Set(val *KubevirtIoApiCoreV1DHCPPrivateOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1DHCPPrivateOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1DHCPPrivateOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1DHCPPrivateOptions(val *KubevirtIoApiCoreV1DHCPPrivateOptions) *NullableKubevirtIoApiCoreV1DHCPPrivateOptions {
	return &NullableKubevirtIoApiCoreV1DHCPPrivateOptions{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1DHCPPrivateOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1DHCPPrivateOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


