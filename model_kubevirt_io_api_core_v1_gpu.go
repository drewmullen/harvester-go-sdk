/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1GPU type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1GPU{}

// KubevirtIoApiCoreV1GPU struct for KubevirtIoApiCoreV1GPU
type KubevirtIoApiCoreV1GPU struct {
	DeviceName string `json:"deviceName"`
	Name string `json:"name"`
	Tag *string `json:"tag,omitempty"`
	VirtualGPUOptions *KubevirtIoApiCoreV1VGPUOptions `json:"virtualGPUOptions,omitempty"`
}

type _KubevirtIoApiCoreV1GPU KubevirtIoApiCoreV1GPU

// NewKubevirtIoApiCoreV1GPU instantiates a new KubevirtIoApiCoreV1GPU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1GPU(deviceName string, name string) *KubevirtIoApiCoreV1GPU {
	this := KubevirtIoApiCoreV1GPU{}
	this.DeviceName = deviceName
	this.Name = name
	return &this
}

// NewKubevirtIoApiCoreV1GPUWithDefaults instantiates a new KubevirtIoApiCoreV1GPU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1GPUWithDefaults() *KubevirtIoApiCoreV1GPU {
	this := KubevirtIoApiCoreV1GPU{}
	var deviceName string = ""
	this.DeviceName = deviceName
	var name string = ""
	this.Name = name
	return &this
}

// GetDeviceName returns the DeviceName field value
func (o *KubevirtIoApiCoreV1GPU) GetDeviceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1GPU) GetDeviceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceName, true
}

// SetDeviceName sets field value
func (o *KubevirtIoApiCoreV1GPU) SetDeviceName(v string) {
	o.DeviceName = v
}

// GetName returns the Name field value
func (o *KubevirtIoApiCoreV1GPU) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1GPU) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubevirtIoApiCoreV1GPU) SetName(v string) {
	o.Name = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1GPU) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1GPU) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1GPU) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *KubevirtIoApiCoreV1GPU) SetTag(v string) {
	o.Tag = &v
}

// GetVirtualGPUOptions returns the VirtualGPUOptions field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1GPU) GetVirtualGPUOptions() KubevirtIoApiCoreV1VGPUOptions {
	if o == nil || IsNil(o.VirtualGPUOptions) {
		var ret KubevirtIoApiCoreV1VGPUOptions
		return ret
	}
	return *o.VirtualGPUOptions
}

// GetVirtualGPUOptionsOk returns a tuple with the VirtualGPUOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1GPU) GetVirtualGPUOptionsOk() (*KubevirtIoApiCoreV1VGPUOptions, bool) {
	if o == nil || IsNil(o.VirtualGPUOptions) {
		return nil, false
	}
	return o.VirtualGPUOptions, true
}

// HasVirtualGPUOptions returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1GPU) HasVirtualGPUOptions() bool {
	if o != nil && !IsNil(o.VirtualGPUOptions) {
		return true
	}

	return false
}

// SetVirtualGPUOptions gets a reference to the given KubevirtIoApiCoreV1VGPUOptions and assigns it to the VirtualGPUOptions field.
func (o *KubevirtIoApiCoreV1GPU) SetVirtualGPUOptions(v KubevirtIoApiCoreV1VGPUOptions) {
	o.VirtualGPUOptions = &v
}

func (o KubevirtIoApiCoreV1GPU) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1GPU) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deviceName"] = o.DeviceName
	toSerialize["name"] = o.Name
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.VirtualGPUOptions) {
		toSerialize["virtualGPUOptions"] = o.VirtualGPUOptions
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1GPU) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deviceName",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1GPU := _KubevirtIoApiCoreV1GPU{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1GPU)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1GPU(varKubevirtIoApiCoreV1GPU)

	return err
}

type NullableKubevirtIoApiCoreV1GPU struct {
	value *KubevirtIoApiCoreV1GPU
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1GPU) Get() *KubevirtIoApiCoreV1GPU {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1GPU) Set(val *KubevirtIoApiCoreV1GPU) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1GPU) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1GPU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1GPU(val *KubevirtIoApiCoreV1GPU) *NullableKubevirtIoApiCoreV1GPU {
	return &NullableKubevirtIoApiCoreV1GPU{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1GPU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1GPU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


