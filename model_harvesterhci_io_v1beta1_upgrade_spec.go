/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HarvesterhciIoV1beta1UpgradeSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarvesterhciIoV1beta1UpgradeSpec{}

// HarvesterhciIoV1beta1UpgradeSpec struct for HarvesterhciIoV1beta1UpgradeSpec
type HarvesterhciIoV1beta1UpgradeSpec struct {
	Image *string `json:"image,omitempty"`
	LogEnabled *bool `json:"logEnabled,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewHarvesterhciIoV1beta1UpgradeSpec instantiates a new HarvesterhciIoV1beta1UpgradeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvesterhciIoV1beta1UpgradeSpec() *HarvesterhciIoV1beta1UpgradeSpec {
	this := HarvesterhciIoV1beta1UpgradeSpec{}
	var image string = ""
	this.Image = &image
	var logEnabled bool = false
	this.LogEnabled = &logEnabled
	var version string = ""
	this.Version = &version
	return &this
}

// NewHarvesterhciIoV1beta1UpgradeSpecWithDefaults instantiates a new HarvesterhciIoV1beta1UpgradeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvesterhciIoV1beta1UpgradeSpecWithDefaults() *HarvesterhciIoV1beta1UpgradeSpec {
	this := HarvesterhciIoV1beta1UpgradeSpec{}
	var image string = ""
	this.Image = &image
	var logEnabled bool = false
	this.LogEnabled = &logEnabled
	var version string = ""
	this.Version = &version
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *HarvesterhciIoV1beta1UpgradeSpec) SetImage(v string) {
	o.Image = &v
}

// GetLogEnabled returns the LogEnabled field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetLogEnabled() bool {
	if o == nil || IsNil(o.LogEnabled) {
		var ret bool
		return ret
	}
	return *o.LogEnabled
}

// GetLogEnabledOk returns a tuple with the LogEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetLogEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LogEnabled) {
		return nil, false
	}
	return o.LogEnabled, true
}

// HasLogEnabled returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) HasLogEnabled() bool {
	if o != nil && !IsNil(o.LogEnabled) {
		return true
	}

	return false
}

// SetLogEnabled gets a reference to the given bool and assigns it to the LogEnabled field.
func (o *HarvesterhciIoV1beta1UpgradeSpec) SetLogEnabled(v bool) {
	o.LogEnabled = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1UpgradeSpec) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *HarvesterhciIoV1beta1UpgradeSpec) SetVersion(v string) {
	o.Version = &v
}

func (o HarvesterhciIoV1beta1UpgradeSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarvesterhciIoV1beta1UpgradeSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.LogEnabled) {
		toSerialize["logEnabled"] = o.LogEnabled
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableHarvesterhciIoV1beta1UpgradeSpec struct {
	value *HarvesterhciIoV1beta1UpgradeSpec
	isSet bool
}

func (v NullableHarvesterhciIoV1beta1UpgradeSpec) Get() *HarvesterhciIoV1beta1UpgradeSpec {
	return v.value
}

func (v *NullableHarvesterhciIoV1beta1UpgradeSpec) Set(val *HarvesterhciIoV1beta1UpgradeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvesterhciIoV1beta1UpgradeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvesterhciIoV1beta1UpgradeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvesterhciIoV1beta1UpgradeSpec(val *HarvesterhciIoV1beta1UpgradeSpec) *NullableHarvesterhciIoV1beta1UpgradeSpec {
	return &NullableHarvesterhciIoV1beta1UpgradeSpec{value: val, isSet: true}
}

func (v NullableHarvesterhciIoV1beta1UpgradeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvesterhciIoV1beta1UpgradeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


