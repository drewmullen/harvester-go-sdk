/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1InstancetypeMatcher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1InstancetypeMatcher{}

// KubevirtIoApiCoreV1InstancetypeMatcher struct for KubevirtIoApiCoreV1InstancetypeMatcher
type KubevirtIoApiCoreV1InstancetypeMatcher struct {
	InferFromVolume *string `json:"inferFromVolume,omitempty"`
	InferFromVolumeFailurePolicy *string `json:"inferFromVolumeFailurePolicy,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Name *string `json:"name,omitempty"`
	RevisionName *string `json:"revisionName,omitempty"`
}

// NewKubevirtIoApiCoreV1InstancetypeMatcher instantiates a new KubevirtIoApiCoreV1InstancetypeMatcher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1InstancetypeMatcher() *KubevirtIoApiCoreV1InstancetypeMatcher {
	this := KubevirtIoApiCoreV1InstancetypeMatcher{}
	return &this
}

// NewKubevirtIoApiCoreV1InstancetypeMatcherWithDefaults instantiates a new KubevirtIoApiCoreV1InstancetypeMatcher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1InstancetypeMatcherWithDefaults() *KubevirtIoApiCoreV1InstancetypeMatcher {
	this := KubevirtIoApiCoreV1InstancetypeMatcher{}
	return &this
}

// GetInferFromVolume returns the InferFromVolume field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetInferFromVolume() string {
	if o == nil || IsNil(o.InferFromVolume) {
		var ret string
		return ret
	}
	return *o.InferFromVolume
}

// GetInferFromVolumeOk returns a tuple with the InferFromVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetInferFromVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.InferFromVolume) {
		return nil, false
	}
	return o.InferFromVolume, true
}

// HasInferFromVolume returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) HasInferFromVolume() bool {
	if o != nil && !IsNil(o.InferFromVolume) {
		return true
	}

	return false
}

// SetInferFromVolume gets a reference to the given string and assigns it to the InferFromVolume field.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) SetInferFromVolume(v string) {
	o.InferFromVolume = &v
}

// GetInferFromVolumeFailurePolicy returns the InferFromVolumeFailurePolicy field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetInferFromVolumeFailurePolicy() string {
	if o == nil || IsNil(o.InferFromVolumeFailurePolicy) {
		var ret string
		return ret
	}
	return *o.InferFromVolumeFailurePolicy
}

// GetInferFromVolumeFailurePolicyOk returns a tuple with the InferFromVolumeFailurePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetInferFromVolumeFailurePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.InferFromVolumeFailurePolicy) {
		return nil, false
	}
	return o.InferFromVolumeFailurePolicy, true
}

// HasInferFromVolumeFailurePolicy returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) HasInferFromVolumeFailurePolicy() bool {
	if o != nil && !IsNil(o.InferFromVolumeFailurePolicy) {
		return true
	}

	return false
}

// SetInferFromVolumeFailurePolicy gets a reference to the given string and assigns it to the InferFromVolumeFailurePolicy field.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) SetInferFromVolumeFailurePolicy(v string) {
	o.InferFromVolumeFailurePolicy = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) SetName(v string) {
	o.Name = &v
}

// GetRevisionName returns the RevisionName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetRevisionName() string {
	if o == nil || IsNil(o.RevisionName) {
		var ret string
		return ret
	}
	return *o.RevisionName
}

// GetRevisionNameOk returns a tuple with the RevisionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) GetRevisionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionName) {
		return nil, false
	}
	return o.RevisionName, true
}

// HasRevisionName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) HasRevisionName() bool {
	if o != nil && !IsNil(o.RevisionName) {
		return true
	}

	return false
}

// SetRevisionName gets a reference to the given string and assigns it to the RevisionName field.
func (o *KubevirtIoApiCoreV1InstancetypeMatcher) SetRevisionName(v string) {
	o.RevisionName = &v
}

func (o KubevirtIoApiCoreV1InstancetypeMatcher) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1InstancetypeMatcher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InferFromVolume) {
		toSerialize["inferFromVolume"] = o.InferFromVolume
	}
	if !IsNil(o.InferFromVolumeFailurePolicy) {
		toSerialize["inferFromVolumeFailurePolicy"] = o.InferFromVolumeFailurePolicy
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RevisionName) {
		toSerialize["revisionName"] = o.RevisionName
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1InstancetypeMatcher struct {
	value *KubevirtIoApiCoreV1InstancetypeMatcher
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1InstancetypeMatcher) Get() *KubevirtIoApiCoreV1InstancetypeMatcher {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1InstancetypeMatcher) Set(val *KubevirtIoApiCoreV1InstancetypeMatcher) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1InstancetypeMatcher) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1InstancetypeMatcher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1InstancetypeMatcher(val *KubevirtIoApiCoreV1InstancetypeMatcher) *NullableKubevirtIoApiCoreV1InstancetypeMatcher {
	return &NullableKubevirtIoApiCoreV1InstancetypeMatcher{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1InstancetypeMatcher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1InstancetypeMatcher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


