/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HarvesterhciIoV1beta1NodeUpgradeStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarvesterhciIoV1beta1NodeUpgradeStatus{}

// HarvesterhciIoV1beta1NodeUpgradeStatus struct for HarvesterhciIoV1beta1NodeUpgradeStatus
type HarvesterhciIoV1beta1NodeUpgradeStatus struct {
	Message *string `json:"message,omitempty"`
	Reason *string `json:"reason,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewHarvesterhciIoV1beta1NodeUpgradeStatus instantiates a new HarvesterhciIoV1beta1NodeUpgradeStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvesterhciIoV1beta1NodeUpgradeStatus() *HarvesterhciIoV1beta1NodeUpgradeStatus {
	this := HarvesterhciIoV1beta1NodeUpgradeStatus{}
	return &this
}

// NewHarvesterhciIoV1beta1NodeUpgradeStatusWithDefaults instantiates a new HarvesterhciIoV1beta1NodeUpgradeStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvesterhciIoV1beta1NodeUpgradeStatusWithDefaults() *HarvesterhciIoV1beta1NodeUpgradeStatus {
	this := HarvesterhciIoV1beta1NodeUpgradeStatus{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) SetMessage(v string) {
	o.Message = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) SetReason(v string) {
	o.Reason = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *HarvesterhciIoV1beta1NodeUpgradeStatus) SetState(v string) {
	o.State = &v
}

func (o HarvesterhciIoV1beta1NodeUpgradeStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarvesterhciIoV1beta1NodeUpgradeStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableHarvesterhciIoV1beta1NodeUpgradeStatus struct {
	value *HarvesterhciIoV1beta1NodeUpgradeStatus
	isSet bool
}

func (v NullableHarvesterhciIoV1beta1NodeUpgradeStatus) Get() *HarvesterhciIoV1beta1NodeUpgradeStatus {
	return v.value
}

func (v *NullableHarvesterhciIoV1beta1NodeUpgradeStatus) Set(val *HarvesterhciIoV1beta1NodeUpgradeStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvesterhciIoV1beta1NodeUpgradeStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvesterhciIoV1beta1NodeUpgradeStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvesterhciIoV1beta1NodeUpgradeStatus(val *HarvesterhciIoV1beta1NodeUpgradeStatus) *NullableHarvesterhciIoV1beta1NodeUpgradeStatus {
	return &NullableHarvesterhciIoV1beta1NodeUpgradeStatus{value: val, isSet: true}
}

func (v NullableHarvesterhciIoV1beta1NodeUpgradeStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvesterhciIoV1beta1NodeUpgradeStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


