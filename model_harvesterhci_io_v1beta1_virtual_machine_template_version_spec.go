/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec{}

// HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec struct for HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec
type HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec struct {
	Description *string `json:"description,omitempty"`
	ImageId *string `json:"imageId,omitempty"`
	KeyPairIds []string `json:"keyPairIds,omitempty"`
	TemplateId string `json:"templateId"`
	Vm *HarvesterhciIoV1beta1VirtualMachineSourceSpec `json:"vm,omitempty"`
}

type _HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec

// NewHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec instantiates a new HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec(templateId string) *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec {
	this := HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec{}
	this.TemplateId = templateId
	var vm HarvesterhciIoV1beta1VirtualMachineSourceSpec = {}
	this.Vm = &vm
	return &this
}

// NewHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpecWithDefaults instantiates a new HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpecWithDefaults() *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec {
	this := HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec{}
	var templateId string = ""
	this.TemplateId = templateId
	var vm HarvesterhciIoV1beta1VirtualMachineSourceSpec = {}
	this.Vm = &vm
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) SetDescription(v string) {
	o.Description = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) SetImageId(v string) {
	o.ImageId = &v
}

// GetKeyPairIds returns the KeyPairIds field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetKeyPairIds() []string {
	if o == nil || IsNil(o.KeyPairIds) {
		var ret []string
		return ret
	}
	return o.KeyPairIds
}

// GetKeyPairIdsOk returns a tuple with the KeyPairIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetKeyPairIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.KeyPairIds) {
		return nil, false
	}
	return o.KeyPairIds, true
}

// HasKeyPairIds returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) HasKeyPairIds() bool {
	if o != nil && !IsNil(o.KeyPairIds) {
		return true
	}

	return false
}

// SetKeyPairIds gets a reference to the given []string and assigns it to the KeyPairIds field.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) SetKeyPairIds(v []string) {
	o.KeyPairIds = v
}

// GetTemplateId returns the TemplateId field value
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) SetTemplateId(v string) {
	o.TemplateId = v
}

// GetVm returns the Vm field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetVm() HarvesterhciIoV1beta1VirtualMachineSourceSpec {
	if o == nil || IsNil(o.Vm) {
		var ret HarvesterhciIoV1beta1VirtualMachineSourceSpec
		return ret
	}
	return *o.Vm
}

// GetVmOk returns a tuple with the Vm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) GetVmOk() (*HarvesterhciIoV1beta1VirtualMachineSourceSpec, bool) {
	if o == nil || IsNil(o.Vm) {
		return nil, false
	}
	return o.Vm, true
}

// HasVm returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) HasVm() bool {
	if o != nil && !IsNil(o.Vm) {
		return true
	}

	return false
}

// SetVm gets a reference to the given HarvesterhciIoV1beta1VirtualMachineSourceSpec and assigns it to the Vm field.
func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) SetVm(v HarvesterhciIoV1beta1VirtualMachineSourceSpec) {
	o.Vm = &v
}

func (o HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !IsNil(o.KeyPairIds) {
		toSerialize["keyPairIds"] = o.KeyPairIds
	}
	toSerialize["templateId"] = o.TemplateId
	if !IsNil(o.Vm) {
		toSerialize["vm"] = o.Vm
	}
	return toSerialize, nil
}

func (o *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"templateId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec := _HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec)

	if err != nil {
		return err
	}

	*o = HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec(varHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec)

	return err
}

type NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec struct {
	value *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec
	isSet bool
}

func (v NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) Get() *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec {
	return v.value
}

func (v *NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) Set(val *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec(val *HarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) *NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec {
	return &NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec{value: val, isSet: true}
}

func (v NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvesterhciIoV1beta1VirtualMachineTemplateVersionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


