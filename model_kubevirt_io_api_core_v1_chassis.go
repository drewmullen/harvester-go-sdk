/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1Chassis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Chassis{}

// KubevirtIoApiCoreV1Chassis struct for KubevirtIoApiCoreV1Chassis
type KubevirtIoApiCoreV1Chassis struct {
	Asset *string `json:"asset,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	Serial *string `json:"serial,omitempty"`
	Sku *string `json:"sku,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewKubevirtIoApiCoreV1Chassis instantiates a new KubevirtIoApiCoreV1Chassis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Chassis() *KubevirtIoApiCoreV1Chassis {
	this := KubevirtIoApiCoreV1Chassis{}
	return &this
}

// NewKubevirtIoApiCoreV1ChassisWithDefaults instantiates a new KubevirtIoApiCoreV1Chassis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1ChassisWithDefaults() *KubevirtIoApiCoreV1Chassis {
	this := KubevirtIoApiCoreV1Chassis{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Chassis) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Chassis) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Chassis) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *KubevirtIoApiCoreV1Chassis) SetAsset(v string) {
	o.Asset = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Chassis) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Chassis) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Chassis) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *KubevirtIoApiCoreV1Chassis) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Chassis) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Chassis) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Chassis) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *KubevirtIoApiCoreV1Chassis) SetSerial(v string) {
	o.Serial = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Chassis) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Chassis) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Chassis) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *KubevirtIoApiCoreV1Chassis) SetSku(v string) {
	o.Sku = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Chassis) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Chassis) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Chassis) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *KubevirtIoApiCoreV1Chassis) SetVersion(v string) {
	o.Version = &v
}

func (o KubevirtIoApiCoreV1Chassis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Chassis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1Chassis struct {
	value *KubevirtIoApiCoreV1Chassis
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Chassis) Get() *KubevirtIoApiCoreV1Chassis {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Chassis) Set(val *KubevirtIoApiCoreV1Chassis) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Chassis) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Chassis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Chassis(val *KubevirtIoApiCoreV1Chassis) *NullableKubevirtIoApiCoreV1Chassis {
	return &NullableKubevirtIoApiCoreV1Chassis{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Chassis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Chassis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


