/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource{}

// KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource struct for KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource
type KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource struct {
	Blank map[string]interface{} `json:"blank,omitempty"`
	Gcs *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS `json:"gcs,omitempty"`
	Http *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP `json:"http,omitempty"`
	Imageio *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO `json:"imageio,omitempty"`
	Pvc *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC `json:"pvc,omitempty"`
	Registry *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry `json:"registry,omitempty"`
	S3 *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3 `json:"s3,omitempty"`
	Snapshot *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot `json:"snapshot,omitempty"`
	Upload map[string]interface{} `json:"upload,omitempty"`
	Vddk *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK `json:"vddk,omitempty"`
}

// NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource instantiates a new KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource() *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource {
	this := KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource{}
	return &this
}

// NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceWithDefaults instantiates a new KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceWithDefaults() *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource {
	this := KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource{}
	return &this
}

// GetBlank returns the Blank field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetBlank() map[string]interface{} {
	if o == nil || IsNil(o.Blank) {
		var ret map[string]interface{}
		return ret
	}
	return o.Blank
}

// GetBlankOk returns a tuple with the Blank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetBlankOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Blank) {
		return map[string]interface{}{}, false
	}
	return o.Blank, true
}

// HasBlank returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasBlank() bool {
	if o != nil && !IsNil(o.Blank) {
		return true
	}

	return false
}

// SetBlank gets a reference to the given map[string]interface{} and assigns it to the Blank field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetBlank(v map[string]interface{}) {
	o.Blank = v
}

// GetGcs returns the Gcs field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetGcs() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS {
	if o == nil || IsNil(o.Gcs) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS
		return ret
	}
	return *o.Gcs
}

// GetGcsOk returns a tuple with the Gcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetGcsOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS, bool) {
	if o == nil || IsNil(o.Gcs) {
		return nil, false
	}
	return o.Gcs, true
}

// HasGcs returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasGcs() bool {
	if o != nil && !IsNil(o.Gcs) {
		return true
	}

	return false
}

// SetGcs gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS and assigns it to the Gcs field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetGcs(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceGCS) {
	o.Gcs = &v
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetHttp() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP {
	if o == nil || IsNil(o.Http) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetHttpOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP, bool) {
	if o == nil || IsNil(o.Http) {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasHttp() bool {
	if o != nil && !IsNil(o.Http) {
		return true
	}

	return false
}

// SetHttp gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP and assigns it to the Http field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetHttp(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) {
	o.Http = &v
}

// GetImageio returns the Imageio field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetImageio() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO {
	if o == nil || IsNil(o.Imageio) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO
		return ret
	}
	return *o.Imageio
}

// GetImageioOk returns a tuple with the Imageio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetImageioOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO, bool) {
	if o == nil || IsNil(o.Imageio) {
		return nil, false
	}
	return o.Imageio, true
}

// HasImageio returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasImageio() bool {
	if o != nil && !IsNil(o.Imageio) {
		return true
	}

	return false
}

// SetImageio gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO and assigns it to the Imageio field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetImageio(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceImageIO) {
	o.Imageio = &v
}

// GetPvc returns the Pvc field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetPvc() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC {
	if o == nil || IsNil(o.Pvc) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC
		return ret
	}
	return *o.Pvc
}

// GetPvcOk returns a tuple with the Pvc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetPvcOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC, bool) {
	if o == nil || IsNil(o.Pvc) {
		return nil, false
	}
	return o.Pvc, true
}

// HasPvc returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasPvc() bool {
	if o != nil && !IsNil(o.Pvc) {
		return true
	}

	return false
}

// SetPvc gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC and assigns it to the Pvc field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetPvc(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourcePVC) {
	o.Pvc = &v
}

// GetRegistry returns the Registry field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetRegistry() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry {
	if o == nil || IsNil(o.Registry) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry
		return ret
	}
	return *o.Registry
}

// GetRegistryOk returns a tuple with the Registry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetRegistryOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry, bool) {
	if o == nil || IsNil(o.Registry) {
		return nil, false
	}
	return o.Registry, true
}

// HasRegistry returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasRegistry() bool {
	if o != nil && !IsNil(o.Registry) {
		return true
	}

	return false
}

// SetRegistry gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry and assigns it to the Registry field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetRegistry(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceRegistry) {
	o.Registry = &v
}

// GetS3 returns the S3 field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetS3() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3 {
	if o == nil || IsNil(o.S3) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3
		return ret
	}
	return *o.S3
}

// GetS3Ok returns a tuple with the S3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetS3Ok() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3, bool) {
	if o == nil || IsNil(o.S3) {
		return nil, false
	}
	return o.S3, true
}

// HasS3 returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasS3() bool {
	if o != nil && !IsNil(o.S3) {
		return true
	}

	return false
}

// SetS3 gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3 and assigns it to the S3 field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetS3(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceS3) {
	o.S3 = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetSnapshot() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot {
	if o == nil || IsNil(o.Snapshot) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetSnapshotOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot and assigns it to the Snapshot field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetSnapshot(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceSnapshot) {
	o.Snapshot = &v
}

// GetUpload returns the Upload field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetUpload() map[string]interface{} {
	if o == nil || IsNil(o.Upload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Upload
}

// GetUploadOk returns a tuple with the Upload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetUploadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Upload) {
		return map[string]interface{}{}, false
	}
	return o.Upload, true
}

// HasUpload returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasUpload() bool {
	if o != nil && !IsNil(o.Upload) {
		return true
	}

	return false
}

// SetUpload gets a reference to the given map[string]interface{} and assigns it to the Upload field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetUpload(v map[string]interface{}) {
	o.Upload = v
}

// GetVddk returns the Vddk field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetVddk() KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK {
	if o == nil || IsNil(o.Vddk) {
		var ret KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK
		return ret
	}
	return *o.Vddk
}

// GetVddkOk returns a tuple with the Vddk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) GetVddkOk() (*KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK, bool) {
	if o == nil || IsNil(o.Vddk) {
		return nil, false
	}
	return o.Vddk, true
}

// HasVddk returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) HasVddk() bool {
	if o != nil && !IsNil(o.Vddk) {
		return true
	}

	return false
}

// SetVddk gets a reference to the given KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK and assigns it to the Vddk field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) SetVddk(v KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceVDDK) {
	o.Vddk = &v
}

func (o KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Blank) {
		toSerialize["blank"] = o.Blank
	}
	if !IsNil(o.Gcs) {
		toSerialize["gcs"] = o.Gcs
	}
	if !IsNil(o.Http) {
		toSerialize["http"] = o.Http
	}
	if !IsNil(o.Imageio) {
		toSerialize["imageio"] = o.Imageio
	}
	if !IsNil(o.Pvc) {
		toSerialize["pvc"] = o.Pvc
	}
	if !IsNil(o.Registry) {
		toSerialize["registry"] = o.Registry
	}
	if !IsNil(o.S3) {
		toSerialize["s3"] = o.S3
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.Upload) {
		toSerialize["upload"] = o.Upload
	}
	if !IsNil(o.Vddk) {
		toSerialize["vddk"] = o.Vddk
	}
	return toSerialize, nil
}

type NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource struct {
	value *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource
	isSet bool
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) Get() *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource {
	return v.value
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) Set(val *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource(val *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource {
	return &NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource{value: val, isSet: true}
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


