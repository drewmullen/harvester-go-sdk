/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo{}

// KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo struct for KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo
type KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo struct {
	Id *string `json:"id,omitempty"`
	KernelRelease *string `json:"kernelRelease,omitempty"`
	KernelVersion *string `json:"kernelVersion,omitempty"`
	Machine *string `json:"machine,omitempty"`
	Name *string `json:"name,omitempty"`
	PrettyName *string `json:"prettyName,omitempty"`
	Version *string `json:"version,omitempty"`
	VersionId *string `json:"versionId,omitempty"`
}

// NewKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo instantiates a new KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo() *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo {
	this := KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo{}
	return &this
}

// NewKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfoWithDefaults instantiates a new KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfoWithDefaults() *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo {
	this := KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetId(v string) {
	o.Id = &v
}

// GetKernelRelease returns the KernelRelease field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetKernelRelease() string {
	if o == nil || IsNil(o.KernelRelease) {
		var ret string
		return ret
	}
	return *o.KernelRelease
}

// GetKernelReleaseOk returns a tuple with the KernelRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetKernelReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.KernelRelease) {
		return nil, false
	}
	return o.KernelRelease, true
}

// HasKernelRelease returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasKernelRelease() bool {
	if o != nil && !IsNil(o.KernelRelease) {
		return true
	}

	return false
}

// SetKernelRelease gets a reference to the given string and assigns it to the KernelRelease field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetKernelRelease(v string) {
	o.KernelRelease = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetKernelVersion() string {
	if o == nil || IsNil(o.KernelVersion) {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetKernelVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KernelVersion) {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasKernelVersion() bool {
	if o != nil && !IsNil(o.KernelVersion) {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetMachine() string {
	if o == nil || IsNil(o.Machine) {
		var ret string
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetMachineOk() (*string, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given string and assigns it to the Machine field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetMachine(v string) {
	o.Machine = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetName(v string) {
	o.Name = &v
}

// GetPrettyName returns the PrettyName field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetPrettyName() string {
	if o == nil || IsNil(o.PrettyName) {
		var ret string
		return ret
	}
	return *o.PrettyName
}

// GetPrettyNameOk returns a tuple with the PrettyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetPrettyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrettyName) {
		return nil, false
	}
	return o.PrettyName, true
}

// HasPrettyName returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasPrettyName() bool {
	if o != nil && !IsNil(o.PrettyName) {
		return true
	}

	return false
}

// SetPrettyName gets a reference to the given string and assigns it to the PrettyName field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetPrettyName(v string) {
	o.PrettyName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetVersion(v string) {
	o.Version = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) SetVersionId(v string) {
	o.VersionId = &v
}

func (o KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.KernelRelease) {
		toSerialize["kernelRelease"] = o.KernelRelease
	}
	if !IsNil(o.KernelVersion) {
		toSerialize["kernelVersion"] = o.KernelVersion
	}
	if !IsNil(o.Machine) {
		toSerialize["machine"] = o.Machine
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PrettyName) {
		toSerialize["prettyName"] = o.PrettyName
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo struct {
	value *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) Get() *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) Set(val *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo(val *KubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) *NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo {
	return &NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1VirtualMachineInstanceGuestOSInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


