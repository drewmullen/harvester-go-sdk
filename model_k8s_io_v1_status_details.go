/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the K8sIoV1StatusDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1StatusDetails{}

// K8sIoV1StatusDetails struct for K8sIoV1StatusDetails
type K8sIoV1StatusDetails struct {
	Causes []K8sIoV1StatusCause `json:"causes,omitempty"`
	Group *string `json:"group,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Name *string `json:"name,omitempty"`
	RetryAfterSeconds *int32 `json:"retryAfterSeconds,omitempty"`
	Uid *string `json:"uid,omitempty"`
}

// NewK8sIoV1StatusDetails instantiates a new K8sIoV1StatusDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1StatusDetails() *K8sIoV1StatusDetails {
	this := K8sIoV1StatusDetails{}
	return &this
}

// NewK8sIoV1StatusDetailsWithDefaults instantiates a new K8sIoV1StatusDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1StatusDetailsWithDefaults() *K8sIoV1StatusDetails {
	this := K8sIoV1StatusDetails{}
	return &this
}

// GetCauses returns the Causes field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetCauses() []K8sIoV1StatusCause {
	if o == nil || IsNil(o.Causes) {
		var ret []K8sIoV1StatusCause
		return ret
	}
	return o.Causes
}

// GetCausesOk returns a tuple with the Causes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetCausesOk() ([]K8sIoV1StatusCause, bool) {
	if o == nil || IsNil(o.Causes) {
		return nil, false
	}
	return o.Causes, true
}

// HasCauses returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasCauses() bool {
	if o != nil && !IsNil(o.Causes) {
		return true
	}

	return false
}

// SetCauses gets a reference to the given []K8sIoV1StatusCause and assigns it to the Causes field.
func (o *K8sIoV1StatusDetails) SetCauses(v []K8sIoV1StatusCause) {
	o.Causes = v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *K8sIoV1StatusDetails) SetGroup(v string) {
	o.Group = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *K8sIoV1StatusDetails) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *K8sIoV1StatusDetails) SetName(v string) {
	o.Name = &v
}

// GetRetryAfterSeconds returns the RetryAfterSeconds field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetRetryAfterSeconds() int32 {
	if o == nil || IsNil(o.RetryAfterSeconds) {
		var ret int32
		return ret
	}
	return *o.RetryAfterSeconds
}

// GetRetryAfterSecondsOk returns a tuple with the RetryAfterSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetRetryAfterSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryAfterSeconds) {
		return nil, false
	}
	return o.RetryAfterSeconds, true
}

// HasRetryAfterSeconds returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasRetryAfterSeconds() bool {
	if o != nil && !IsNil(o.RetryAfterSeconds) {
		return true
	}

	return false
}

// SetRetryAfterSeconds gets a reference to the given int32 and assigns it to the RetryAfterSeconds field.
func (o *K8sIoV1StatusDetails) SetRetryAfterSeconds(v int32) {
	o.RetryAfterSeconds = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *K8sIoV1StatusDetails) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1StatusDetails) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *K8sIoV1StatusDetails) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *K8sIoV1StatusDetails) SetUid(v string) {
	o.Uid = &v
}

func (o K8sIoV1StatusDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1StatusDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Causes) {
		toSerialize["causes"] = o.Causes
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RetryAfterSeconds) {
		toSerialize["retryAfterSeconds"] = o.RetryAfterSeconds
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	return toSerialize, nil
}

type NullableK8sIoV1StatusDetails struct {
	value *K8sIoV1StatusDetails
	isSet bool
}

func (v NullableK8sIoV1StatusDetails) Get() *K8sIoV1StatusDetails {
	return v.value
}

func (v *NullableK8sIoV1StatusDetails) Set(val *K8sIoV1StatusDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1StatusDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1StatusDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1StatusDetails(val *K8sIoV1StatusDetails) *NullableK8sIoV1StatusDetails {
	return &NullableK8sIoV1StatusDetails{value: val, isSet: true}
}

func (v NullableK8sIoV1StatusDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1StatusDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


