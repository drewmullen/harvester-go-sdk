/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoApiCoreV1DomainSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1DomainSpec{}

// KubevirtIoApiCoreV1DomainSpec struct for KubevirtIoApiCoreV1DomainSpec
type KubevirtIoApiCoreV1DomainSpec struct {
	Chassis *KubevirtIoApiCoreV1Chassis `json:"chassis,omitempty"`
	Clock *KubevirtIoApiCoreV1Clock `json:"clock,omitempty"`
	Cpu *KubevirtIoApiCoreV1CPU `json:"cpu,omitempty"`
	Devices KubevirtIoApiCoreV1Devices `json:"devices"`
	Features *KubevirtIoApiCoreV1Features `json:"features,omitempty"`
	Firmware *KubevirtIoApiCoreV1Firmware `json:"firmware,omitempty"`
	IoThreadsPolicy *string `json:"ioThreadsPolicy,omitempty"`
	LaunchSecurity *KubevirtIoApiCoreV1LaunchSecurity `json:"launchSecurity,omitempty"`
	Machine *KubevirtIoApiCoreV1Machine `json:"machine,omitempty"`
	Memory *KubevirtIoApiCoreV1Memory `json:"memory,omitempty"`
	Resources *KubevirtIoApiCoreV1ResourceRequirements `json:"resources,omitempty"`
}

type _KubevirtIoApiCoreV1DomainSpec KubevirtIoApiCoreV1DomainSpec

// NewKubevirtIoApiCoreV1DomainSpec instantiates a new KubevirtIoApiCoreV1DomainSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1DomainSpec(devices KubevirtIoApiCoreV1Devices) *KubevirtIoApiCoreV1DomainSpec {
	this := KubevirtIoApiCoreV1DomainSpec{}
	this.Devices = devices
	var resources KubevirtIoApiCoreV1ResourceRequirements = {}
	this.Resources = &resources
	return &this
}

// NewKubevirtIoApiCoreV1DomainSpecWithDefaults instantiates a new KubevirtIoApiCoreV1DomainSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1DomainSpecWithDefaults() *KubevirtIoApiCoreV1DomainSpec {
	this := KubevirtIoApiCoreV1DomainSpec{}
	var devices KubevirtIoApiCoreV1Devices = {}
	this.Devices = devices
	var resources KubevirtIoApiCoreV1ResourceRequirements = {}
	this.Resources = &resources
	return &this
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetChassis() KubevirtIoApiCoreV1Chassis {
	if o == nil || IsNil(o.Chassis) {
		var ret KubevirtIoApiCoreV1Chassis
		return ret
	}
	return *o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetChassisOk() (*KubevirtIoApiCoreV1Chassis, bool) {
	if o == nil || IsNil(o.Chassis) {
		return nil, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasChassis() bool {
	if o != nil && !IsNil(o.Chassis) {
		return true
	}

	return false
}

// SetChassis gets a reference to the given KubevirtIoApiCoreV1Chassis and assigns it to the Chassis field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetChassis(v KubevirtIoApiCoreV1Chassis) {
	o.Chassis = &v
}

// GetClock returns the Clock field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetClock() KubevirtIoApiCoreV1Clock {
	if o == nil || IsNil(o.Clock) {
		var ret KubevirtIoApiCoreV1Clock
		return ret
	}
	return *o.Clock
}

// GetClockOk returns a tuple with the Clock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetClockOk() (*KubevirtIoApiCoreV1Clock, bool) {
	if o == nil || IsNil(o.Clock) {
		return nil, false
	}
	return o.Clock, true
}

// HasClock returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasClock() bool {
	if o != nil && !IsNil(o.Clock) {
		return true
	}

	return false
}

// SetClock gets a reference to the given KubevirtIoApiCoreV1Clock and assigns it to the Clock field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetClock(v KubevirtIoApiCoreV1Clock) {
	o.Clock = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetCpu() KubevirtIoApiCoreV1CPU {
	if o == nil || IsNil(o.Cpu) {
		var ret KubevirtIoApiCoreV1CPU
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetCpuOk() (*KubevirtIoApiCoreV1CPU, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given KubevirtIoApiCoreV1CPU and assigns it to the Cpu field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetCpu(v KubevirtIoApiCoreV1CPU) {
	o.Cpu = &v
}

// GetDevices returns the Devices field value
func (o *KubevirtIoApiCoreV1DomainSpec) GetDevices() KubevirtIoApiCoreV1Devices {
	if o == nil {
		var ret KubevirtIoApiCoreV1Devices
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetDevicesOk() (*KubevirtIoApiCoreV1Devices, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Devices, true
}

// SetDevices sets field value
func (o *KubevirtIoApiCoreV1DomainSpec) SetDevices(v KubevirtIoApiCoreV1Devices) {
	o.Devices = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetFeatures() KubevirtIoApiCoreV1Features {
	if o == nil || IsNil(o.Features) {
		var ret KubevirtIoApiCoreV1Features
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetFeaturesOk() (*KubevirtIoApiCoreV1Features, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given KubevirtIoApiCoreV1Features and assigns it to the Features field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetFeatures(v KubevirtIoApiCoreV1Features) {
	o.Features = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetFirmware() KubevirtIoApiCoreV1Firmware {
	if o == nil || IsNil(o.Firmware) {
		var ret KubevirtIoApiCoreV1Firmware
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetFirmwareOk() (*KubevirtIoApiCoreV1Firmware, bool) {
	if o == nil || IsNil(o.Firmware) {
		return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasFirmware() bool {
	if o != nil && !IsNil(o.Firmware) {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given KubevirtIoApiCoreV1Firmware and assigns it to the Firmware field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetFirmware(v KubevirtIoApiCoreV1Firmware) {
	o.Firmware = &v
}

// GetIoThreadsPolicy returns the IoThreadsPolicy field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetIoThreadsPolicy() string {
	if o == nil || IsNil(o.IoThreadsPolicy) {
		var ret string
		return ret
	}
	return *o.IoThreadsPolicy
}

// GetIoThreadsPolicyOk returns a tuple with the IoThreadsPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetIoThreadsPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.IoThreadsPolicy) {
		return nil, false
	}
	return o.IoThreadsPolicy, true
}

// HasIoThreadsPolicy returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasIoThreadsPolicy() bool {
	if o != nil && !IsNil(o.IoThreadsPolicy) {
		return true
	}

	return false
}

// SetIoThreadsPolicy gets a reference to the given string and assigns it to the IoThreadsPolicy field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetIoThreadsPolicy(v string) {
	o.IoThreadsPolicy = &v
}

// GetLaunchSecurity returns the LaunchSecurity field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetLaunchSecurity() KubevirtIoApiCoreV1LaunchSecurity {
	if o == nil || IsNil(o.LaunchSecurity) {
		var ret KubevirtIoApiCoreV1LaunchSecurity
		return ret
	}
	return *o.LaunchSecurity
}

// GetLaunchSecurityOk returns a tuple with the LaunchSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetLaunchSecurityOk() (*KubevirtIoApiCoreV1LaunchSecurity, bool) {
	if o == nil || IsNil(o.LaunchSecurity) {
		return nil, false
	}
	return o.LaunchSecurity, true
}

// HasLaunchSecurity returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasLaunchSecurity() bool {
	if o != nil && !IsNil(o.LaunchSecurity) {
		return true
	}

	return false
}

// SetLaunchSecurity gets a reference to the given KubevirtIoApiCoreV1LaunchSecurity and assigns it to the LaunchSecurity field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetLaunchSecurity(v KubevirtIoApiCoreV1LaunchSecurity) {
	o.LaunchSecurity = &v
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetMachine() KubevirtIoApiCoreV1Machine {
	if o == nil || IsNil(o.Machine) {
		var ret KubevirtIoApiCoreV1Machine
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetMachineOk() (*KubevirtIoApiCoreV1Machine, bool) {
	if o == nil || IsNil(o.Machine) {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasMachine() bool {
	if o != nil && !IsNil(o.Machine) {
		return true
	}

	return false
}

// SetMachine gets a reference to the given KubevirtIoApiCoreV1Machine and assigns it to the Machine field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetMachine(v KubevirtIoApiCoreV1Machine) {
	o.Machine = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetMemory() KubevirtIoApiCoreV1Memory {
	if o == nil || IsNil(o.Memory) {
		var ret KubevirtIoApiCoreV1Memory
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetMemoryOk() (*KubevirtIoApiCoreV1Memory, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given KubevirtIoApiCoreV1Memory and assigns it to the Memory field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetMemory(v KubevirtIoApiCoreV1Memory) {
	o.Memory = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1DomainSpec) GetResources() KubevirtIoApiCoreV1ResourceRequirements {
	if o == nil || IsNil(o.Resources) {
		var ret KubevirtIoApiCoreV1ResourceRequirements
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) GetResourcesOk() (*KubevirtIoApiCoreV1ResourceRequirements, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1DomainSpec) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given KubevirtIoApiCoreV1ResourceRequirements and assigns it to the Resources field.
func (o *KubevirtIoApiCoreV1DomainSpec) SetResources(v KubevirtIoApiCoreV1ResourceRequirements) {
	o.Resources = &v
}

func (o KubevirtIoApiCoreV1DomainSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1DomainSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chassis) {
		toSerialize["chassis"] = o.Chassis
	}
	if !IsNil(o.Clock) {
		toSerialize["clock"] = o.Clock
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	toSerialize["devices"] = o.Devices
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Firmware) {
		toSerialize["firmware"] = o.Firmware
	}
	if !IsNil(o.IoThreadsPolicy) {
		toSerialize["ioThreadsPolicy"] = o.IoThreadsPolicy
	}
	if !IsNil(o.LaunchSecurity) {
		toSerialize["launchSecurity"] = o.LaunchSecurity
	}
	if !IsNil(o.Machine) {
		toSerialize["machine"] = o.Machine
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

func (o *KubevirtIoApiCoreV1DomainSpec) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devices",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoApiCoreV1DomainSpec := _KubevirtIoApiCoreV1DomainSpec{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoApiCoreV1DomainSpec)

	if err != nil {
		return err
	}

	*o = KubevirtIoApiCoreV1DomainSpec(varKubevirtIoApiCoreV1DomainSpec)

	return err
}

type NullableKubevirtIoApiCoreV1DomainSpec struct {
	value *KubevirtIoApiCoreV1DomainSpec
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1DomainSpec) Get() *KubevirtIoApiCoreV1DomainSpec {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1DomainSpec) Set(val *KubevirtIoApiCoreV1DomainSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1DomainSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1DomainSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1DomainSpec(val *KubevirtIoApiCoreV1DomainSpec) *NullableKubevirtIoApiCoreV1DomainSpec {
	return &NullableKubevirtIoApiCoreV1DomainSpec{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1DomainSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1DomainSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


