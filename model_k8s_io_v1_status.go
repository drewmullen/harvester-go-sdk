/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the K8sIoV1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1Status{}

// K8sIoV1Status struct for K8sIoV1Status
type K8sIoV1Status struct {
	ApiVersion string `json:"apiVersion"`
	Code *int32 `json:"code,omitempty"`
	Details *K8sIoV1StatusDetails `json:"details,omitempty"`
	Kind string `json:"kind"`
	Message *string `json:"message,omitempty"`
	Metadata *K8sIoV1ListMeta `json:"metadata,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Status *string `json:"status,omitempty"`
}

type _K8sIoV1Status K8sIoV1Status

// NewK8sIoV1Status instantiates a new K8sIoV1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1Status(apiVersion string, kind string) *K8sIoV1Status {
	this := K8sIoV1Status{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	return &this
}

// NewK8sIoV1StatusWithDefaults instantiates a new K8sIoV1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1StatusWithDefaults() *K8sIoV1Status {
	this := K8sIoV1Status{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *K8sIoV1Status) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *K8sIoV1Status) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *K8sIoV1Status) SetCode(v int32) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetDetails() K8sIoV1StatusDetails {
	if o == nil || IsNil(o.Details) {
		var ret K8sIoV1StatusDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetDetailsOk() (*K8sIoV1StatusDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given K8sIoV1StatusDetails and assigns it to the Details field.
func (o *K8sIoV1Status) SetDetails(v K8sIoV1StatusDetails) {
	o.Details = &v
}

// GetKind returns the Kind field value
func (o *K8sIoV1Status) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *K8sIoV1Status) SetKind(v string) {
	o.Kind = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *K8sIoV1Status) SetMessage(v string) {
	o.Message = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetMetadata() K8sIoV1ListMeta {
	if o == nil || IsNil(o.Metadata) {
		var ret K8sIoV1ListMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetMetadataOk() (*K8sIoV1ListMeta, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given K8sIoV1ListMeta and assigns it to the Metadata field.
func (o *K8sIoV1Status) SetMetadata(v K8sIoV1ListMeta) {
	o.Metadata = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *K8sIoV1Status) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *K8sIoV1Status) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1Status) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *K8sIoV1Status) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *K8sIoV1Status) SetStatus(v string) {
	o.Status = &v
}

func (o K8sIoV1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiVersion"] = o.ApiVersion
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	toSerialize["kind"] = o.Kind
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

func (o *K8sIoV1Status) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"apiVersion",
		"kind",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varK8sIoV1Status := _K8sIoV1Status{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varK8sIoV1Status)

	if err != nil {
		return err
	}

	*o = K8sIoV1Status(varK8sIoV1Status)

	return err
}

type NullableK8sIoV1Status struct {
	value *K8sIoV1Status
	isSet bool
}

func (v NullableK8sIoV1Status) Get() *K8sIoV1Status {
	return v.value
}

func (v *NullableK8sIoV1Status) Set(val *K8sIoV1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1Status(val *K8sIoV1Status) *NullableK8sIoV1Status {
	return &NullableK8sIoV1Status{value: val, isSet: true}
}

func (v NullableK8sIoV1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


