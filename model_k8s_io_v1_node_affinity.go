/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the K8sIoV1NodeAffinity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K8sIoV1NodeAffinity{}

// K8sIoV1NodeAffinity struct for K8sIoV1NodeAffinity
type K8sIoV1NodeAffinity struct {
	PreferredDuringSchedulingIgnoredDuringExecution []K8sIoV1PreferredSchedulingTerm `json:"preferredDuringSchedulingIgnoredDuringExecution,omitempty"`
	RequiredDuringSchedulingIgnoredDuringExecution *K8sIoV1NodeSelector `json:"requiredDuringSchedulingIgnoredDuringExecution,omitempty"`
}

// NewK8sIoV1NodeAffinity instantiates a new K8sIoV1NodeAffinity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK8sIoV1NodeAffinity() *K8sIoV1NodeAffinity {
	this := K8sIoV1NodeAffinity{}
	return &this
}

// NewK8sIoV1NodeAffinityWithDefaults instantiates a new K8sIoV1NodeAffinity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK8sIoV1NodeAffinityWithDefaults() *K8sIoV1NodeAffinity {
	this := K8sIoV1NodeAffinity{}
	return &this
}

// GetPreferredDuringSchedulingIgnoredDuringExecution returns the PreferredDuringSchedulingIgnoredDuringExecution field value if set, zero value otherwise.
func (o *K8sIoV1NodeAffinity) GetPreferredDuringSchedulingIgnoredDuringExecution() []K8sIoV1PreferredSchedulingTerm {
	if o == nil || IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		var ret []K8sIoV1PreferredSchedulingTerm
		return ret
	}
	return o.PreferredDuringSchedulingIgnoredDuringExecution
}

// GetPreferredDuringSchedulingIgnoredDuringExecutionOk returns a tuple with the PreferredDuringSchedulingIgnoredDuringExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1NodeAffinity) GetPreferredDuringSchedulingIgnoredDuringExecutionOk() ([]K8sIoV1PreferredSchedulingTerm, bool) {
	if o == nil || IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		return nil, false
	}
	return o.PreferredDuringSchedulingIgnoredDuringExecution, true
}

// HasPreferredDuringSchedulingIgnoredDuringExecution returns a boolean if a field has been set.
func (o *K8sIoV1NodeAffinity) HasPreferredDuringSchedulingIgnoredDuringExecution() bool {
	if o != nil && !IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		return true
	}

	return false
}

// SetPreferredDuringSchedulingIgnoredDuringExecution gets a reference to the given []K8sIoV1PreferredSchedulingTerm and assigns it to the PreferredDuringSchedulingIgnoredDuringExecution field.
func (o *K8sIoV1NodeAffinity) SetPreferredDuringSchedulingIgnoredDuringExecution(v []K8sIoV1PreferredSchedulingTerm) {
	o.PreferredDuringSchedulingIgnoredDuringExecution = v
}

// GetRequiredDuringSchedulingIgnoredDuringExecution returns the RequiredDuringSchedulingIgnoredDuringExecution field value if set, zero value otherwise.
func (o *K8sIoV1NodeAffinity) GetRequiredDuringSchedulingIgnoredDuringExecution() K8sIoV1NodeSelector {
	if o == nil || IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		var ret K8sIoV1NodeSelector
		return ret
	}
	return *o.RequiredDuringSchedulingIgnoredDuringExecution
}

// GetRequiredDuringSchedulingIgnoredDuringExecutionOk returns a tuple with the RequiredDuringSchedulingIgnoredDuringExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *K8sIoV1NodeAffinity) GetRequiredDuringSchedulingIgnoredDuringExecutionOk() (*K8sIoV1NodeSelector, bool) {
	if o == nil || IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		return nil, false
	}
	return o.RequiredDuringSchedulingIgnoredDuringExecution, true
}

// HasRequiredDuringSchedulingIgnoredDuringExecution returns a boolean if a field has been set.
func (o *K8sIoV1NodeAffinity) HasRequiredDuringSchedulingIgnoredDuringExecution() bool {
	if o != nil && !IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		return true
	}

	return false
}

// SetRequiredDuringSchedulingIgnoredDuringExecution gets a reference to the given K8sIoV1NodeSelector and assigns it to the RequiredDuringSchedulingIgnoredDuringExecution field.
func (o *K8sIoV1NodeAffinity) SetRequiredDuringSchedulingIgnoredDuringExecution(v K8sIoV1NodeSelector) {
	o.RequiredDuringSchedulingIgnoredDuringExecution = &v
}

func (o K8sIoV1NodeAffinity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K8sIoV1NodeAffinity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PreferredDuringSchedulingIgnoredDuringExecution) {
		toSerialize["preferredDuringSchedulingIgnoredDuringExecution"] = o.PreferredDuringSchedulingIgnoredDuringExecution
	}
	if !IsNil(o.RequiredDuringSchedulingIgnoredDuringExecution) {
		toSerialize["requiredDuringSchedulingIgnoredDuringExecution"] = o.RequiredDuringSchedulingIgnoredDuringExecution
	}
	return toSerialize, nil
}

type NullableK8sIoV1NodeAffinity struct {
	value *K8sIoV1NodeAffinity
	isSet bool
}

func (v NullableK8sIoV1NodeAffinity) Get() *K8sIoV1NodeAffinity {
	return v.value
}

func (v *NullableK8sIoV1NodeAffinity) Set(val *K8sIoV1NodeAffinity) {
	v.value = val
	v.isSet = true
}

func (v NullableK8sIoV1NodeAffinity) IsSet() bool {
	return v.isSet
}

func (v *NullableK8sIoV1NodeAffinity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK8sIoV1NodeAffinity(val *K8sIoV1NodeAffinity) *NullableK8sIoV1NodeAffinity {
	return &NullableK8sIoV1NodeAffinity{value: val, isSet: true}
}

func (v NullableK8sIoV1NodeAffinity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK8sIoV1NodeAffinity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


