/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP{}

// KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP struct for KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP
type KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP struct {
	CertConfigMap *string `json:"certConfigMap,omitempty"`
	ExtraHeaders []string `json:"extraHeaders,omitempty"`
	SecretExtraHeaders []string `json:"secretExtraHeaders,omitempty"`
	SecretRef *string `json:"secretRef,omitempty"`
	Url string `json:"url"`
}

type _KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP

// NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP instantiates a new KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP(url string) *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP {
	this := KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP{}
	this.Url = url
	return &this
}

// NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTPWithDefaults instantiates a new KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTPWithDefaults() *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP {
	this := KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP{}
	var url string = ""
	this.Url = url
	return &this
}

// GetCertConfigMap returns the CertConfigMap field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetCertConfigMap() string {
	if o == nil || IsNil(o.CertConfigMap) {
		var ret string
		return ret
	}
	return *o.CertConfigMap
}

// GetCertConfigMapOk returns a tuple with the CertConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetCertConfigMapOk() (*string, bool) {
	if o == nil || IsNil(o.CertConfigMap) {
		return nil, false
	}
	return o.CertConfigMap, true
}

// HasCertConfigMap returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) HasCertConfigMap() bool {
	if o != nil && !IsNil(o.CertConfigMap) {
		return true
	}

	return false
}

// SetCertConfigMap gets a reference to the given string and assigns it to the CertConfigMap field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) SetCertConfigMap(v string) {
	o.CertConfigMap = &v
}

// GetExtraHeaders returns the ExtraHeaders field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetExtraHeaders() []string {
	if o == nil || IsNil(o.ExtraHeaders) {
		var ret []string
		return ret
	}
	return o.ExtraHeaders
}

// GetExtraHeadersOk returns a tuple with the ExtraHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetExtraHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtraHeaders) {
		return nil, false
	}
	return o.ExtraHeaders, true
}

// HasExtraHeaders returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) HasExtraHeaders() bool {
	if o != nil && !IsNil(o.ExtraHeaders) {
		return true
	}

	return false
}

// SetExtraHeaders gets a reference to the given []string and assigns it to the ExtraHeaders field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) SetExtraHeaders(v []string) {
	o.ExtraHeaders = v
}

// GetSecretExtraHeaders returns the SecretExtraHeaders field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetSecretExtraHeaders() []string {
	if o == nil || IsNil(o.SecretExtraHeaders) {
		var ret []string
		return ret
	}
	return o.SecretExtraHeaders
}

// GetSecretExtraHeadersOk returns a tuple with the SecretExtraHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetSecretExtraHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.SecretExtraHeaders) {
		return nil, false
	}
	return o.SecretExtraHeaders, true
}

// HasSecretExtraHeaders returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) HasSecretExtraHeaders() bool {
	if o != nil && !IsNil(o.SecretExtraHeaders) {
		return true
	}

	return false
}

// SetSecretExtraHeaders gets a reference to the given []string and assigns it to the SecretExtraHeaders field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) SetSecretExtraHeaders(v []string) {
	o.SecretExtraHeaders = v
}

// GetSecretRef returns the SecretRef field value if set, zero value otherwise.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetSecretRef() string {
	if o == nil || IsNil(o.SecretRef) {
		var ret string
		return ret
	}
	return *o.SecretRef
}

// GetSecretRefOk returns a tuple with the SecretRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetSecretRefOk() (*string, bool) {
	if o == nil || IsNil(o.SecretRef) {
		return nil, false
	}
	return o.SecretRef, true
}

// HasSecretRef returns a boolean if a field has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) HasSecretRef() bool {
	if o != nil && !IsNil(o.SecretRef) {
		return true
	}

	return false
}

// SetSecretRef gets a reference to the given string and assigns it to the SecretRef field.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) SetSecretRef(v string) {
	o.SecretRef = &v
}

// GetUrl returns the Url field value
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) SetUrl(v string) {
	o.Url = v
}

func (o KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CertConfigMap) {
		toSerialize["certConfigMap"] = o.CertConfigMap
	}
	if !IsNil(o.ExtraHeaders) {
		toSerialize["extraHeaders"] = o.ExtraHeaders
	}
	if !IsNil(o.SecretExtraHeaders) {
		toSerialize["secretExtraHeaders"] = o.SecretExtraHeaders
	}
	if !IsNil(o.SecretRef) {
		toSerialize["secretRef"] = o.SecretRef
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP := _KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP)

	if err != nil {
		return err
	}

	*o = KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP(varKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP)

	return err
}

type NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP struct {
	value *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP
	isSet bool
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) Get() *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP {
	return v.value
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) Set(val *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP(val *KubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP {
	return &NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP{value: val, isSet: true}
}

func (v NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoContainerizedDataImporterApiPkgApisCoreV1beta1DataVolumeSourceHTTP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


