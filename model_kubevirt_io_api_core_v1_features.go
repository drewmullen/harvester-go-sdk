/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1Features type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Features{}

// KubevirtIoApiCoreV1Features struct for KubevirtIoApiCoreV1Features
type KubevirtIoApiCoreV1Features struct {
	Acpi *KubevirtIoApiCoreV1FeatureState `json:"acpi,omitempty"`
	Apic *KubevirtIoApiCoreV1FeatureAPIC `json:"apic,omitempty"`
	Hyperv *KubevirtIoApiCoreV1FeatureHyperv `json:"hyperv,omitempty"`
	Kvm *KubevirtIoApiCoreV1FeatureKVM `json:"kvm,omitempty"`
	Pvspinlock *KubevirtIoApiCoreV1FeatureState `json:"pvspinlock,omitempty"`
	Smm *KubevirtIoApiCoreV1FeatureState `json:"smm,omitempty"`
}

// NewKubevirtIoApiCoreV1Features instantiates a new KubevirtIoApiCoreV1Features object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Features() *KubevirtIoApiCoreV1Features {
	this := KubevirtIoApiCoreV1Features{}
	var acpi KubevirtIoApiCoreV1FeatureState = {}
	this.Acpi = &acpi
	return &this
}

// NewKubevirtIoApiCoreV1FeaturesWithDefaults instantiates a new KubevirtIoApiCoreV1Features object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1FeaturesWithDefaults() *KubevirtIoApiCoreV1Features {
	this := KubevirtIoApiCoreV1Features{}
	var acpi KubevirtIoApiCoreV1FeatureState = {}
	this.Acpi = &acpi
	return &this
}

// GetAcpi returns the Acpi field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetAcpi() KubevirtIoApiCoreV1FeatureState {
	if o == nil || IsNil(o.Acpi) {
		var ret KubevirtIoApiCoreV1FeatureState
		return ret
	}
	return *o.Acpi
}

// GetAcpiOk returns a tuple with the Acpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetAcpiOk() (*KubevirtIoApiCoreV1FeatureState, bool) {
	if o == nil || IsNil(o.Acpi) {
		return nil, false
	}
	return o.Acpi, true
}

// HasAcpi returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasAcpi() bool {
	if o != nil && !IsNil(o.Acpi) {
		return true
	}

	return false
}

// SetAcpi gets a reference to the given KubevirtIoApiCoreV1FeatureState and assigns it to the Acpi field.
func (o *KubevirtIoApiCoreV1Features) SetAcpi(v KubevirtIoApiCoreV1FeatureState) {
	o.Acpi = &v
}

// GetApic returns the Apic field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetApic() KubevirtIoApiCoreV1FeatureAPIC {
	if o == nil || IsNil(o.Apic) {
		var ret KubevirtIoApiCoreV1FeatureAPIC
		return ret
	}
	return *o.Apic
}

// GetApicOk returns a tuple with the Apic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetApicOk() (*KubevirtIoApiCoreV1FeatureAPIC, bool) {
	if o == nil || IsNil(o.Apic) {
		return nil, false
	}
	return o.Apic, true
}

// HasApic returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasApic() bool {
	if o != nil && !IsNil(o.Apic) {
		return true
	}

	return false
}

// SetApic gets a reference to the given KubevirtIoApiCoreV1FeatureAPIC and assigns it to the Apic field.
func (o *KubevirtIoApiCoreV1Features) SetApic(v KubevirtIoApiCoreV1FeatureAPIC) {
	o.Apic = &v
}

// GetHyperv returns the Hyperv field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetHyperv() KubevirtIoApiCoreV1FeatureHyperv {
	if o == nil || IsNil(o.Hyperv) {
		var ret KubevirtIoApiCoreV1FeatureHyperv
		return ret
	}
	return *o.Hyperv
}

// GetHypervOk returns a tuple with the Hyperv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetHypervOk() (*KubevirtIoApiCoreV1FeatureHyperv, bool) {
	if o == nil || IsNil(o.Hyperv) {
		return nil, false
	}
	return o.Hyperv, true
}

// HasHyperv returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasHyperv() bool {
	if o != nil && !IsNil(o.Hyperv) {
		return true
	}

	return false
}

// SetHyperv gets a reference to the given KubevirtIoApiCoreV1FeatureHyperv and assigns it to the Hyperv field.
func (o *KubevirtIoApiCoreV1Features) SetHyperv(v KubevirtIoApiCoreV1FeatureHyperv) {
	o.Hyperv = &v
}

// GetKvm returns the Kvm field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetKvm() KubevirtIoApiCoreV1FeatureKVM {
	if o == nil || IsNil(o.Kvm) {
		var ret KubevirtIoApiCoreV1FeatureKVM
		return ret
	}
	return *o.Kvm
}

// GetKvmOk returns a tuple with the Kvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetKvmOk() (*KubevirtIoApiCoreV1FeatureKVM, bool) {
	if o == nil || IsNil(o.Kvm) {
		return nil, false
	}
	return o.Kvm, true
}

// HasKvm returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasKvm() bool {
	if o != nil && !IsNil(o.Kvm) {
		return true
	}

	return false
}

// SetKvm gets a reference to the given KubevirtIoApiCoreV1FeatureKVM and assigns it to the Kvm field.
func (o *KubevirtIoApiCoreV1Features) SetKvm(v KubevirtIoApiCoreV1FeatureKVM) {
	o.Kvm = &v
}

// GetPvspinlock returns the Pvspinlock field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetPvspinlock() KubevirtIoApiCoreV1FeatureState {
	if o == nil || IsNil(o.Pvspinlock) {
		var ret KubevirtIoApiCoreV1FeatureState
		return ret
	}
	return *o.Pvspinlock
}

// GetPvspinlockOk returns a tuple with the Pvspinlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetPvspinlockOk() (*KubevirtIoApiCoreV1FeatureState, bool) {
	if o == nil || IsNil(o.Pvspinlock) {
		return nil, false
	}
	return o.Pvspinlock, true
}

// HasPvspinlock returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasPvspinlock() bool {
	if o != nil && !IsNil(o.Pvspinlock) {
		return true
	}

	return false
}

// SetPvspinlock gets a reference to the given KubevirtIoApiCoreV1FeatureState and assigns it to the Pvspinlock field.
func (o *KubevirtIoApiCoreV1Features) SetPvspinlock(v KubevirtIoApiCoreV1FeatureState) {
	o.Pvspinlock = &v
}

// GetSmm returns the Smm field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Features) GetSmm() KubevirtIoApiCoreV1FeatureState {
	if o == nil || IsNil(o.Smm) {
		var ret KubevirtIoApiCoreV1FeatureState
		return ret
	}
	return *o.Smm
}

// GetSmmOk returns a tuple with the Smm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Features) GetSmmOk() (*KubevirtIoApiCoreV1FeatureState, bool) {
	if o == nil || IsNil(o.Smm) {
		return nil, false
	}
	return o.Smm, true
}

// HasSmm returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Features) HasSmm() bool {
	if o != nil && !IsNil(o.Smm) {
		return true
	}

	return false
}

// SetSmm gets a reference to the given KubevirtIoApiCoreV1FeatureState and assigns it to the Smm field.
func (o *KubevirtIoApiCoreV1Features) SetSmm(v KubevirtIoApiCoreV1FeatureState) {
	o.Smm = &v
}

func (o KubevirtIoApiCoreV1Features) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Features) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acpi) {
		toSerialize["acpi"] = o.Acpi
	}
	if !IsNil(o.Apic) {
		toSerialize["apic"] = o.Apic
	}
	if !IsNil(o.Hyperv) {
		toSerialize["hyperv"] = o.Hyperv
	}
	if !IsNil(o.Kvm) {
		toSerialize["kvm"] = o.Kvm
	}
	if !IsNil(o.Pvspinlock) {
		toSerialize["pvspinlock"] = o.Pvspinlock
	}
	if !IsNil(o.Smm) {
		toSerialize["smm"] = o.Smm
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1Features struct {
	value *KubevirtIoApiCoreV1Features
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Features) Get() *KubevirtIoApiCoreV1Features {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Features) Set(val *KubevirtIoApiCoreV1Features) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Features) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Features) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Features(val *KubevirtIoApiCoreV1Features) *NullableKubevirtIoApiCoreV1Features {
	return &NullableKubevirtIoApiCoreV1Features{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Features) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Features) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


