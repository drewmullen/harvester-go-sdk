/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1EphemeralVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1EphemeralVolumeSource{}

// KubevirtIoApiCoreV1EphemeralVolumeSource struct for KubevirtIoApiCoreV1EphemeralVolumeSource
type KubevirtIoApiCoreV1EphemeralVolumeSource struct {
	PersistentVolumeClaim *K8sIoV1PersistentVolumeClaimVolumeSource `json:"persistentVolumeClaim,omitempty"`
}

// NewKubevirtIoApiCoreV1EphemeralVolumeSource instantiates a new KubevirtIoApiCoreV1EphemeralVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1EphemeralVolumeSource() *KubevirtIoApiCoreV1EphemeralVolumeSource {
	this := KubevirtIoApiCoreV1EphemeralVolumeSource{}
	return &this
}

// NewKubevirtIoApiCoreV1EphemeralVolumeSourceWithDefaults instantiates a new KubevirtIoApiCoreV1EphemeralVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1EphemeralVolumeSourceWithDefaults() *KubevirtIoApiCoreV1EphemeralVolumeSource {
	this := KubevirtIoApiCoreV1EphemeralVolumeSource{}
	return &this
}

// GetPersistentVolumeClaim returns the PersistentVolumeClaim field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1EphemeralVolumeSource) GetPersistentVolumeClaim() K8sIoV1PersistentVolumeClaimVolumeSource {
	if o == nil || IsNil(o.PersistentVolumeClaim) {
		var ret K8sIoV1PersistentVolumeClaimVolumeSource
		return ret
	}
	return *o.PersistentVolumeClaim
}

// GetPersistentVolumeClaimOk returns a tuple with the PersistentVolumeClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1EphemeralVolumeSource) GetPersistentVolumeClaimOk() (*K8sIoV1PersistentVolumeClaimVolumeSource, bool) {
	if o == nil || IsNil(o.PersistentVolumeClaim) {
		return nil, false
	}
	return o.PersistentVolumeClaim, true
}

// HasPersistentVolumeClaim returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1EphemeralVolumeSource) HasPersistentVolumeClaim() bool {
	if o != nil && !IsNil(o.PersistentVolumeClaim) {
		return true
	}

	return false
}

// SetPersistentVolumeClaim gets a reference to the given K8sIoV1PersistentVolumeClaimVolumeSource and assigns it to the PersistentVolumeClaim field.
func (o *KubevirtIoApiCoreV1EphemeralVolumeSource) SetPersistentVolumeClaim(v K8sIoV1PersistentVolumeClaimVolumeSource) {
	o.PersistentVolumeClaim = &v
}

func (o KubevirtIoApiCoreV1EphemeralVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1EphemeralVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PersistentVolumeClaim) {
		toSerialize["persistentVolumeClaim"] = o.PersistentVolumeClaim
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1EphemeralVolumeSource struct {
	value *KubevirtIoApiCoreV1EphemeralVolumeSource
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1EphemeralVolumeSource) Get() *KubevirtIoApiCoreV1EphemeralVolumeSource {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1EphemeralVolumeSource) Set(val *KubevirtIoApiCoreV1EphemeralVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1EphemeralVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1EphemeralVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1EphemeralVolumeSource(val *KubevirtIoApiCoreV1EphemeralVolumeSource) *NullableKubevirtIoApiCoreV1EphemeralVolumeSource {
	return &NullableKubevirtIoApiCoreV1EphemeralVolumeSource{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1EphemeralVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1EphemeralVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


