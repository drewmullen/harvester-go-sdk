/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HarvesterhciIoV1beta1SecretBackup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HarvesterhciIoV1beta1SecretBackup{}

// HarvesterhciIoV1beta1SecretBackup struct for HarvesterhciIoV1beta1SecretBackup
type HarvesterhciIoV1beta1SecretBackup struct {
	Data *map[string]string `json:"data,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewHarvesterhciIoV1beta1SecretBackup instantiates a new HarvesterhciIoV1beta1SecretBackup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHarvesterhciIoV1beta1SecretBackup() *HarvesterhciIoV1beta1SecretBackup {
	this := HarvesterhciIoV1beta1SecretBackup{}
	return &this
}

// NewHarvesterhciIoV1beta1SecretBackupWithDefaults instantiates a new HarvesterhciIoV1beta1SecretBackup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHarvesterhciIoV1beta1SecretBackupWithDefaults() *HarvesterhciIoV1beta1SecretBackup {
	this := HarvesterhciIoV1beta1SecretBackup{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1SecretBackup) GetData() map[string]string {
	if o == nil || IsNil(o.Data) {
		var ret map[string]string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1SecretBackup) GetDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1SecretBackup) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]string and assigns it to the Data field.
func (o *HarvesterhciIoV1beta1SecretBackup) SetData(v map[string]string) {
	o.Data = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HarvesterhciIoV1beta1SecretBackup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HarvesterhciIoV1beta1SecretBackup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HarvesterhciIoV1beta1SecretBackup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HarvesterhciIoV1beta1SecretBackup) SetName(v string) {
	o.Name = &v
}

func (o HarvesterhciIoV1beta1SecretBackup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HarvesterhciIoV1beta1SecretBackup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableHarvesterhciIoV1beta1SecretBackup struct {
	value *HarvesterhciIoV1beta1SecretBackup
	isSet bool
}

func (v NullableHarvesterhciIoV1beta1SecretBackup) Get() *HarvesterhciIoV1beta1SecretBackup {
	return v.value
}

func (v *NullableHarvesterhciIoV1beta1SecretBackup) Set(val *HarvesterhciIoV1beta1SecretBackup) {
	v.value = val
	v.isSet = true
}

func (v NullableHarvesterhciIoV1beta1SecretBackup) IsSet() bool {
	return v.isSet
}

func (v *NullableHarvesterhciIoV1beta1SecretBackup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHarvesterhciIoV1beta1SecretBackup(val *HarvesterhciIoV1beta1SecretBackup) *NullableHarvesterhciIoV1beta1SecretBackup {
	return &NullableHarvesterhciIoV1beta1SecretBackup{value: val, isSet: true}
}

func (v NullableHarvesterhciIoV1beta1SecretBackup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHarvesterhciIoV1beta1SecretBackup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


