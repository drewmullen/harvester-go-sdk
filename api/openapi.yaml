openapi: 3.0.0
info:
  title: Harvester APIs
  version: v1beta1
servers:
- url: /
paths:
  /api/v1/namespaces/{namespace}/persistentvolumeclaims:
    get:
      description: Get a list of PersistentVolumeClaim objects in a namespace.
      operationId: listNamespacedPersistentVolumeClaim
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Persistent Volume Claims
      tags:
      - Volumes
    post:
      description: Create a PersistentVolumeClaim object.
      operationId: createNamespacedPersistentVolumeClaim
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Persistent Volume Claim
      tags:
      - Volumes
  /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}:
    delete:
      description: Delete a PersistentVolumeClaim object.
      operationId: deleteNamespacedPersistentVolumeClaim
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Persistent Volume Claim
      tags:
      - Volumes
    get:
      description: Get a PersistentVolumeClaim object.
      operationId: readNamespacedPersistentVolumeClaim
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Persistent Volume Claim
      tags:
      - Volumes
    patch:
      description: Patch a PersistentVolumeClaim object.
      operationId: patchNamespacedPersistentVolumeClaim
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Persistent Volume Claim
      tags:
      - Volumes
    put:
      description: Update a PersistentVolumeClaim object.
      operationId: replaceNamespacedPersistentVolumeClaim
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Persistent Volume Claim
      tags:
      - Volumes
  /api/v1/persistentvolumeclaims:
    get:
      description: Get a list of all PersistentVolumeClaim objects.
      operationId: listPersistentVolumeClaimForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Persistent Volume Claims For All Namespaces
      tags:
      - Volumes
  /apis/harvesterhci.io/v1beta1/keypairs:
    get:
      description: Get a list of all KeyPair objects.
      operationId: listKeyPairForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Key Pairs For All Namespaces
      tags:
      - SSH Keys
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs:
    get:
      description: Get a list of KeyPair objects in a namespace.
      operationId: listNamespacedKeyPair
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Key Pairs
      tags:
      - SSH Keys
    post:
      description: Create a KeyPair object.
      operationId: createNamespacedKeyPair
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Key Pair
      tags:
      - SSH Keys
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/keypairs/{name}:
    delete:
      description: Delete a KeyPair object.
      operationId: deleteNamespacedKeyPair
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Key Pair
      tags:
      - SSH Keys
    get:
      description: Get a KeyPair object.
      operationId: readNamespacedKeyPair
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Key Pair
      tags:
      - SSH Keys
    patch:
      description: Patch a KeyPair object.
      operationId: patchNamespacedKeyPair
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Key Pair
      tags:
      - SSH Keys
    put:
      description: Update a KeyPair object.
      operationId: replaceNamespacedKeyPair
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Key Pair
      tags:
      - SSH Keys
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles:
    get:
      description: Get a list of SupportBundle objects in a namespace.
      operationId: listNamespacedSupportBundle
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Support Bundles
      tags:
      - Support Bundles
    post:
      description: Create a SupportBundle object.
      operationId: createNamespacedSupportBundle
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Support Bundle
      tags:
      - Support Bundles
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/supportbundles/{name}:
    delete:
      description: Delete a SupportBundle object.
      operationId: deleteNamespacedSupportBundle
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Support Bundle
      tags:
      - Support Bundles
    get:
      description: Get a SupportBundle object.
      operationId: readNamespacedSupportBundle
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Support Bundle
      tags:
      - Support Bundles
    patch:
      description: Patch a SupportBundle object.
      operationId: patchNamespacedSupportBundle
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Support Bundle
      tags:
      - Support Bundles
    put:
      description: Update a SupportBundle object.
      operationId: replaceNamespacedSupportBundle
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Support Bundle
      tags:
      - Support Bundles
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades:
    get:
      description: Get a list of Upgrade objects in a namespace.
      operationId: listNamespacedUpgrade
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Upgrades
      tags:
      - Upgrades
    post:
      description: Create a Upgrade object.
      operationId: createNamespacedUpgrade
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Upgrade
      tags:
      - Upgrades
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/upgrades/{name}:
    delete:
      description: Delete a Upgrade object.
      operationId: deleteNamespacedUpgrade
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Upgrade
      tags:
      - Upgrades
    get:
      description: Get a Upgrade object.
      operationId: readNamespacedUpgrade
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Upgrade
      tags:
      - Upgrades
    patch:
      description: Patch a Upgrade object.
      operationId: patchNamespacedUpgrade
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Upgrade
      tags:
      - Upgrades
    put:
      description: Update a Upgrade object.
      operationId: replaceNamespacedUpgrade
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Upgrade
      tags:
      - Upgrades
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups:
    get:
      description: Get a list of VirtualMachineBackup objects in a namespace.
      operationId: listNamespacedVirtualMachineBackup
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Backups
      tags:
      - Backups
    post:
      description: Create a VirtualMachineBackup object.
      operationId: createNamespacedVirtualMachineBackup
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Backup
      tags:
      - Backups
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinebackups/{name}:
    delete:
      description: Delete a VirtualMachineBackup object.
      operationId: deleteNamespacedVirtualMachineBackup
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Backup
      tags:
      - Backups
    get:
      description: Get a VirtualMachineBackup object.
      operationId: readNamespacedVirtualMachineBackup
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Backup
      tags:
      - Backups
    patch:
      description: Patch a VirtualMachineBackup object.
      operationId: patchNamespacedVirtualMachineBackup
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Backup
      tags:
      - Backups
    put:
      description: Update a VirtualMachineBackup object.
      operationId: replaceNamespacedVirtualMachineBackup
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Backup
      tags:
      - Backups
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages:
    get:
      description: Get a list of VirtualMachineImage objects in a namespace.
      operationId: listNamespacedVirtualMachineImage
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Images
      tags:
      - Images
    post:
      description: Create a VirtualMachineImage object.
      operationId: createNamespacedVirtualMachineImage
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Image
      tags:
      - Images
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachineimages/{name}:
    delete:
      description: Delete a VirtualMachineImage object.
      operationId: deleteNamespacedVirtualMachineImage
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Image
      tags:
      - Images
    get:
      description: Get a VirtualMachineImage object.
      operationId: readNamespacedVirtualMachineImage
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Image
      tags:
      - Images
    patch:
      description: Patch a VirtualMachineImage object.
      operationId: patchNamespacedVirtualMachineImage
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Image
      tags:
      - Images
    put:
      description: Update a VirtualMachineImage object.
      operationId: replaceNamespacedVirtualMachineImage
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Image
      tags:
      - Images
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores:
    get:
      description: Get a list of VirtualMachineRestore objects in a namespace.
      operationId: listNamespacedVirtualMachineRestore
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Restores
      tags:
      - Restores
    post:
      description: Create a VirtualMachineRestore object.
      operationId: createNamespacedVirtualMachineRestore
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Restore
      tags:
      - Restores
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinerestores/{name}:
    delete:
      description: Delete a VirtualMachineRestore object.
      operationId: deleteNamespacedVirtualMachineRestore
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Restore
      tags:
      - Restores
    get:
      description: Get a VirtualMachineRestore object.
      operationId: readNamespacedVirtualMachineRestore
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Restore
      tags:
      - Restores
    patch:
      description: Patch a VirtualMachineRestore object.
      operationId: patchNamespacedVirtualMachineRestore
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Restore
      tags:
      - Restores
    put:
      description: Update a VirtualMachineRestore object.
      operationId: replaceNamespacedVirtualMachineRestore
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Restore
      tags:
      - Restores
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates:
    get:
      description: Get a list of VirtualMachineTemplate objects in a namespace.
      operationId: listNamespacedVirtualMachineTemplate
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Templates
      tags:
      - Virtual Machine Templates
    post:
      description: Create a VirtualMachineTemplate object.
      operationId: createNamespacedVirtualMachineTemplate
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Template
      tags:
      - Virtual Machine Templates
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplates/{name}:
    delete:
      description: Delete a VirtualMachineTemplate object.
      operationId: deleteNamespacedVirtualMachineTemplate
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Template
      tags:
      - Virtual Machine Templates
    get:
      description: Get a VirtualMachineTemplate object.
      operationId: readNamespacedVirtualMachineTemplate
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Template
      tags:
      - Virtual Machine Templates
    patch:
      description: Patch a VirtualMachineTemplate object.
      operationId: patchNamespacedVirtualMachineTemplate
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Template
      tags:
      - Virtual Machine Templates
    put:
      description: Update a VirtualMachineTemplate object.
      operationId: replaceNamespacedVirtualMachineTemplate
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Template
      tags:
      - Virtual Machine Templates
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions:
    get:
      description: Get a list of VirtualMachineTemplateVersion objects in a namespace.
      operationId: listNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Template Versions
      tags:
      - Virtual Machine Templates
    post:
      description: Create a VirtualMachineTemplateVersion object.
      operationId: createNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Template Version
      tags:
      - Virtual Machine Templates
  /apis/harvesterhci.io/v1beta1/namespaces/{namespace}/virtualmachinetemplateversions/{name}:
    delete:
      description: Delete a VirtualMachineTemplateVersion object.
      operationId: deleteNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Template Version
      tags:
      - Virtual Machine Templates
    get:
      description: Get a VirtualMachineTemplateVersion object.
      operationId: readNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Template Version
      tags:
      - Virtual Machine Templates
    patch:
      description: Patch a VirtualMachineTemplateVersion object.
      operationId: patchNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Template Version
      tags:
      - Virtual Machine Templates
    put:
      description: Update a VirtualMachineTemplateVersion object.
      operationId: replaceNamespacedVirtualMachineTemplateVersion
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          application/yaml:
            schema:
              $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Template Version
      tags:
      - Virtual Machine Templates
  /apis/harvesterhci.io/v1beta1/supportbundles:
    get:
      description: Get a list of all SupportBundle objects.
      operationId: listSupportBundleForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Support Bundles For All Namespaces
      tags:
      - Support Bundles
  /apis/harvesterhci.io/v1beta1/upgrades:
    get:
      description: Get a list of all Upgrade objects.
      operationId: listUpgradeForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Upgrades For All Namespaces
      tags:
      - Upgrades
  /apis/harvesterhci.io/v1beta1/virtualmachinebackups:
    get:
      description: Get a list of all VirtualMachineBackup objects.
      operationId: listVirtualMachineBackupForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Backups For All Namespaces
      tags:
      - Backups
  /apis/harvesterhci.io/v1beta1/virtualmachineimages:
    get:
      description: Get a list of all VirtualMachineImage objects.
      operationId: listVirtualMachineImageForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Images For All Namespaces
      tags:
      - Images
  /apis/harvesterhci.io/v1beta1/virtualmachinerestores:
    get:
      description: Get a list of all VirtualMachineRestore objects.
      operationId: listVirtualMachineRestoreForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Restores For All Namespaces
      tags:
      - Restores
  /apis/harvesterhci.io/v1beta1/virtualmachinetemplates:
    get:
      description: Get a list of all VirtualMachineTemplate objects.
      operationId: listVirtualMachineTemplateForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Templates For All Namespaces
      tags:
      - Virtual Machine Templates
  /apis/harvesterhci.io/v1beta1/virtualmachinetemplateversions:
    get:
      description: Get a list of all VirtualMachineTemplateVersion objects.
      operationId: listVirtualMachineTemplateVersionForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Template Versions For All Namespaces
      tags:
      - Virtual Machine Templates
  /apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions:
    get:
      description: Get a list of NetworkAttachmentDefinition objects in a namespace.
      operationId: listNamespacedNetworkAttachmentDefinition
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Network Attachment Definitions
      tags:
      - Networks
    post:
      description: Create a NetworkAttachmentDefinition object.
      operationId: createNamespacedNetworkAttachmentDefinition
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Network Attachment Definition
      tags:
      - Networks
  /apis/k8s.cni.cncf.io/v1/namespaces/{namespace}/network-attachment-definitions/{name}:
    delete:
      description: Delete a NetworkAttachmentDefinition object.
      operationId: deleteNamespacedNetworkAttachmentDefinition
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Network Attachment Definition
      tags:
      - Networks
    get:
      description: Get a NetworkAttachmentDefinition object.
      operationId: readNamespacedNetworkAttachmentDefinition
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Network Attachment Definition
      tags:
      - Networks
    patch:
      description: Patch a NetworkAttachmentDefinition object.
      operationId: patchNamespacedNetworkAttachmentDefinition
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Network Attachment Definition
      tags:
      - Networks
    put:
      description: Update a NetworkAttachmentDefinition object.
      operationId: replaceNamespacedNetworkAttachmentDefinition
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Network Attachment Definition
      tags:
      - Networks
  /apis/k8s.cni.cncf.io/v1/network-attachment-definitions:
    get:
      description: Get a list of all NetworkAttachmentDefinition objects.
      operationId: listNetworkAttachmentDefinitionForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Network Attachment Definitions For All Namespaces
      tags:
      - Networks
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations:
    get:
      description: Get a list of VirtualMachineInstanceMigration objects in a namespace.
      operationId: listNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Instance Migrations
      tags:
      - Migrations
    post:
      description: Create a VirtualMachineInstanceMigration object.
      operationId: createNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine Instance Migration
      tags:
      - Migrations
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations/{name}:
    delete:
      description: Delete a VirtualMachineInstanceMigration object.
      operationId: deleteNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine Instance Migration
      tags:
      - Migrations
    get:
      description: Get a VirtualMachineInstanceMigration object.
      operationId: readNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Instance Migration
      tags:
      - Migrations
    patch:
      description: Patch a VirtualMachineInstanceMigration object.
      operationId: patchNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine Instance Migration
      tags:
      - Migrations
    put:
      description: Update a VirtualMachineInstanceMigration object.
      operationId: replaceNamespacedVirtualMachineInstanceMigration
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine Instance Migration
      tags:
      - Migrations
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances:
    get:
      description: Get a list of VirtualMachineInstance objects in a namespace.
      operationId: listNamespacedVirtualMachineInstance
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machine Instances
      tags:
      - Virtual Machines
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}:
    get:
      description: Get a VirtualMachineInstance object.
      operationId: readNamespacedVirtualMachineInstance
      parameters:
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine Instance
      tags:
      - Virtual Machines
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines:
    get:
      description: Get a list of VirtualMachine objects in a namespace.
      operationId: listNamespacedVirtualMachine
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Virtual Machines
      tags:
      - Virtual Machines
    post:
      description: Create a VirtualMachine object.
      operationId: createNamespacedVirtualMachine
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Virtual Machine
      tags:
      - Virtual Machines
  /apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}:
    delete:
      description: Delete a VirtualMachine object.
      operationId: deleteNamespacedVirtualMachine
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Virtual Machine
      tags:
      - Virtual Machines
    get:
      description: Get a VirtualMachine object.
      operationId: readNamespacedVirtualMachine
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Virtual Machine
      tags:
      - Virtual Machines
    patch:
      description: Patch a VirtualMachine object.
      operationId: patchNamespacedVirtualMachine
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Virtual Machine
      tags:
      - Virtual Machines
    put:
      description: Update a VirtualMachine object.
      operationId: replaceNamespacedVirtualMachine
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          application/yaml:
            schema:
              $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Virtual Machine
      tags:
      - Virtual Machines
  /apis/kubevirt.io/v1/virtualmachineinstancemigrations:
    get:
      description: Get a list of all VirtualMachineInstanceMigration objects.
      operationId: listVirtualMachineInstanceMigrationForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Instance Migrations For All Namespaces
      tags:
      - Migrations
  /apis/kubevirt.io/v1/virtualmachineinstances:
    get:
      description: Get a list of all VirtualMachineInstance objects.
      operationId: listVirtualMachineInstanceForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machine Instances For All Namespaces
      tags:
      - Virtual Machines
  /apis/kubevirt.io/v1/virtualmachines:
    get:
      description: Get a list of all VirtualMachine objects.
      operationId: listVirtualMachineForAllNamespaces
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Virtual Machines For All Namespaces
      tags:
      - Virtual Machines
  /apis/network.harvesterhci.io/v1beta1/clusternetworks:
    get:
      description: Get a list of ClusterNetwork objects in a namespace.
      operationId: listNamespacedClusterNetwork
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Cluster Networks
      tags:
      - Networks
    post:
      description: Create a ClusterNetwork object.
      operationId: createNamespacedClusterNetwork
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Cluster Network
      tags:
      - Networks
  /apis/network.harvesterhci.io/v1beta1/clusternetworks/{name}:
    delete:
      description: Delete a ClusterNetwork object.
      operationId: deleteNamespacedClusterNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Cluster Network
      tags:
      - Networks
    get:
      description: Get a ClusterNetwork object.
      operationId: readNamespacedClusterNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Cluster Network
      tags:
      - Networks
    patch:
      description: Patch a ClusterNetwork object.
      operationId: patchNamespacedClusterNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Cluster Network
      tags:
      - Networks
    put:
      description: Update a ClusterNetwork object.
      operationId: replaceNamespacedClusterNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Cluster Network
      tags:
      - Networks
  /apis/network.harvesterhci.io/v1beta1/nodenetworks:
    get:
      description: Get a list of NodeNetwork objects in a namespace.
      operationId: listNamespacedNodeNetwork
      parameters:
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        explode: true
        in: query
        name: continue
        required: false
        schema:
          type: string
        style: form
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        explode: true
        in: query
        name: fieldSelector
        required: false
        schema:
          type: string
        style: form
      - description: "If true, partially initialized resources are included in the\
          \ response."
        explode: true
        in: query
        name: includeUninitialized
        required: false
        schema:
          type: boolean
        style: form
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything
        explode: true
        in: query
        name: labelSelector
        required: false
        schema:
          type: string
        style: form
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history."
        explode: true
        in: query
        name: resourceVersion
        required: false
        schema:
          type: string
        style: form
      - description: TimeoutSeconds for the list/watch call.
        explode: true
        in: query
        name: timeoutSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        explode: true
        in: query
        name: watch
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: List Namespaced Node Networks
      tags:
      - Networks
    post:
      description: Create a NodeNetwork object.
      operationId: createNamespacedNodeNetwork
      parameters:
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: Accepted
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Create a Namespaced Node Network
      tags:
      - Networks
  /apis/network.harvesterhci.io/v1beta1/nodenetworks/{name}:
    delete:
      description: Delete a NodeNetwork object.
      operationId: deleteNamespacedNodeNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        explode: true
        in: query
        name: gracePeriodSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        explode: true
        in: query
        name: orphanDependents
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        explode: true
        in: query
        name: propagationPolicy
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
          application/yaml:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Delete a Namespaced Node Network
      tags:
      - Networks
    get:
      description: Get a NodeNetwork object.
      operationId: readNamespacedNodeNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: Should the export be exact. Exact export maintains cluster-specific
          fields like 'Namespace'.
        explode: true
        in: query
        name: exact
        required: false
        schema:
          type: boolean
        style: form
      - description: Should this value be exported. Export strips fields that a user
          can not specify.
        explode: true
        in: query
        name: export
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
            application/json;stream=watch:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Read a Namespaced Node Network
      tags:
      - Networks
    patch:
      description: Patch a NodeNetwork object.
      operationId: patchNamespacedNodeNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/k8s.io.v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
      summary: Patch a Namespaced Node Network
      tags:
      - Networks
    put:
      description: Update a NodeNetwork object.
      operationId: replaceNamespacedNodeNetwork
      parameters:
      - description: Name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      - description: "Object name and auth scope, such as for teams and projects"
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          pattern: "[a-z0-9][a-z0-9\\-]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          application/yaml:
            schema:
              $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            application/yaml:
              schema:
                $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
          description: Create
        "401":
          content:
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
          description: Unauthorized
      summary: Replace a Namespaced Node Network
      tags:
      - Networks
components:
  schemas:
    harvesterhci.io.v1beta1.BackupTarget:
      description: BackupTarget is where VM Backup stores
      example:
        bucketRegion: bucketRegion
        bucketName: bucketName
        endpoint: endpoint
      properties:
        bucketName:
          type: string
        bucketRegion:
          type: string
        endpoint:
          type: string
      type: object
    harvesterhci.io.v1beta1.Condition:
      properties:
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        lastUpdateTime:
          description: The last time this condition was updated.
          type: string
        message:
          description: Human-readable message indicating details about last transition
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          default: ""
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          default: ""
          description: Type of the condition.
          type: string
      required:
      - status
      - type
      type: object
    harvesterhci.io.v1beta1.Error:
      description: Error is the last error encountered during the snapshot/restore
      example:
        time: ""
        message: message
      properties:
        message:
          type: string
        time:
          default: ""
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          type: string
      type: object
    harvesterhci.io.v1beta1.KeyPair:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPairStatus'
          default: {}
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.KeyPairList:
      description: KeyPairList is a list of KeyPair resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.KeyPair'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.KeyPairSpec:
      properties:
        publicKey:
          default: ""
          type: string
      required:
      - publicKey
      type: object
    harvesterhci.io.v1beta1.KeyPairStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        fingerPrint:
          type: string
      type: object
    harvesterhci.io.v1beta1.NodeUpgradeStatus:
      properties:
        message:
          type: string
        reason:
          type: string
        state:
          type: string
      type: object
    harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec:
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
          default: {}
      type: object
    harvesterhci.io.v1beta1.SecretBackup:
      description: SecretBackup contains the secret data need to restore a secret
        referenced by the VM
      properties:
        data:
          additionalProperties:
            format: byte
            type: string
          type: object
        name:
          type: string
      type: object
    harvesterhci.io.v1beta1.SupportBundle:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundleStatus'
          default: {}
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.SupportBundleList:
      description: SupportBundleList is a list of SupportBundle resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.SupportBundle'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.SupportBundleSpec:
      properties:
        description:
          default: ""
          type: string
        issueURL:
          default: ""
          type: string
      required:
      - description
      type: object
    harvesterhci.io.v1beta1.SupportBundleStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        filename:
          type: string
        filesize:
          format: int64
          type: integer
        progress:
          format: int32
          type: integer
        state:
          type: string
      type: object
    harvesterhci.io.v1beta1.Upgrade:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.UpgradeStatus'
          default: {}
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.UpgradeList:
      description: UpgradeList is a list of Upgrade resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Upgrade'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.UpgradeSpec:
      properties:
        image:
          default: ""
          type: string
        logEnabled:
          default: false
          type: boolean
        version:
          default: ""
          type: string
      type: object
    harvesterhci.io.v1beta1.UpgradeStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        imageID:
          type: string
        nodeStatuses:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.NodeUpgradeStatus'
            default: {}
          type: object
        previousVersion:
          type: string
        repoInfo:
          type: string
        singleNode:
          type: string
        upgradeLog:
          type: string
      type: object
    harvesterhci.io.v1beta1.VirtualMachineBackup:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status:
          sourceUID: sourceUID
          backupTarget:
            bucketRegion: bucketRegion
            bucketName: bucketName
            endpoint: endpoint
          creationTime: ""
          csiDriverVolumeSnapshotClassNames:
            key: ""
          secretBackups:
          - ""
          - ""
          progress: 0
          readyToUse: true
          source: ""
          conditions:
          - ""
          - ""
          error:
            time: ""
            message: message
          volumeBackups:
          - ""
          - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupSpec'
          default: {}
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackupStatus'
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.VirtualMachineBackupList:
      description: VirtualMachineBackupList is a list of VirtualMachineBackup resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineBackup'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.VirtualMachineBackupSpec:
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
          default: {}
        type:
          type: string
      required:
      - source
      type: object
    harvesterhci.io.v1beta1.VirtualMachineBackupStatus:
      description: VirtualMachineBackupStatus is the status for a VirtualMachineBackup
        resource
      example:
        sourceUID: sourceUID
        backupTarget:
          bucketRegion: bucketRegion
          bucketName: bucketName
          endpoint: endpoint
        creationTime: ""
        csiDriverVolumeSnapshotClassNames:
          key: ""
        secretBackups:
        - ""
        - ""
        progress: 0
        readyToUse: true
        source: ""
        conditions:
        - ""
        - ""
        error:
          time: ""
          message: message
        volumeBackups:
        - ""
        - ""
      properties:
        backupTarget:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.BackupTarget'
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        creationTime:
          default: ""
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          type: string
        csiDriverVolumeSnapshotClassNames:
          additionalProperties:
            default: ""
            type: string
          type: object
        error:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.Error'
        progress:
          format: int32
          type: integer
        readyToUse:
          type: boolean
        secretBackups:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.SecretBackup'
            default: {}
          type: array
        source:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec'
          description: SourceSpec contains the vm spec source of the backup target
        sourceUID:
          type: string
        volumeBackups:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VolumeBackup'
            default: {}
          type: array
      type: object
    harvesterhci.io.v1beta1.VirtualMachineImage:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImageStatus'
          default: {}
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.VirtualMachineImageList:
      description: VirtualMachineImageList is a list of VirtualMachineImage resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineImage'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.VirtualMachineImageSpec:
      properties:
        checksum:
          default: ""
          type: string
        description:
          type: string
        displayName:
          default: ""
          type: string
        pvcName:
          default: ""
          type: string
        pvcNamespace:
          default: ""
          type: string
        retry:
          default: 0
          format: int32
          type: integer
        sourceType:
          default: ""
          description: |2-


            Possible enum values:
             - `"download"`
             - `"export-from-volume"`
             - `"upload"`
          enum:
          - download
          - export-from-volume
          - upload
          type: string
        storageClassParameters:
          additionalProperties:
            default: ""
            type: string
          type: object
        url:
          default: ""
          type: string
      required:
      - displayName
      - sourceType
      type: object
    harvesterhci.io.v1beta1.VirtualMachineImageStatus:
      properties:
        appliedUrl:
          type: string
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        failed:
          default: 0
          format: int32
          type: integer
        lastFailedTime:
          type: string
        progress:
          format: int32
          type: integer
        size:
          format: int64
          type: integer
        storageClassName:
          type: string
      type: object
    harvesterhci.io.v1beta1.VirtualMachineRestore:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status:
          restoreTime: ""
          deletedVolumes:
          - ""
          - ""
          progress: 0
          restores:
          - ""
          - ""
          complete: true
          conditions:
          - ""
          - ""
          targetUID: targetUID
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreSpec'
          default: {}
        status:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestoreStatus'
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.VirtualMachineRestoreList:
      description: VirtualMachineRestoreList is a list of VirtualMachineRestore resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineRestore'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.VirtualMachineRestoreSpec:
      description: VirtualMachineRestoreSpec is the spec for a VirtualMachineRestore
        resource
      properties:
        deletionPolicy:
          type: string
        keepMacAddress:
          description: "KeepMacAddress only works when NewVM is true. For replacing\
            \ original VM, the macaddress will be the same."
          type: boolean
        newVM:
          type: boolean
        target:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
          default: {}
          description: initially only VirtualMachine type supported
        virtualMachineBackupName:
          default: ""
          type: string
        virtualMachineBackupNamespace:
          default: ""
          type: string
      required:
      - target
      - virtualMachineBackupName
      - virtualMachineBackupNamespace
      type: object
    harvesterhci.io.v1beta1.VirtualMachineRestoreStatus:
      description: VirtualMachineRestoreStatus is the spec for a VirtualMachineRestore
        resource
      example:
        restoreTime: ""
        deletedVolumes:
        - ""
        - ""
        progress: 0
        restores:
        - ""
        - ""
        complete: true
        conditions:
        - ""
        - ""
        targetUID: targetUID
      properties:
        complete:
          type: boolean
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        deletedVolumes:
          items:
            default: ""
            type: string
          type: array
        progress:
          format: int32
          type: integer
        restoreTime:
          default: ""
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          type: string
        restores:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VolumeRestore'
            default: {}
          type: array
        targetUID:
          type: string
      type: object
    harvesterhci.io.v1beta1.VirtualMachineSourceSpec:
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec'
          default: {}
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplate:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateStatus'
          default: {}
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateList:
      description: VirtualMachineTemplateList is a list of VirtualMachineTemplate
        resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplate'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateSpec:
      properties:
        defaultVersionId:
          default: ""
          type: string
        description:
          type: string
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateStatus:
      properties:
        defaultVersion:
          format: int32
          type: integer
        latestVersion:
          format: int32
          type: integer
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersion:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus'
          default: {}
      required:
      - spec
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionList:
      description: VirtualMachineTemplateVersionList is a list of VirtualMachineTemplateVersion
        resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineTemplateVersion'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionSpec:
      properties:
        description:
          type: string
        imageId:
          type: string
        keyPairIds:
          items:
            default: ""
            type: string
          type: array
        templateId:
          default: ""
          type: string
        vm:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.VirtualMachineSourceSpec'
          default: {}
      required:
      - templateId
      type: object
    harvesterhci.io.v1beta1.VirtualMachineTemplateVersionStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        version:
          format: int32
          type: integer
      type: object
    harvesterhci.io.v1beta1.VolumeBackup:
      description: VolumeBackup contains the volume data need to restore a PVC
      properties:
        creationTime:
          default: ""
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          type: string
        csiDriverName:
          default: ""
          type: string
        error:
          $ref: '#/components/schemas/harvesterhci.io.v1beta1.Error'
        longhornBackupName:
          type: string
        name:
          type: string
        persistentVolumeClaim:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec'
          default: {}
        progress:
          format: int32
          type: integer
        readyToUse:
          type: boolean
        volumeName:
          default: ""
          type: string
        volumeSize:
          format: int64
          type: integer
      required:
      - csiDriverName
      - persistentVolumeClaim
      - volumeName
      type: object
    harvesterhci.io.v1beta1.VolumeRestore:
      description: VolumeRestore contains the volume data need to restore a PVC
      properties:
        longhornEngineName:
          type: string
        persistentVolumeClaimSpec:
          allOf:
          - $ref: '#/components/schemas/harvesterhci.io.v1beta1.PersistentVolumeClaimSourceSpec'
          default: {}
        progress:
          format: int32
          type: integer
        volumeBackupName:
          type: string
        volumeName:
          type: string
        volumeSize:
          format: int64
          type: integer
      type: object
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinition:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec'
          default: {}
      required:
      - spec
      type: object
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionList:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.cni.cncf.io.v1.NetworkAttachmentDefinition'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    k8s.cni.cncf.io.v1.NetworkAttachmentDefinitionSpec:
      properties:
        config:
          default: ""
          type: string
      required:
      - config
      type: object
    k8s.io.apimachinery.pkg.api.resource.Quantity:
      description: "Quantity is a fixed-point representation of a number. It provides\
        \ convenient marshaling/unmarshaling in JSON and YAML, in addition to String()\
        \ and AsInt64() accessors.\n\nThe serialization format is:\n\n``` <quantity>\
        \        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty,\
        \ from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ...\
        \ | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::=\
        \ <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::=\
        \ \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix> \
        \         ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>    \
        \    ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units;\
        \ See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>     \
        \  ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000\
        \ = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\"\
        \ <signedNumber> | \"E\" <signedNumber> ```\n\nNo matter which of the three\
        \ exponent forms is used, no quantity may represent a number greater than\
        \ 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers\
        \ larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded\
        \ up to 1m.) This may be extended in the future if we require larger or smaller\
        \ quantities.\n\nWhen a Quantity is parsed from a string, it will remember\
        \ the type of suffix it had, and will use the same type again when it is serialized.\n\
        \nBefore serializing, Quantity will be put in \"canonical form\". This means\
        \ that Exponent/suffix will be adjusted up or down (with a corresponding increase\
        \ or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional\
        \ digits will be emitted - The exponent (or suffix) is as large as possible.\n\
        \nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n\
        - 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\
        \n\nNote that the quantity will NEVER be internally represented by a floating\
        \ point number. That is the whole point of this exercise.\n\nNon-canonical\
        \ values will still parse as long as they are well formed, but will be re-emitted\
        \ in their canonical form. (So always use canonical form, or don't diff.)\n\
        \nThis format is intended to make it difficult to use these numbers without\
        \ writing some sort of special handling code in the hopes that that will cause\
        \ implementors to also use a fixed point implementation."
      type: string
    k8s.io.apimachinery.pkg.util.intstr.IntOrString:
      description: "IntOrString is a type that can hold an int32 or a string.  When\
        \ used in JSON or YAML marshalling and unmarshalling, it produces or consumes\
        \ the inner type.  This allows you to have, for example, a JSON field that\
        \ can accept a name or number."
      format: int-or-string
      type: string
    k8s.io.v1.Affinity:
      description: Affinity is a group of affinity scheduling rules.
      properties:
        nodeAffinity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.NodeAffinity'
          description: Describes node affinity scheduling rules for the pod.
        podAffinity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PodAffinity'
          description: "Describes pod affinity scheduling rules (e.g. co-locate this\
            \ pod in the same node, zone, etc. as some other pod(s))."
        podAntiAffinity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PodAntiAffinity'
          description: "Describes pod anti-affinity scheduling rules (e.g. avoid putting\
            \ this pod in the same node, zone, etc. as some other pod(s))."
      type: object
    k8s.io.v1.DeleteOptions:
      description: DeleteOptions may be provided when deleting an API object.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        dryRun:
          description: "When present, indicates that modifications should not be persisted.\
            \ An invalid or unrecognized dryRun directive will result in an error\
            \ response and no further processing of the request. Valid values are:\
            \ - All: all dry run stages will be processed"
          items:
            default: ""
            type: string
          type: array
        gracePeriodSeconds:
          description: "The duration in seconds before the object should be deleted.\
            \ Value must be non-negative integer. The value zero indicates delete\
            \ immediately. If this value is nil, the default grace period for the\
            \ specified type will be used. Defaults to a per object value if not specified.\
            \ zero means delete immediately."
          format: int64
          type: integer
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        orphanDependents:
          description: "Deprecated: please use the PropagationPolicy, this field will\
            \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
            \ the \"orphan\" finalizer will be added to/removed from the object's\
            \ finalizers list. Either this field or PropagationPolicy may be set,\
            \ but not both."
          type: boolean
        preconditions:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Preconditions'
          description: "Must be fulfilled before a deletion is carried out. If not\
            \ possible, a 409 Conflict status will be returned."
        propagationPolicy:
          description: "Whether and how garbage collection will be performed. Either\
            \ this field or OrphanDependents may be set, but not both. The default\
            \ policy is decided by the existing finalizer set in the metadata.finalizers\
            \ and the resource-specific default policy. Acceptable values are: 'Orphan'\
            \ - orphan the dependents; 'Background' - allow the garbage collector\
            \ to delete the dependents in the background; 'Foreground' - a cascading\
            \ policy that deletes all dependents in the foreground."
          type: string
      type: object
    k8s.io.v1.DownwardAPIVolumeFile:
      description: DownwardAPIVolumeFile represents information to create the file
        containing the pod field
      properties:
        fieldRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectFieldSelector'
          description: "Required: Selects a field of the pod: only annotations, labels,\
            \ name and namespace are supported."
        mode:
          description: "Optional: mode bits used to set permissions on this file,\
            \ must be an octal value between 0000 and 0777 or a decimal value between\
            \ 0 and 511. YAML accepts both octal and decimal values, JSON requires\
            \ decimal values for mode bits. If not specified, the volume defaultMode\
            \ will be used. This might be in conflict with other options that affect\
            \ the file mode, like fsGroup, and the result can be other mode bits set."
          format: int32
          type: integer
        path:
          default: ""
          description: "Required: Path is  the relative path name of the file to be\
            \ created. Must not be absolute or contain the '..' path. Must be utf-8\
            \ encoded. The first item of the relative path must not start with '..'"
          type: string
        resourceFieldRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ResourceFieldSelector'
          description: "Selects a resource of the container: only resources limits\
            \ and requests (limits.cpu, limits.memory, requests.cpu and requests.memory)\
            \ are currently supported."
      required:
      - path
      type: object
    k8s.io.v1.ExecAction:
      description: ExecAction describes a "run in container" action.
      properties:
        command:
          description: "Command is the command line to execute inside the container,\
            \ the working directory for the command  is root ('/') in the container's\
            \ filesystem. The command is simply exec'd, it is not run inside a shell,\
            \ so traditional shell instructions ('|', etc) won't work. To use a shell,\
            \ you need to explicitly call out to that shell. Exit status of 0 is treated\
            \ as live/healthy and non-zero is unhealthy."
          items:
            default: ""
            type: string
          type: array
      type: object
    k8s.io.v1.FieldsV1:
      description: |-
        FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

        Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.

        The exact format is defined in sigs.k8s.io/structured-merge-diff
      type: object
    k8s.io.v1.HTTPGetAction:
      description: HTTPGetAction describes an action based on HTTP Get requests.
      properties:
        host:
          description: "Host name to connect to, defaults to the pod IP. You probably\
            \ want to set \"Host\" in httpHeaders instead."
          type: string
        httpHeaders:
          description: Custom headers to set in the request. HTTP allows repeated
            headers.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.HTTPHeader'
            default: {}
          type: array
        path:
          description: Path to access on the HTTP server.
          type: string
        port:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
          default: {}
          description: Name or number of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
        scheme:
          description: |-
            Scheme to use for connecting to the host. Defaults to HTTP.

            Possible enum values:
             - `"HTTP"` means that the scheme used will be http://
             - `"HTTPS"` means that the scheme used will be https://
          enum:
          - HTTP
          - HTTPS
          type: string
      required:
      - port
      type: object
    k8s.io.v1.HTTPHeader:
      description: HTTPHeader describes a custom header to be used in HTTP probes
      properties:
        name:
          default: ""
          description: "The header field name. This will be canonicalized upon output,\
            \ so case-variant names will be understood as the same header."
          type: string
        value:
          default: ""
          description: The header field value
          type: string
      required:
      - name
      - value
      type: object
    k8s.io.v1.LabelSelector:
      description: A label selector is a label query over a set of resources. The
        result of matchLabels and matchExpressions are ANDed. An empty label selector
        matches all objects. A null label selector matches no objects.
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.LabelSelectorRequirement'
            default: {}
          type: array
        matchLabels:
          additionalProperties:
            default: ""
            type: string
          description: "matchLabels is a map of {key,value} pairs. A single {key,value}\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          type: object
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.LabelSelectorRequirement:
      description: "A label selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      properties:
        key:
          default: ""
          description: key is the label key that the selector applies to.
          type: string
          x-kubernetes-patch-merge-key: key
          x-kubernetes-patch-strategy: merge
        operator:
          default: ""
          description: "operator represents a key's relationship to a set of values.\
            \ Valid operators are In, NotIn, Exists and DoesNotExist."
          type: string
        values:
          description: "values is an array of string values. If the operator is In\
            \ or NotIn, the values array must be non-empty. If the operator is Exists\
            \ or DoesNotExist, the values array must be empty. This array is replaced\
            \ during a strategic merge patch."
          items:
            default: ""
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    k8s.io.v1.ListMeta:
      description: "ListMeta describes metadata that synthetic resources must have,\
        \ including lists and various status objects. A resource may have only one\
        \ of {ObjectMeta, ListMeta}."
      properties:
        continue:
          description: "continue may be set if the user set a limit on the number\
            \ of items returned, and indicates that the server has more data available.\
            \ The value is opaque and may be used to issue another request to the\
            \ endpoint that served this list to retrieve the next set of available\
            \ objects. Continuing a consistent list may not be possible if the server\
            \ configuration has changed or more than a few minutes have passed. The\
            \ resourceVersion field returned when using this continue value will be\
            \ identical to the value in the first response, unless you have received\
            \ this token from an error message."
          type: string
        remainingItemCount:
          description: "remainingItemCount is the number of subsequent items in the\
            \ list which are not included in this list response. If the list request\
            \ contained label or field selectors, then the number of remaining items\
            \ is unknown and the field will be left unset and omitted during serialization.\
            \ If the list is complete (either because it is not chunking or because\
            \ this is the last chunk), then there are no more remaining items and\
            \ this field will be left unset and omitted during serialization. Servers\
            \ older than v1.15 do not set this field. The intended use of the remainingItemCount\
            \ is *estimating* the size of a collection. Clients should not rely on\
            \ the remainingItemCount to be set or to be exact."
          format: int64
          type: integer
        resourceVersion:
          description: "String that identifies the server's internal version of this\
            \ object that can be used by clients to determine when objects have changed.\
            \ Value must be treated as opaque by clients and passed unmodified back\
            \ to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
          type: string
        selfLink:
          description: "Deprecated: selfLink is a legacy read-only field that is no\
            \ longer populated by the system."
          type: string
      type: object
    k8s.io.v1.LocalObjectReference:
      description: LocalObjectReference contains enough information to let you locate
        the referenced object inside the same namespace.
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.ManagedFieldsEntry:
      description: "ManagedFieldsEntry is a workflow-id, a FieldSet and the group\
        \ version of the resource that the fieldset applies to."
      properties:
        apiVersion:
          description: APIVersion defines the version of this resource that this field
            set applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field set
            because it cannot be automatically converted.
          type: string
        fieldsType:
          description: "FieldsType is the discriminator for the different fields format\
            \ and version. There is currently only one possible value: \"FieldsV1\""
          type: string
        fieldsV1:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.FieldsV1'
          description: FieldsV1 holds the first JSON version format as described in
            the "FieldsV1" type.
        manager:
          description: Manager is an identifier of the workflow managing these fields.
          type: string
        operation:
          description: Operation is the type of operation which lead to this ManagedFieldsEntry
            being created. The only valid values for this field are 'Apply' and 'Update'.
          type: string
        subresource:
          description: "Subresource is the name of the subresource used to update\
            \ that object, or empty string if the object was updated through the main\
            \ resource. The value of this field is used to distinguish between managers,\
            \ even if they share the same name. For example, a status update will\
            \ be distinct from a regular update using the same manager name. Note\
            \ that the APIVersion field is not related to the Subresource field and\
            \ it always corresponds to the version of the main resource."
          type: string
        time:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: "Time is the timestamp of when the ManagedFields entry was\
            \ added. The timestamp will also be updated if a field is added, the manager\
            \ changes any of the owned fields value or removes a field. The timestamp\
            \ does not update when a field is removed from the entry because another\
            \ manager took it over."
      type: object
    k8s.io.v1.NodeAffinity:
      description: Node affinity is a group of node affinity scheduling rules.
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node matches the corresponding matchExpressions; the\
            \ node(s) with the highest sum are the most preferred."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PreferredSchedulingTerm'
            default: {}
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.NodeSelector'
          description: "If the affinity requirements specified by this field are not\
            \ met at scheduling time, the pod will not be scheduled onto the node.\
            \ If the affinity requirements specified by this field cease to be met\
            \ at some point during pod execution (e.g. due to an update), the system\
            \ may or may not try to eventually evict the pod from its node."
      type: object
    k8s.io.v1.NodeSelector:
      description: "A node selector represents the union of the results of one or\
        \ more label queries over a set of nodes; that is, it represents the OR of\
        \ the selectors represented by the node selector terms."
      properties:
        nodeSelectorTerms:
          description: Required. A list of node selector terms. The terms are ORed.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.NodeSelectorTerm'
            default: {}
          type: array
      required:
      - nodeSelectorTerms
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.NodeSelectorRequirement:
      description: "A node selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      properties:
        key:
          default: ""
          description: The label key that the selector applies to.
          type: string
        operator:
          default: ""
          description: |-
            Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.

            Possible enum values:
             - `"DoesNotExist"`
             - `"Exists"`
             - `"Gt"`
             - `"In"`
             - `"Lt"`
             - `"NotIn"`
          enum:
          - DoesNotExist
          - Exists
          - Gt
          - In
          - Lt
          - NotIn
          type: string
        values:
          description: "An array of string values. If the operator is In or NotIn,\
            \ the values array must be non-empty. If the operator is Exists or DoesNotExist,\
            \ the values array must be empty. If the operator is Gt or Lt, the values\
            \ array must have a single element, which will be interpreted as an integer.\
            \ This array is replaced during a strategic merge patch."
          items:
            default: ""
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    k8s.io.v1.NodeSelectorTerm:
      description: A null or empty node selector term matches no objects. The requirements
        of them are ANDed. The TopologySelectorTerm type implements a subset of the
        NodeSelectorTerm.
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.NodeSelectorRequirement'
            default: {}
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.NodeSelectorRequirement'
            default: {}
          type: array
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.ObjectFieldSelector:
      description: ObjectFieldSelector selects an APIVersioned field of an object.
      properties:
        apiVersion:
          description: "Version of the schema the FieldPath is written in terms of,\
            \ defaults to \"v1\"."
          type: string
        fieldPath:
          default: ""
          description: Path of the field to select in the specified API version.
          type: string
      required:
      - fieldPath
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.ObjectMeta:
      description: "ObjectMeta is metadata that all persisted resources must have,\
        \ which includes all objects users must create."
      properties:
        annotations:
          additionalProperties:
            default: ""
            type: string
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations"
          type: object
        creationTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        deletionGracePeriodSeconds:
          description: Number of seconds allowed for this object to gracefully terminate
            before it will be removed from the system. Only set when deletionTimestamp
            is also set. May only be shortened. Read-only.
          format: int64
          type: integer
        deletionTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        finalizers:
          description: "Must be empty before the object is deleted from the registry.\
            \ Each entry is an identifier for the responsible component that will\
            \ remove the entry from the list. If the deletionTimestamp of the object\
            \ is non-nil, entries in this list can only be removed. Finalizers may\
            \ be processed and removed in any order.  Order is NOT enforced because\
            \ it introduces significant risk of stuck finalizers. finalizers is a\
            \ shared field, any actor with permission can reorder it. If the finalizer\
            \ list is processed in order, then this can lead to a situation in which\
            \ the component responsible for the first finalizer in the list is waiting\
            \ for a signal (field value, external system, or other) produced by a\
            \ component responsible for a finalizer later in the list, resulting in\
            \ a deadlock. Without enforced ordering finalizers are free to order amongst\
            \ themselves and are not vulnerable to ordering changes in the list."
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-patch-strategy: merge
        generateName:
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

            If this field is specified and the generated name exists, the server will return a 409.

            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          type: string
        generation:
          description: A sequence number representing a specific generation of the
            desired state. Populated by the system. Read-only.
          format: int64
          type: integer
        labels:
          additionalProperties:
            default: ""
            type: string
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels"
          type: object
        managedFields:
          description: "ManagedFields maps workflow-id and version to the set of fields\
            \ that are managed by that workflow. This is mostly for internal housekeeping,\
            \ and users typically shouldn't need to set or understand this field.\
            \ A workflow can be the user's name, a controller's name, or the name\
            \ of a specific apply path like \"ci-cd\". The set of fields is always\
            \ in the version that the workflow used when modifying the object."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.ManagedFieldsEntry'
            default: {}
          type: array
        name:
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
          type: string
        namespace:
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

            Must be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          type: string
        ownerReferences:
          description: "List of objects depended by this object. If ALL objects in\
            \ the list have been deleted, this object will be garbage collected. If\
            \ this object is managed by a controller, then an entry in this list will\
            \ point to this controller, with the controller field set to true. There\
            \ cannot be more than one managing controller."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.OwnerReference'
            default: {}
          type: array
          x-kubernetes-patch-merge-key: uid
          x-kubernetes-patch-strategy: merge
        resourceVersion:
          description: |-
            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          type: string
        selfLink:
          description: "Deprecated: selfLink is a legacy read-only field that is no\
            \ longer populated by the system."
          type: string
        uid:
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

            Populated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          type: string
      type: object
    k8s.io.v1.OwnerReference:
      description: "OwnerReference contains enough information to let you identify\
        \ an owning object. An owning object must be in the same namespace as the\
        \ dependent, or be cluster-scoped, so there is no namespace field."
      properties:
        apiVersion:
          default: ""
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: "If true, AND if the owner has the \"foregroundDeletion\" finalizer,\
            \ then the owner cannot be deleted from the key-value store until this\
            \ reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\
            \ for how the garbage collector interacts with this field and enforces\
            \ the foreground deletion. Defaults to false. To set this field, a user\
            \ needs \"delete\" permission of the owner, otherwise 422 (Unprocessable\
            \ Entity) will be returned."
          type: boolean
        controller:
          description: "If true, this reference points to the managing controller."
          type: boolean
        kind:
          default: ""
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        name:
          default: ""
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
          type: string
        uid:
          default: ""
          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
          type: string
      required:
      - apiVersion
      - kind
      - name
      - uid
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.Patch:
      description: Patch is provided to give a concrete name and type to the Kubernetes
        PATCH request body.
      type: object
    k8s.io.v1.PersistentVolumeClaim:
      description: PersistentVolumeClaim is a user's request for and claim to a persistent
        volume
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
          description: "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        spec:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
          default: {}
          description: "spec defines the desired characteristics of a volume requested\
            \ by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        status:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimStatus'
          default: {}
          description: "status represents the current information/status of a persistent\
            \ volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
      type: object
    k8s.io.v1.PersistentVolumeClaimCondition:
      description: PersistentVolumeClaimCondition contails details about state of
        pvc
      properties:
        lastProbeTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
          description: lastProbeTime is the time we probed the condition.
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
          description: lastTransitionTime is the time the condition transitioned from
            one status to another.
        message:
          description: message is the human-readable message indicating details about
            last transition.
          type: string
        reason:
          description: "reason is a unique, this should be a short, machine understandable\
            \ string that gives the reason for condition's last transition. If it\
            \ reports \"ResizeStarted\" that means the underlying persistent volume\
            \ is being resized."
          type: string
        status:
          default: ""
          type: string
        type:
          default: ""
          type: string
      required:
      - status
      - type
      type: object
    k8s.io.v1.PersistentVolumeClaimList:
      description: PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          description: "items is a list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaim'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
          description: "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
      required:
      - items
      type: object
    k8s.io.v1.PersistentVolumeClaimSpec:
      description: PersistentVolumeClaimSpec describes the common attributes of storage
        devices and allows a Source for provider-specific attributes
      properties:
        accessModes:
          description: "accessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            default: ""
            type: string
          type: array
        dataSource:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
          description: "dataSource field can be used to specify either: * An existing\
            \ VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An\
            \ existing PVC (PersistentVolumeClaim) If the provisioner or an external\
            \ controller can support the specified data source, it will create a new\
            \ volume based on the contents of the specified data source. When the\
            \ AnyVolumeDataSource feature gate is enabled, dataSource contents will\
            \ be copied to dataSourceRef, and dataSourceRef contents will be copied\
            \ to dataSource when dataSourceRef.namespace is not specified. If the\
            \ namespace is specified, then dataSourceRef will not be copied to dataSource."
        dataSourceRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedObjectReference'
          description: |-
            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef
              allows any non-core object, as well as PersistentVolumeClaim objects.
            * While dataSource ignores disallowed values (dropping them), dataSourceRef
              preserves all values, and generates an error if a disallowed value is
              specified.
            * While dataSource only allows local objects, dataSourceRef allows objects
              in any namespaces.
            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
        resources:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ResourceRequirements'
          default: {}
          description: "resources represents the minimum resources the volume should\
            \ have. If RecoverVolumeExpansionFailure feature is enabled users are\
            \ allowed to specify resource requirements that are lower than previous\
            \ value but must still be higher than capacity recorded in the status\
            \ field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        selector:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
          description: selector is a label query over volumes to consider for binding.
        storageClassName:
          description: "storageClassName is the name of the StorageClass required\
            \ by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          description: volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
        volumeName:
          description: volumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    k8s.io.v1.PersistentVolumeClaimStatus:
      description: PersistentVolumeClaimStatus is the current status of a persistent
        volume claim.
      properties:
        accessModes:
          description: "accessModes contains the actual access modes the volume backing\
            \ the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            default: ""
            type: string
          type: array
        allocatedResources:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: "allocatedResources is the storage resource within AllocatedResources\
            \ tracks the capacity allocated to a PVC. It may be larger than the actual\
            \ capacity when a volume expansion operation is requested. For storage\
            \ quota, the larger value from allocatedResources and PVC.spec.resources\
            \ is used. If allocatedResources is not set, PVC.spec.resources alone\
            \ is used for quota calculation. If a volume expansion capacity request\
            \ is lowered, allocatedResources is only lowered if there are no expansion\
            \ operations in progress and if the actual volume capacity is equal or\
            \ lower than the requested capacity. This is an alpha field and requires\
            \ enabling RecoverVolumeExpansionFailure feature."
          type: object
        capacity:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: capacity represents the actual resources of the underlying
            volume.
          type: object
        conditions:
          description: conditions is the current Condition of persistent volume claim.
            If underlying persistent volume is being resized then the Condition will
            be set to 'ResizeStarted'.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimCondition'
            default: {}
          type: array
          x-kubernetes-patch-merge-key: type
          x-kubernetes-patch-strategy: merge
        phase:
          description: |-
            phase represents the current phase of PersistentVolumeClaim.

            Possible enum values:
             - `"Bound"` used for PersistentVolumeClaims that are bound
             - `"Lost"` used for PersistentVolumeClaims that lost their underlying PersistentVolume. The claim was bound to a PersistentVolume and this volume does not exist any longer and all data on it was lost.
             - `"Pending"` used for PersistentVolumeClaims that are not yet bound
          enum:
          - Bound
          - Lost
          - Pending
          type: string
        resizeStatus:
          description: resizeStatus stores status of resize operation. ResizeStatus
            is not set by default but when expansion is complete resizeStatus is set
            to empty string by resize controller or kubelet. This is an alpha field
            and requires enabling RecoverVolumeExpansionFailure feature.
          type: string
      type: object
    k8s.io.v1.PersistentVolumeClaimVolumeSource:
      description: "PersistentVolumeClaimVolumeSource references the user's PVC in\
        \ the same namespace. This volume finds the bound PV and mounts that volume\
        \ for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper\
        \ around another type of volume that is owned by someone else (the system)."
      properties:
        claimName:
          default: ""
          description: "claimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        readOnly:
          description: readOnly Will force the ReadOnly setting in VolumeMounts. Default
            false.
          type: boolean
      required:
      - claimName
      type: object
    k8s.io.v1.PodAffinity:
      description: Pod affinity is a group of inter pod affinity scheduling rules.
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm'
            default: {}
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the affinity requirements specified by this field are not\
            \ met at scheduling time, the pod will not be scheduled onto the node.\
            \ If the affinity requirements specified by this field cease to be met\
            \ at some point during pod execution (e.g. due to a pod label update),\
            \ the system may or may not try to eventually evict the pod from its node.\
            \ When there are multiple elements, the lists of nodes corresponding to\
            \ each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
            default: {}
          type: array
      type: object
    k8s.io.v1.PodAffinityTerm:
      description: "Defines a set of pods (namely those matching the labelSelector\
        \ relative to the given namespace(s)) that this pod should be co-located (affinity)\
        \ or not co-located (anti-affinity) with, where co-located is defined as running\
        \ on a node whose value of the label with key <topologyKey> matches that of\
        \ any node on which a pod of the set of pods is running"
      properties:
        labelSelector:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
          description: "A label query over a set of resources, in this case pods."
        namespaceSelector:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
          description: "A label query over the set of namespaces that the term applies\
            \ to. The term is applied to the union of the namespaces selected by this\
            \ field and the ones listed in the namespaces field. null selector and\
            \ null or empty namespaces list means \"this pod's namespace\". An empty\
            \ selector ({}) matches all namespaces."
        namespaces:
          description: namespaces specifies a static list of namespace names that
            the term applies to. The term is applied to the union of the namespaces
            listed in this field and the ones selected by namespaceSelector. null
            or empty namespaces list and null namespaceSelector means "this pod's
            namespace".
          items:
            default: ""
            type: string
          type: array
        topologyKey:
          default: ""
          description: "This pod should be co-located (affinity) or not co-located\
            \ (anti-affinity) with the pods matching the labelSelector in the specified\
            \ namespaces, where co-located is defined as running on a node whose value\
            \ of the label with key topologyKey matches that of any node on which\
            \ any of the selected pods is running. Empty topologyKey is not allowed."
          type: string
      required:
      - topologyKey
      type: object
    k8s.io.v1.PodAntiAffinity:
      description: Pod anti affinity is a group of inter pod anti affinity scheduling
        rules.
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the anti-affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling anti-affinity expressions, etc.), compute a\
            \ sum by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.WeightedPodAffinityTerm'
            default: {}
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the anti-affinity requirements specified by this field\
            \ are not met at scheduling time, the pod will not be scheduled onto the\
            \ node. If the anti-affinity requirements specified by this field cease\
            \ to be met at some point during pod execution (e.g. due to a pod label\
            \ update), the system may or may not try to eventually evict the pod from\
            \ its node. When there are multiple elements, the lists of nodes corresponding\
            \ to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
            default: {}
          type: array
      type: object
    k8s.io.v1.PodDNSConfig:
      description: PodDNSConfig defines the DNS parameters of a pod in addition to
        those generated from DNSPolicy.
      properties:
        nameservers:
          description: A list of DNS name server IP addresses. This will be appended
            to the base nameservers generated from DNSPolicy. Duplicated nameservers
            will be removed.
          items:
            default: ""
            type: string
          type: array
        options:
          description: A list of DNS resolver options. This will be merged with the
            base options generated from DNSPolicy. Duplicated entries will be removed.
            Resolution options given in Options will override those that appear in
            the base DNSPolicy.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.PodDNSConfigOption'
            default: {}
          type: array
        searches:
          description: A list of DNS search domains for host-name lookup. This will
            be appended to the base search paths generated from DNSPolicy. Duplicated
            search paths will be removed.
          items:
            default: ""
            type: string
          type: array
      type: object
    k8s.io.v1.PodDNSConfigOption:
      description: PodDNSConfigOption defines DNS resolver options of a pod.
      properties:
        name:
          description: Required.
          type: string
        value:
          type: string
      type: object
    k8s.io.v1.Preconditions:
      description: "Preconditions must be fulfilled before an operation (update, delete,\
        \ etc.) is carried out."
      properties:
        resourceVersion:
          description: Specifies the target ResourceVersion
          type: string
        uid:
          description: Specifies the target UID.
          type: string
      type: object
    k8s.io.v1.PreferredSchedulingTerm:
      description: An empty preferred scheduling term matches all objects with implicit
        weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no
        objects (i.e. is also a no-op).
      properties:
        preference:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.NodeSelectorTerm'
          default: {}
          description: "A node selector term, associated with the corresponding weight."
        weight:
          default: 0
          description: "Weight associated with matching the corresponding nodeSelectorTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - preference
      - weight
      type: object
    k8s.io.v1.ResourceClaim:
      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
      properties:
        name:
          default: ""
          description: Name must match the name of one entry in pod.spec.resourceClaims
            of the Pod where this field is used. It makes that resource available
            inside a container.
          type: string
      required:
      - name
      type: object
    k8s.io.v1.ResourceFieldSelector:
      description: "ResourceFieldSelector represents container resources (cpu, memory)\
        \ and their output format"
      properties:
        containerName:
          description: "Container name: required for volumes, optional for env vars"
          type: string
        divisor:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          default: {}
          description: "Specifies the output format of the exposed resources, defaults\
            \ to \"1\""
        resource:
          default: ""
          description: "Required: resource to select"
          type: string
      required:
      - resource
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.ResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      properties:
        claims:
          description: |-
            Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.

            This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.

            This field is immutable. It can only be set for containers.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.ResourceClaim'
            default: {}
          type: array
          x-kubernetes-list-map-keys:
          - name
          x-kubernetes-list-type: map
        limits:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
        requests:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: "Requests describes the minimum amount of compute resources\
            \ required. If Requests is omitted for a container, it defaults to Limits\
            \ if that is explicitly specified, otherwise to an implementation-defined\
            \ value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
          type: object
      type: object
    k8s.io.v1.TCPSocketAction:
      description: TCPSocketAction describes an action based on opening a socket
      properties:
        host:
          description: "Optional: Host name to connect to, defaults to the pod IP."
          type: string
        port:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.util.intstr.IntOrString'
          default: {}
          description: Number or name of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
      required:
      - port
      type: object
    k8s.io.v1.Time:
      default: ""
      description: Time is a wrapper around time.Time which supports correct marshaling
        to YAML and JSON.  Wrappers are provided for many of the factory methods that
        the time package offers.
      type: string
    k8s.io.v1.Toleration:
      description: "The pod this Toleration is attached to tolerates any taint that\
        \ matches the triple <key,value,effect> using the matching operator <operator>."
      properties:
        effect:
          description: |-
            Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.

            Possible enum values:
             - `"NoExecute"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.
             - `"NoSchedule"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.
             - `"PreferNoSchedule"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.
          enum:
          - NoExecute
          - NoSchedule
          - PreferNoSchedule
          type: string
        key:
          description: "Key is the taint key that the toleration applies to. Empty\
            \ means match all taint keys. If the key is empty, operator must be Exists;\
            \ this combination means to match all values and all keys."
          type: string
        operator:
          description: |-
            Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.

            Possible enum values:
             - `"Equal"`
             - `"Exists"`
          enum:
          - Equal
          - Exists
          type: string
        tolerationSeconds:
          description: "TolerationSeconds represents the period of time the toleration\
            \ (which must be of effect NoExecute, otherwise this field is ignored)\
            \ tolerates the taint. By default, it is not set, which means tolerate\
            \ the taint forever (do not evict). Zero and negative values will be treated\
            \ as 0 (evict immediately) by the system."
          format: int64
          type: integer
        value:
          description: "Value is the taint value the toleration matches to. If the\
            \ operator is Exists, the value should be empty, otherwise just a regular\
            \ string."
          type: string
      type: object
    k8s.io.v1.TopologySpreadConstraint:
      description: TopologySpreadConstraint specifies how to spread matching pods
        among the given topology.
      properties:
        labelSelector:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
          description: LabelSelector is used to find matching pods. Pods that match
            this label selector are counted to determine the number of pods in their
            corresponding topology domain.
        matchLabelKeys:
          description: "MatchLabelKeys is a set of pod label keys to select the pods\
            \ over which spreading will be calculated. The keys are used to lookup\
            \ values from the incoming pod labels, those key-value labels are ANDed\
            \ with labelSelector to select the group of existing pods over which spreading\
            \ will be calculated for the incoming pod. Keys that don't exist in the\
            \ incoming pod labels will be ignored. A null or empty list means only\
            \ match against labelSelector."
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-list-type: atomic
        maxSkew:
          default: 0
          description: "MaxSkew describes the degree to which pods may be unevenly\
            \ distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum\
            \ permitted difference between the number of matching pods in the target\
            \ topology and the global minimum. The global minimum is the minimum number\
            \ of matching pods in an eligible domain or zero if the number of eligible\
            \ domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew\
            \ is set to 1, and pods with the same labelSelector spread as 2/2/1: In\
            \ this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P\
            \  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled\
            \ to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make\
            \ the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew\
            \ is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,\
            \ it is used to give higher precedence to topologies that satisfy it.\
            \ It's a required field. Default value is 1 and 0 is not allowed."
          format: int32
          type: integer
        minDomains:
          description: |-
            MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

            For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.

            This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
          format: int32
          type: integer
        nodeAffinityPolicy:
          description: |-
            NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

            If this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
          type: string
        nodeTaintsPolicy:
          description: |-
            NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.

            If this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
          type: string
        topologyKey:
          default: ""
          description: "TopologyKey is the key of node labels. Nodes that have a label\
            \ with this key and identical values are considered to be in the same\
            \ topology. We consider each <key, value> as a \"bucket\", and try to\
            \ put balanced number of pods into each bucket. We define a domain as\
            \ a particular instance of a topology. Also, we define an eligible domain\
            \ as a domain whose nodes meet the requirements of nodeAffinityPolicy\
            \ and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\"\
            , each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\"\
            , each zone is a domain of that topology. It's a required field."
          type: string
        whenUnsatisfiable:
          default: ""
          description: |-
            WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,
              but giving higher precedence to topologies that would help reduce the
              skew.
            A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assignment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.

            Possible enum values:
             - `"DoNotSchedule"` instructs the scheduler not to schedule the pod when constraints are not satisfied.
             - `"ScheduleAnyway"` instructs the scheduler to schedule the pod even if constraints are not satisfied.
          enum:
          - DoNotSchedule
          - ScheduleAnyway
          type: string
      required:
      - maxSkew
      - topologyKey
      - whenUnsatisfiable
      type: object
    k8s.io.v1.TypedLocalObjectReference:
      description: TypedLocalObjectReference contains enough information to let you
        locate the typed referenced object inside the same namespace.
      properties:
        apiGroup:
          description: "APIGroup is the group for the resource being referenced. If\
            \ APIGroup is not specified, the specified Kind must be in the core API\
            \ group. For any other third-party types, APIGroup is required."
          type: string
        kind:
          default: ""
          description: Kind is the type of resource being referenced
          type: string
        name:
          default: ""
          description: Name is the name of resource being referenced
          type: string
      required:
      - kind
      - name
      type: object
      x-kubernetes-map-type: atomic
    k8s.io.v1.TypedObjectReference:
      properties:
        apiGroup:
          description: "APIGroup is the group for the resource being referenced. If\
            \ APIGroup is not specified, the specified Kind must be in the core API\
            \ group. For any other third-party types, APIGroup is required."
          type: string
        kind:
          default: ""
          description: Kind is the type of resource being referenced
          type: string
        name:
          default: ""
          description: Name is the name of resource being referenced
          type: string
        namespace:
          description: "Namespace is the namespace of resource being referenced Note\
            \ that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant\
            \ object is required in the referent namespace to allow that namespace's\
            \ owner to accept the reference. See the ReferenceGrant documentation\
            \ for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource\
            \ feature gate to be enabled."
          type: string
      required:
      - kind
      - name
      type: object
    k8s.io.v1.WeightedPodAffinityTerm:
      description: The weights of all of the matched WeightedPodAffinityTerm fields
        are added per-node to find the most preferred node(s)
      properties:
        podAffinityTerm:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PodAffinityTerm'
          default: {}
          description: "Required. A pod affinity term, associated with the corresponding\
            \ weight."
        weight:
          default: 0
          description: "weight associated with matching the corresponding podAffinityTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - podAffinityTerm
      - weight
      type: object
    kubevirt.io.api.core.v1.AccessCredential:
      description: AccessCredential represents a credential source that can be used
        to authorize remote access to the vm guest Only one of its members may be
        specified.
      properties:
        sshPublicKey:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential'
          description: SSHPublicKey represents the source and method of applying a
            ssh public key into a guest virtual machine.
        userPassword:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredential'
          description: UserPassword represents the source and method for applying
            a guest user's password
      type: object
    kubevirt.io.api.core.v1.AccessCredentialSecretSource:
      properties:
        secretName:
          default: ""
          description: SecretName represents the name of the secret in the VMI's namespace
          type: string
      required:
      - secretName
      type: object
    kubevirt.io.api.core.v1.AddVolumeOptions:
      description: AddVolumeOptions is provided when dynamically hot plugging a volume
        and disk
      properties:
        disk:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Disk'
          description: Disk represents the hotplug disk that will be plugged into
            the running VMI
        dryRun:
          description: "When present, indicates that modifications should not be persisted.\
            \ An invalid or unrecognized dryRun directive will result in an error\
            \ response and no further processing of the request. Valid values are:\
            \ - All: all dry run stages will be processed"
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-list-type: atomic
        name:
          default: ""
          description: Name represents the name that will be used to map the disk
            to the corresponding volume. This overrides any name set inside the Disk
            struct itself.
          type: string
        volumeSource:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeSource'
          description: VolumeSource represents the source of the volume to map to
            the disk.
      required:
      - disk
      - name
      - volumeSource
      type: object
    kubevirt.io.api.core.v1.BIOS:
      description: "If set (default), BIOS will be used."
      properties:
        useSerial:
          description: "If set, the BIOS output will be transmitted over serial"
          type: boolean
      type: object
    kubevirt.io.api.core.v1.BlockSize:
      description: BlockSize provides the option to change the block size presented
        to the VM for a disk. Only one of its members may be specified.
      properties:
        custom:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.CustomBlockSize'
        matchVolume:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
      type: object
    kubevirt.io.api.core.v1.Bootloader:
      description: Represents the firmware blob used to assist in the domain creation
        process. Used for setting the QEMU BIOS file path for the libvirt domain.
      properties:
        bios:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.BIOS'
          description: "If set (default), BIOS will be used."
        efi:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.EFI'
          description: "If set, EFI will be used instead of BIOS."
      type: object
    kubevirt.io.api.core.v1.CDRomTarget:
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi."
          type: string
        readonly:
          description: ReadOnly. Defaults to true.
          type: boolean
        tray:
          description: Tray indicates if the tray of the device is open or closed.
            Allowed values are "open" and "closed". Defaults to closed.
          type: string
      type: object
    kubevirt.io.api.core.v1.CPU:
      description: CPU allows specifying the CPU topology.
      properties:
        cores:
          description: Cores specifies the number of cores inside the vmi. Must be
            a value greater or equal 1.
          format: int64
          type: integer
        dedicatedCpuPlacement:
          description: DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance
            on a node with enough dedicated pCPUs and pin the vCPUs to it.
          type: boolean
        features:
          description: Features specifies the CPU features list inside the VMI.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPUFeature'
            default: {}
          type: array
        isolateEmulatorThread:
          description: IsolateEmulatorThread requests one more dedicated pCPU to be
            allocated for the VMI to place the emulator thread on it.
          type: boolean
        maxSockets:
          description: MaxSockets specifies the maximum amount of sockets that can
            be hotplugged
          format: int64
          type: integer
        model:
          description: Model specifies the CPU model inside the VMI. List of available
            models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It
            is possible to specify special cases like "host-passthrough" to get the
            same CPU as the node and "host-model" to get CPU closest to the node one.
            Defaults to host-model.
          type: string
        numa:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.NUMA'
          description: NUMA allows specifying settings for the guest NUMA topology
        realtime:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Realtime'
          description: "Realtime instructs the virt-launcher to tune the VMI for lower\
            \ latency, optional for real time workloads"
        sockets:
          description: Sockets specifies the number of sockets inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
        threads:
          description: Threads specifies the number of threads inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.CPUFeature:
      description: CPUFeature allows specifying a CPU feature.
      properties:
        name:
          default: ""
          description: Name of the CPU feature
          type: string
        policy:
          description: "Policy is the CPU feature attribute which can have the following\
            \ attributes: force    - The virtual CPU will claim the feature is supported\
            \ regardless of it being supported by host CPU. require  - Guest creation\
            \ will fail unless the feature is supported by the host CPU or the hypervisor\
            \ is able to emulate it. optional - The feature will be supported by virtual\
            \ CPU if and only if it is supported by host CPU. disable  - The feature\
            \ will not be supported by virtual CPU. forbid   - Guest creation will\
            \ fail if the feature is supported by host CPU. Defaults to require"
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.CPUTopology:
      description: "CPUTopology allows specifying the amount of cores, sockets and\
        \ threads."
      properties:
        cores:
          description: Cores specifies the number of cores inside the vmi. Must be
            a value greater or equal 1.
          format: int64
          type: integer
        sockets:
          description: Sockets specifies the number of sockets inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
        threads:
          description: Threads specifies the number of threads inside the vmi. Must
            be a value greater or equal 1.
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.Chassis:
      description: Chassis specifies the chassis info passed to the domain.
      properties:
        asset:
          type: string
        manufacturer:
          type: string
        serial:
          type: string
        sku:
          type: string
        version:
          type: string
      type: object
    kubevirt.io.api.core.v1.ClientPassthroughDevices:
      description: |-
        Represent a subset of client devices that can be accessed by VMI. At the moment only, USB devices using Usbredir's library and tooling. Another fit would be a smartcard with libcacard.

        The struct is currently empty as there is no immediate request for user-facing APIs. This structure simply turns on USB redirection of UsbClientPassthroughMaxNumberOf devices.
      type: object
    kubevirt.io.api.core.v1.Clock:
      description: Represents the clock and timers of a vmi.
      properties:
        timer:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Timer'
          description: Timer specifies whih timers are attached to the vmi.
        timezone:
          description: Timezone sets the guest clock to the specified timezone. Zone
            name follows the TZ environment variable format (e.g. 'America/New_York').
          type: string
        utc:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ClockOffsetUTC'
          description: "UTC sets the guest clock to UTC on each boot. If an offset\
            \ is specified, guest changes to the clock will be kept during reboots\
            \ and are not reset."
      type: object
    kubevirt.io.api.core.v1.ClockOffsetUTC:
      description: UTC sets the guest clock to UTC on each boot.
      properties:
        offsetSeconds:
          description: "OffsetSeconds specifies an offset in seconds, relative to\
            \ UTC. If set, guest changes to the clock will be kept during reboots\
            \ and not reset."
          format: int32
          type: integer
      type: object
    kubevirt.io.api.core.v1.CloudInitConfigDriveSource:
      description: "Represents a cloud-init config drive user data source. More info:\
        \ https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html"
      properties:
        networkData:
          description: NetworkData contains config drive inline cloud-init networkdata.
          type: string
        networkDataBase64:
          description: NetworkDataBase64 contains config drive cloud-init networkdata
            as a base64 encoded string.
          type: string
        networkDataSecretRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: NetworkDataSecretRef references a k8s secret that contains
            config drive networkdata.
        secretRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: UserDataSecretRef references a k8s secret that contains config
            drive userdata.
        userData:
          description: UserData contains config drive inline cloud-init userdata.
          type: string
        userDataBase64:
          description: UserDataBase64 contains config drive cloud-init userdata as
            a base64 encoded string.
          type: string
      type: object
    kubevirt.io.api.core.v1.CloudInitNoCloudSource:
      description: "Represents a cloud-init nocloud user data source. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html"
      properties:
        networkData:
          description: NetworkData contains NoCloud inline cloud-init networkdata.
          type: string
        networkDataBase64:
          description: NetworkDataBase64 contains NoCloud cloud-init networkdata as
            a base64 encoded string.
          type: string
        networkDataSecretRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: NetworkDataSecretRef references a k8s secret that contains
            NoCloud networkdata.
        secretRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: UserDataSecretRef references a k8s secret that contains NoCloud
            userdata.
        userData:
          description: UserData contains NoCloud inline cloud-init userdata.
          type: string
        userDataBase64:
          description: UserDataBase64 contains NoCloud cloud-init userdata as a base64
            encoded string.
          type: string
      type: object
    kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.ConfigMapVolumeSource:
      description: "ConfigMapVolumeSource adapts a ConfigMap into a volume. More info:\
        \ https://kubernetes.io/docs/concepts/storage/volumes/#configmap"
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap or it's keys must be defined
          type: boolean
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    kubevirt.io.api.core.v1.ContainerDiskInfo:
      description: ContainerDiskInfo shows info about the containerdisk
      properties:
        checksum:
          description: Checksum is the checksum of the rootdisk or kernel artifacts
            inside the containerdisk
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.ContainerDiskSource:
      description: Represents a docker image with an embedded disk.
      properties:
        image:
          default: ""
          description: Image is the name of the image with the embedded disk.
          type: string
        imagePullPolicy:
          description: |-
            Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images

            Possible enum values:
             - `"Always"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.
             - `"IfNotPresent"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.
             - `"Never"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
          enum:
          - Always
          - IfNotPresent
          - Never
          type: string
        imagePullSecret:
          description: ImagePullSecret is the name of the Docker registry secret required
            to pull the image. The secret must already exist.
          type: string
        path:
          description: Path defines the path to disk file in the container
          type: string
      required:
      - image
      type: object
    kubevirt.io.api.core.v1.CustomBlockSize:
      description: CustomBlockSize represents the desired logical and physical block
        size for a VM disk.
      properties:
        logical:
          default: 0
          format: int32
          type: integer
        physical:
          default: 0
          format: int32
          type: integer
      required:
      - logical
      - physical
      type: object
    kubevirt.io.api.core.v1.DHCPOptions:
      description: Extra DHCP options to use in the interface.
      properties:
        bootFileName:
          description: If specified will pass option 67 to interface's DHCP server
          type: string
        ntpServers:
          description: If specified will pass the configured NTP server to the VM
            via DHCP option 042.
          items:
            default: ""
            type: string
          type: array
        privateOptions:
          description: "If specified will pass extra DHCP options for private use,\
            \ range: 224-254"
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DHCPPrivateOptions'
            default: {}
          type: array
        tftpServerName:
          description: If specified will pass option 66 to interface's DHCP server
          type: string
      type: object
    kubevirt.io.api.core.v1.DHCPPrivateOptions:
      description: DHCPExtraOptions defines Extra DHCP options for a VM.
      properties:
        option:
          default: 0
          description: Option is an Integer value from 224-254 Required.
          format: int32
          type: integer
        value:
          default: ""
          description: Value is a String value for the Option provided Required.
          type: string
      required:
      - option
      - value
      type: object
    kubevirt.io.api.core.v1.DataVolumeSource:
      properties:
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        name:
          default: ""
          description: Name of both the DataVolume and the PVC in the same namespace.
            After PVC population the DataVolume is garbage collected by default.
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus:
      type: object
    kubevirt.io.api.core.v1.DataVolumeTemplateSpec:
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec'
          default: {}
          description: DataVolumeSpec contains the DataVolume specification.
        status:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateDummyStatus'
          description: DataVolumeTemplateDummyStatus is here simply for backwards
            compatibility with a previous API.
      required:
      - spec
      type: object
    kubevirt.io.api.core.v1.Devices:
      properties:
        autoattachGraphicsDevice:
          description: Whether to attach the default graphics device or not. VNC will
            not be available if set to false. Defaults to true.
          type: boolean
        autoattachInputDevice:
          description: Whether to attach an Input Device. Defaults to false.
          type: boolean
        autoattachMemBalloon:
          description: Whether to attach the Memory balloon device with default period.
            Period can be adjusted in virt-config. Defaults to true.
          type: boolean
        autoattachPodInterface:
          description: Whether to attach a pod network interface. Defaults to true.
          type: boolean
        autoattachSerialConsole:
          description: Whether to attach the default virtio-serial console or not.
            Serial console access will not be available if set to false. Defaults
            to true.
          type: boolean
        autoattachVSOCK:
          description: Whether to attach the VSOCK CID to the VM or not. VSOCK access
            will be available if set to true. Defaults to false.
          type: boolean
        blockMultiQueue:
          description: Whether or not to enable virtio multi-queue for block devices.
            Defaults to false.
          type: boolean
        clientPassthrough:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ClientPassthroughDevices'
          description: To configure and access client devices such as redirecting
            USB
        disableHotplug:
          description: DisableHotplug disabled the ability to hotplug disks.
          type: boolean
        disks:
          description: "Disks describes disks, cdroms and luns which are connected\
            \ to the vmi."
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Disk'
            default: {}
          type: array
        downwardMetrics:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardMetrics'
          description: DownwardMetrics creates a virtio serials for exposing the downward
            metrics to the vmi.
        filesystems:
          description: Filesystems describes filesystem which is connected to the
            vmi.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Filesystem'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        gpus:
          description: Whether to attach a GPU device to the vmi.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.GPU'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        hostDevices:
          description: Whether to attach a host device to the vmi.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HostDevice'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        inputs:
          description: Inputs describe input devices
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Input'
            default: {}
          type: array
        interfaces:
          description: Interfaces describe network interfaces which are added to the
            vmi.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Interface'
            default: {}
          type: array
        logSerialConsole:
          description: Whether to log the auto-attached default serial console or
            not. Serial console logs will be collect to a file and then streamed from
            a named `guest-console-log`. Not relevant if autoattachSerialConsole is
            disabled. Defaults to cluster wide setting on VirtualMachineOptions.
          type: boolean
        networkInterfaceMultiqueue:
          description: "If specified, virtual network interfaces configured with a\
            \ virtio bus will also enable the vhost multiqueue feature for network\
            \ devices. The number of queues created depends on additional factors\
            \ of the VirtualMachineInstance, like the number of guest CPUs."
          type: boolean
        rng:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Rng'
          description: Whether to have random number generator from host
        sound:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SoundDevice'
          description: Whether to emulate a sound device.
        tpm:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.TPMDevice'
          description: Whether to emulate a TPM device.
        useVirtioTransitional:
          description: Fall back to legacy virtio 0.9 support if virtio bus is selected
            on devices. This is helpful for old machines like CentOS6 or RHEL6 which
            do not understand virtio_non_transitional (virtio 1.0).
          type: boolean
        watchdog:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Watchdog'
          description: Watchdog describes a watchdog device which can be added to
            the vmi.
      type: object
    kubevirt.io.api.core.v1.Disk:
      properties:
        blockSize:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.BlockSize'
          description: "If specified, the virtual disk will be presented with the\
            \ given block sizes."
        bootOrder:
          description: "BootOrder is an integer value > 0, used to determine ordering\
            \ of boot devices. Lower values take precedence. Each disk or interface\
            \ that has a boot order must have a unique value. Disks without a boot\
            \ order are not tried if a disk with a boot order exists."
          format: int32
          type: integer
        cache:
          description: "Cache specifies which kvm disk cache mode should be used.\
            \ Supported values are: CacheNone, CacheWriteThrough."
          type: string
        cdrom:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CDRomTarget'
          description: Attach a volume as a cdrom to the vmi.
        dedicatedIOThread:
          description: dedicatedIOThread indicates this disk should have an exclusive
            IO Thread. Enabling this implies useIOThreads = true. Defaults to false.
          type: boolean
        disk:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DiskTarget'
          description: Attach a volume as a disk to the vmi.
        errorPolicy:
          description: "If specified, it can change the default error policy (stop)\
            \ for the disk"
          type: string
        io:
          description: "IO specifies which QEMU disk IO mode should be used. Supported\
            \ values are: native, default, threads."
          type: string
        lun:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LunTarget'
          description: Attach a volume as a LUN to the vmi.
        name:
          default: ""
          description: Name is the device name
          type: string
        serial:
          description: Serial provides the ability to specify a serial number for
            the disk device.
          type: string
        shareable:
          description: If specified the disk is made sharable and multiple write from
            different VMs are permitted
          type: boolean
        tag:
          description: "If specified, disk address and its tag will be provided to\
            \ the guest via config drive metadata"
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.DiskTarget:
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi, usb."
          type: string
        pciAddress:
          description: "If specified, the virtual disk will be placed on the guests\
            \ pci address with the specified PCI address. For example: 0000:81:01.10"
          type: string
        readonly:
          description: ReadOnly. Defaults to false.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.DomainMemoryDumpInfo:
      description: DomainMemoryDumpInfo represents the memory dump information
      properties:
        claimName:
          description: ClaimName is the name of the pvc the memory was dumped to
          type: string
        endTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: EndTimestamp is the time when the memory dump completed
        startTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: StartTimestamp is the time when the memory dump started
        targetFileName:
          description: TargetFileName is the name of the memory dump output
          type: string
      type: object
    kubevirt.io.api.core.v1.DomainSpec:
      properties:
        chassis:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Chassis'
          description: Chassis specifies the chassis info passed to the domain.
        clock:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Clock'
          description: Clock sets the clock and timers of the vmi.
        cpu:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPU'
          description: CPU allow specified the detailed CPU topology inside the vmi.
        devices:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Devices'
          default: {}
          description: "Devices allows adding disks, network interfaces, and others"
        features:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Features'
          description: "Features like acpi, apic, hyperv, smm."
        firmware:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Firmware'
          description: Firmware.
        ioThreadsPolicy:
          description: "Controls whether or not disks will share IOThreads. Omitting\
            \ IOThreadsPolicy disables use of IOThreads. One of: shared, auto"
          type: string
        launchSecurity:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LaunchSecurity'
          description: Launch Security setting of the vmi.
        machine:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Machine'
          description: Machine type.
        memory:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Memory'
          description: Memory allow specifying the VMI memory features.
        resources:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ResourceRequirements'
          default: {}
          description: Resources describes the Compute Resources required by this
            vmi.
      required:
      - devices
      type: object
    kubevirt.io.api.core.v1.DownwardAPIVolumeSource:
      description: DownwardAPIVolumeSource represents a volume containing downward
        API info.
      properties:
        fields:
          description: Fields is a list of downward API volume file
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.DownwardAPIVolumeFile'
            default: {}
          type: array
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    kubevirt.io.api.core.v1.DownwardMetrics:
      type: object
    kubevirt.io.api.core.v1.DownwardMetricsVolumeSource:
      description: DownwardMetricsVolumeSource adds a very small disk to VMIs which
        contains a limited view of host and guest metrics. The disk content is compatible
        with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
      type: object
    kubevirt.io.api.core.v1.EFI:
      description: "If set, EFI will be used instead of BIOS."
      properties:
        persistent:
          description: "If set to true, Persistent will persist the EFI NVRAM across\
            \ reboots. Defaults to false"
          type: boolean
        secureBoot:
          description: "If set, SecureBoot will be enabled and the OVMF roms will\
            \ be swapped for SecureBoot-enabled ones. Requires SMM to be enabled.\
            \ Defaults to true"
          type: boolean
      type: object
    kubevirt.io.api.core.v1.EmptyDiskSource:
      description: EmptyDisk represents a temporary disk which shares the vmis lifecycle.
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          default: {}
          description: Capacity of the sparse disk.
      required:
      - capacity
      type: object
    kubevirt.io.api.core.v1.EphemeralVolumeSource:
      properties:
        persistentVolumeClaim:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimVolumeSource'
          description: "PersistentVolumeClaimVolumeSource represents a reference to\
            \ a PersistentVolumeClaim in the same namespace. Directly attached to\
            \ the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
      type: object
    kubevirt.io.api.core.v1.FeatureAPIC:
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        endOfInterrupt:
          description: EndOfInterrupt enables the end of interrupt notification in
            the guest. Defaults to false.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.FeatureHyperv:
      description: Hyperv specific features.
      properties:
        evmcs:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: "EVMCS Speeds up L2 vmexits, but disables other virtualization\
            \ features. Requires vapic. Defaults to the machine type setting."
        frequencies:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Frequencies improves the TSC clock source handling for Hyper-V
            on KVM. Defaults to the machine type setting.
        ipi:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: IPI improves performances in overcommited environments. Requires
            vpindex. Defaults to the machine type setting.
        reenlightenment:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Reenlightenment enables the notifications on TSC frequency
            changes. Defaults to the machine type setting.
        relaxed:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Relaxed instructs the guest OS to disable watchdog timeouts.
            Defaults to the machine type setting.
        reset:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Reset enables Hyperv reboot/reset for the vmi. Requires synic.
            Defaults to the machine type setting.
        runtime:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Runtime improves the time accounting to improve scheduling
            in the guest. Defaults to the machine type setting.
        spinlocks:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureSpinlocks'
          description: Spinlocks allows to configure the spinlock retry attempts.
        synic:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: SyNIC enables the Synthetic Interrupt Controller. Defaults
            to the machine type setting.
        synictimer:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SyNICTimer'
          description: "SyNICTimer enables Synthetic Interrupt Controller Timers,\
            \ reducing CPU load. Defaults to the machine type setting."
        tlbflush:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: TLBFlush improves performances in overcommited environments.
            Requires vpindex. Defaults to the machine type setting.
        vapic:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: VAPIC improves the paravirtualized handling of interrupts.
            Defaults to the machine type setting.
        vendorid:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureVendorID'
          description: VendorID allows setting the hypervisor vendor id. Defaults
            to the machine type setting.
        vpindex:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: VPIndex enables the Virtual Processor Index to help windows
            identifying virtual processors. Defaults to the machine type setting.
      type: object
    kubevirt.io.api.core.v1.FeatureKVM:
      properties:
        hidden:
          description: Hide the KVM hypervisor from standard MSR based discovery.
            Defaults to false
          type: boolean
      type: object
    kubevirt.io.api.core.v1.FeatureSpinlocks:
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        spinlocks:
          description: Retries indicates the number of retries. Must be a value greater
            or equal 4096. Defaults to 4096.
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.FeatureState:
      description: Represents if a feature is enabled or disabled.
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.FeatureVendorID:
      properties:
        enabled:
          description: Enabled determines if the feature should be enabled or disabled
            on the guest. Defaults to true.
          type: boolean
        vendorid:
          description: "VendorID sets the hypervisor vendor id, visible to the vmi.\
            \ String up to twelve characters."
          type: string
      type: object
    kubevirt.io.api.core.v1.Features:
      properties:
        acpi:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          default: {}
          description: ACPI enables/disables ACPI inside the guest. Defaults to enabled.
        apic:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureAPIC'
          description: Defaults to the machine type setting.
        hyperv:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureHyperv'
          description: Defaults to the machine type setting.
        kvm:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureKVM'
          description: Configure how KVM presence is exposed to the guest.
        pvspinlock:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: Notify the guest that the host supports paravirtual spinlocks.
            For older kernels this feature should be explicitly disabled.
        smm:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: SMM enables/disables System Management Mode. TSEG not yet implemented.
      type: object
    kubevirt.io.api.core.v1.Filesystem:
      properties:
        name:
          default: ""
          description: Name is the device name
          type: string
        virtiofs:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FilesystemVirtiofs'
          description: Virtiofs is supported
      required:
      - name
      - virtiofs
      type: object
    kubevirt.io.api.core.v1.FilesystemVirtiofs:
      type: object
    kubevirt.io.api.core.v1.Firmware:
      properties:
        bootloader:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Bootloader'
          description: Settings to control the bootloader that is used.
        kernelBoot:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelBoot'
          description: Settings to set the kernel for booting.
        serial:
          description: The system-serial-number in SMBIOS
          type: string
        uuid:
          description: UUID reported by the vmi bios. Defaults to a random generated
            uid.
          type: string
      type: object
    kubevirt.io.api.core.v1.GPU:
      properties:
        deviceName:
          default: ""
          type: string
        name:
          default: ""
          description: Name of the GPU device as exposed by a device plugin
          type: string
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
        virtualGPUOptions:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VGPUOptions'
      required:
      - deviceName
      - name
      type: object
    kubevirt.io.api.core.v1.GuestAgentPing:
      description: GuestAgentPing configures the guest-agent based ping probe
      type: object
    kubevirt.io.api.core.v1.HPETTimer:
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\", \"\
            merge\", \"discard\"."
          type: string
      type: object
    kubevirt.io.api.core.v1.HostDevice:
      properties:
        deviceName:
          default: ""
          description: DeviceName is the resource name of the host device exposed
            by a device plugin
          type: string
        name:
          default: ""
          type: string
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
      required:
      - deviceName
      - name
      type: object
    kubevirt.io.api.core.v1.HostDisk:
      description: Represents a disk created on the cluster level
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          default: {}
          description: Capacity of the sparse disk
        path:
          default: ""
          description: The path to HostDisk image located on the cluster
          type: string
        shared:
          description: Shared indicate whether the path is shared between nodes
          type: boolean
        type:
          default: ""
          description: Contains information if disk.img exists or should be created
            allowed options are 'Disk' and 'DiskOrCreate'
          type: string
      required:
      - path
      - type
      type: object
    kubevirt.io.api.core.v1.HotplugVolumeSource:
      description: HotplugVolumeSource Represents the source of a volume to mount
        which are capable of being hotplugged on a live running VMI. Only one of its
        members may be specified.
      properties:
        dataVolume:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource'
          description: DataVolume represents the dynamic creation a PVC for this volume
            as well as the process of populating that PVC with a disk image.
        persistentVolumeClaim:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource'
          description: "PersistentVolumeClaimVolumeSource represents a reference to\
            \ a PersistentVolumeClaim in the same namespace. Directly attached to\
            \ the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
      type: object
    kubevirt.io.api.core.v1.HotplugVolumeStatus:
      description: HotplugVolumeStatus represents the hotplug status of the volume
      properties:
        attachPodName:
          description: AttachPodName is the name of the pod used to attach the volume
            to the node.
          type: string
        attachPodUID:
          description: AttachPodUID is the UID of the pod used to attach the volume
            to the node.
          type: string
      type: object
    kubevirt.io.api.core.v1.Hugepages:
      description: Hugepages allow to use hugepages for the VirtualMachineInstance
        instead of regular memory.
      properties:
        pageSize:
          description: "PageSize specifies the hugepage size, for x86_64 architecture\
            \ valid values are 1Gi and 2Mi."
          type: string
      type: object
    kubevirt.io.api.core.v1.HypervTimer:
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.I6300ESBWatchdog:
      description: i6300esb watchdog device.
      properties:
        action:
          description: "The action to take. Valid values are poweroff, reset, shutdown.\
            \ Defaults to reset."
          type: string
      type: object
    kubevirt.io.api.core.v1.InitrdInfo:
      description: InitrdInfo show info about the initrd file
      properties:
        checksum:
          description: Checksum is the checksum of the initrd file
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.Input:
      properties:
        bus:
          description: "Bus indicates the bus of input device to emulate. Supported\
            \ values: virtio, usb."
          type: string
        name:
          default: ""
          description: Name is the device name
          type: string
        type:
          default: ""
          description: "Type indicated the type of input device. Supported values:\
            \ tablet."
          type: string
      required:
      - name
      - type
      type: object
    kubevirt.io.api.core.v1.InstancetypeMatcher:
      description: InstancetypeMatcher references a instancetype that is used to fill
        fields in the VMI template.
      properties:
        inferFromVolume:
          description: InferFromVolume lists the name of a volume that should be used
            to infer or discover the instancetype to be used through known annotations
            on the underlying resource. Once applied to the InstancetypeMatcher this
            field is removed.
          type: string
        inferFromVolumeFailurePolicy:
          description: "InferFromVolumeFailurePolicy controls what should happen on\
            \ failure when inferring the instancetype. Allowed values are: \"RejectInferFromVolumeFailure\"\
            \ and \"IgnoreInferFromVolumeFailure\". If not specified, \"RejectInferFromVolumeFailure\"\
            \ is used by default."
          type: string
        kind:
          description: "Kind specifies which instancetype resource is referenced.\
            \ Allowed values are: \"VirtualMachineInstancetype\" and \"VirtualMachineClusterInstancetype\"\
            . If not specified, \"VirtualMachineClusterInstancetype\" is used by default."
          type: string
        name:
          description: Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
          type: string
        revisionName:
          description: RevisionName specifies a ControllerRevision containing a specific
            copy of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
            to be used. This is initially captured the first time the instancetype
            is applied to the VirtualMachineInstance.
          type: string
      type: object
    kubevirt.io.api.core.v1.Interface:
      properties:
        acpiIndex:
          description: "If specified, the ACPI index is used to provide network interface\
            \ device naming, that is stable across changes in PCI addresses assigned\
            \ to the device. This value is required to be unique across all devices\
            \ and be between 1 and (16*1024-1)."
          format: int32
          type: integer
        binding:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PluginBinding'
          description: "Binding specifies the binding plugin that will be used to\
            \ connect the interface to the guest. It provides an alternative to InterfaceBindingMethod.\
            \ version: 1alphav1"
        bootOrder:
          description: "BootOrder is an integer value > 0, used to determine ordering\
            \ of boot devices. Lower values take precedence. Each interface or disk\
            \ that has a boot order must have a unique value. Interfaces without a\
            \ boot order are not tried."
          format: int32
          type: integer
        bridge:
          description: InterfaceBridge connects to a given network via a linux bridge.
          type: object
        dhcpOptions:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DHCPOptions'
          description: If specified the network interface will pass additional DHCP
            options to the VMI
        macAddress:
          description: "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF."
          type: string
        macvtap:
          description: InterfaceMacvtap connects to a given network by extending the
            Kubernetes node's L2 networks via a macvtap interface.
          type: object
        masquerade:
          description: InterfaceMasquerade connects to a given network using netfilter
            rules to nat the traffic.
          type: object
        model:
          description: "Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139,\
            \ virtio. Defaults to virtio."
          type: string
        name:
          default: ""
          description: Logical name of the interface as well as a reference to the
            associated networks. Must match the Name of a Network.
          type: string
        passt:
          description: InterfacePasst connects to a given network.
          type: object
        pciAddress:
          description: "If specified, the virtual network interface will be placed\
            \ on the guests pci address with the specified PCI address. For example:\
            \ 0000:81:01.10"
          type: string
        ports:
          description: List of ports to be forwarded to the virtual machine.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Port'
            default: {}
          type: array
        slirp:
          description: InterfaceSlirp connects to a given network using QEMU user
            networking mode.
          type: object
        sriov:
          description: InterfaceSRIOV connects to a given network by passing-through
            an SR-IOV PCI device via vfio.
          type: object
        state:
          description: "State represents the requested operational state of the interface.\
            \ The (only) value supported is `absent`, expressing a request to remove\
            \ the interface."
          type: string
        tag:
          description: "If specified, the virtual network interface address and its\
            \ tag will be provided to the guest via config drive"
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.InterfaceBridge:
      description: InterfaceBridge connects to a given network via a linux bridge.
      type: object
    kubevirt.io.api.core.v1.InterfaceMacvtap:
      description: InterfaceMacvtap connects to a given network by extending the Kubernetes
        node's L2 networks via a macvtap interface.
      type: object
    kubevirt.io.api.core.v1.InterfaceMasquerade:
      description: InterfaceMasquerade connects to a given network using netfilter
        rules to nat the traffic.
      type: object
    kubevirt.io.api.core.v1.InterfacePasst:
      description: InterfacePasst connects to a given network.
      type: object
    kubevirt.io.api.core.v1.InterfaceSRIOV:
      description: InterfaceSRIOV connects to a given network by passing-through an
        SR-IOV PCI device via vfio.
      type: object
    kubevirt.io.api.core.v1.InterfaceSlirp:
      description: InterfaceSlirp connects to a given network using QEMU user networking
        mode.
      type: object
    kubevirt.io.api.core.v1.KVMTimer:
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.KernelBoot:
      description: "Represents the firmware blob used to assist in the kernel boot\
        \ process. Used for setting the kernel, initrd and command line arguments"
      properties:
        container:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelBootContainer'
          description: Container defines the container that containes kernel artifacts
        kernelArgs:
          description: Arguments to be passed to the kernel at boot time
          type: string
      type: object
    kubevirt.io.api.core.v1.KernelBootContainer:
      description: "If set, the VM will be booted from the defined kernel / initrd."
      properties:
        image:
          default: ""
          description: Image that contains initrd / kernel files.
          type: string
        imagePullPolicy:
          description: |-
            Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images

            Possible enum values:
             - `"Always"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.
             - `"IfNotPresent"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.
             - `"Never"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
          enum:
          - Always
          - IfNotPresent
          - Never
          type: string
        imagePullSecret:
          description: ImagePullSecret is the name of the Docker registry secret required
            to pull the image. The secret must already exist.
          type: string
        initrdPath:
          description: the fully-qualified path to the ramdisk image in the host OS
          type: string
        kernelPath:
          description: The fully-qualified path to the kernel image in the host OS
          type: string
      required:
      - image
      type: object
    kubevirt.io.api.core.v1.KernelBootStatus:
      description: KernelBootStatus contains info about the kernelBootContainer
      properties:
        initrdInfo:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.InitrdInfo'
          description: InitrdInfo show info about the initrd file
        kernelInfo:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelInfo'
          description: KernelInfo show info about the kernel image
      type: object
    kubevirt.io.api.core.v1.KernelInfo:
      description: KernelInfo show info about the kernel image
      properties:
        checksum:
          description: Checksum is the checksum of the kernel image
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.LaunchSecurity:
      properties:
        sev:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEV'
          description: AMD Secure Encrypted Virtualization (SEV).
      type: object
    kubevirt.io.api.core.v1.LiveUpdateAffinity:
      type: object
    kubevirt.io.api.core.v1.LiveUpdateCPU:
      properties:
        maxSockets:
          description: The maximum amount of sockets that can be hot-plugged to the
            Virtual Machine
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.LiveUpdateFeatures:
      properties:
        affinity:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateAffinity'
          description: Affinity allows live updating the virtual machines node affinity
        cpu:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateCPU'
          description: LiveUpdateCPU holds hotplug configuration for the CPU resource.
            Empty struct indicates that default will be used for maxSockets. Default
            is specified on cluster level. Absence of the struct means opt-out from
            CPU hotplug functionality.
        memory:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateMemory'
          description: MemoryLiveUpdateConfiguration defines the live update memory
            features for the VirtualMachine
      type: object
    kubevirt.io.api.core.v1.LiveUpdateMemory:
      properties:
        maxGuest:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: MaxGuest defines the maximum amount memory that can be allocated
            for the VM.
      type: object
    kubevirt.io.api.core.v1.LunTarget:
      properties:
        bus:
          description: "Bus indicates the type of disk device to emulate. supported\
            \ values: virtio, sata, scsi."
          type: string
        readonly:
          description: ReadOnly. Defaults to false.
          type: boolean
        reservation:
          description: Reservation indicates if the disk needs to support the persistent
            reservation for the SCSI disk
          type: boolean
      type: object
    kubevirt.io.api.core.v1.Machine:
      properties:
        type:
          default: ""
          description: QEMU machine type is the actual chipset of the VirtualMachineInstance.
          type: string
      type: object
    kubevirt.io.api.core.v1.Memory:
      description: Memory allows specifying the VirtualMachineInstance memory features.
      properties:
        guest:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: Guest allows to specifying the amount of memory which is visible
            inside the Guest OS. The Guest must lie between Requests and Limits from
            the resources section. Defaults to the requested memory in the resources
            section if not specified.
        hugepages:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Hugepages'
          description: Hugepages allow to use hugepages for the VirtualMachineInstance
            instead of regular memory.
        maxGuest:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: MaxGuest allows to specify the maximum amount of memory which
            is visible inside the Guest OS. The delta between MaxGuest and Guest is
            the amount of memory that can be hot(un)plugged.
      type: object
    kubevirt.io.api.core.v1.MemoryDumpVolumeSource:
      properties:
        claimName:
          default: ""
          description: "claimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        readOnly:
          description: readOnly Will force the ReadOnly setting in VolumeMounts. Default
            false.
          type: boolean
      required:
      - claimName
      type: object
    kubevirt.io.api.core.v1.MemoryStatus:
      properties:
        guestAtBoot:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: GuestAtBoot specifies with how much memory the VirtualMachine
            intiallly booted with.
        guestCurrent:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: GuestCurrent specifies how much memory is currently available
            for the VirtualMachine.
        guestRequested:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: GuestRequested specifies how much memory was requested (hotplug)
            for the VirtualMachine.
      type: object
    kubevirt.io.api.core.v1.MigrationConfiguration:
      description: MigrationConfiguration holds migration options. Can be overridden
        for specific groups of VMs though migration policies. Visit https://kubevirt.io/user-guide/operations/migration_policies/
        for more information.
      properties:
        allowAutoConverge:
          description: AllowAutoConverge allows the platform to compromise performance/availability
            of VMIs to guarantee successful VMI live migrations. Defaults to false
          type: boolean
        allowPostCopy:
          description: "AllowPostCopy enables post-copy live migrations. Such migrations\
            \ allow even the busiest VMIs to successfully live-migrate. However, events\
            \ like a network failure can cause a VMI crash. If set to true, migrations\
            \ will still start in pre-copy, but switch to post-copy when CompletionTimeoutPerGiB\
            \ triggers. Defaults to false"
          type: boolean
        bandwidthPerMigration:
          allOf:
          - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
          description: BandwidthPerMigration limits the amount of network bandwidth
            live migrations are allowed to use. The value is in quantity per second.
            Defaults to 0 (no limit)
        completionTimeoutPerGiB:
          description: "CompletionTimeoutPerGiB is the maximum number of seconds per\
            \ GiB a migration is allowed to take. If a live-migration takes longer\
            \ to migrate than this value multiplied by the size of the VMI, the migration\
            \ will be cancelled, unless AllowPostCopy is true. Defaults to 800"
          format: int64
          type: integer
        disableTLS:
          description: "When set to true, DisableTLS will disable the additional layer\
            \ of live migration encryption provided by KubeVirt. This is usually a\
            \ bad idea. Defaults to false"
          type: boolean
        matchSELinuxLevelOnMigration:
          description: "By default, the SELinux level of target virt-launcher pods\
            \ is forced to the level of the source virt-launcher. When set to true,\
            \ MatchSELinuxLevelOnMigration lets the CRI auto-assign a random level\
            \ to the target. That will ensure the target virt-launcher doesn't share\
            \ categories with another pod on the node. However, migrations will fail\
            \ when using RWX volumes that don't automatically deal with SELinux levels."
          type: boolean
        network:
          description: "Network is the name of the CNI network to use for live migrations.\
            \ By default, migrations go through the pod network."
          type: string
        nodeDrainTaintKey:
          description: "NodeDrainTaintKey defines the taint key that indicates a node\
            \ should be drained. Note: this option relies on the deprecated node taint\
            \ feature. Default: kubevirt.io/drain"
          type: string
        parallelMigrationsPerCluster:
          description: ParallelMigrationsPerCluster is the total number of concurrent
            live migrations allowed cluster-wide. Defaults to 5
          format: int64
          type: integer
        parallelOutboundMigrationsPerNode:
          description: ParallelOutboundMigrationsPerNode is the maximum number of
            concurrent outgoing live migrations allowed per node. Defaults to 2
          format: int64
          type: integer
        progressTimeout:
          description: ProgressTimeout is the maximum number of seconds a live migration
            is allowed to make no progress. Hitting this timeout means a migration
            transferred 0 data for that many seconds. The migration is then considered
            stuck and therefore cancelled. Defaults to 150
          format: int64
          type: integer
        unsafeMigrationOverride:
          description: UnsafeMigrationOverride allows live migrations to occur even
            if the compatibility check indicates the migration will be unsafe to the
            guest. Defaults to false
          type: boolean
      type: object
    kubevirt.io.api.core.v1.MultusNetwork:
      description: Represents the multus cni network.
      properties:
        default:
          description: Select the default network and add it to the multus-cni.io/default-network
            annotation.
          type: boolean
        networkName:
          default: ""
          description: "References to a NetworkAttachmentDefinition CRD object. Format:\
            \ <networkName>, <namespace>/<networkName>. If namespace is not specified,\
            \ VMI namespace is assumed."
          type: string
      required:
      - networkName
      type: object
    kubevirt.io.api.core.v1.NUMA:
      properties:
        guestMappingPassthrough:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough'
          description: GuestMappingPassthrough will create an efficient guest topology
            based on host CPUs exclusively assigned to a pod. The created topology
            ensures that memory and CPUs on the virtual numa nodes never cross boundaries
            of host numa nodes.
      type: object
    kubevirt.io.api.core.v1.NUMAGuestMappingPassthrough:
      description: "NUMAGuestMappingPassthrough instructs kubevirt to model numa topology\
        \ which is compatible with the CPU pinning on the guest. This will result\
        \ in a subset of the node numa topology being passed through, ensuring that\
        \ virtual numa nodes and their memory never cross boundaries coming from the\
        \ node numa mapping."
      type: object
    kubevirt.io.api.core.v1.Network:
      description: Network represents a network type and a resource that should be
        connected to the vm.
      properties:
        multus:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.MultusNetwork'
        name:
          default: ""
          description: "Network name. Must be a DNS_LABEL and unique within the vm.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        pod:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.PodNetwork'
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.PITTimer:
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\", \"\
            discard\"."
          type: string
      type: object
    kubevirt.io.api.core.v1.PersistentVolumeClaimInfo:
      description: PersistentVolumeClaimInfo contains the relavant information virt-handler
        needs cached about a PVC
      properties:
        accessModes:
          description: "AccessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-list-type: atomic
        capacity:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: Capacity represents the capacity set on the corresponding PVC
            status
          type: object
        filesystemOverhead:
          description: Percentage of filesystem's size to be reserved when resizing
            the PVC
          type: string
        preallocated:
          description: Preallocated indicates if the PVC's storage is preallocated
            or not
          type: boolean
        requests:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: Requests represents the resources requested by the corresponding
            PVC spec
          type: object
        volumeMode:
          description: VolumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
      type: object
    kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource:
      description: "PersistentVolumeClaimVolumeSource represents a reference to a\
        \ PersistentVolumeClaim in the same namespace. Directly attached to the vmi\
        \ via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
      properties:
        claimName:
          default: ""
          description: "claimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        hotpluggable:
          description: Hotpluggable indicates whether the volume can be hotplugged
            and hotunplugged.
          type: boolean
        readOnly:
          description: readOnly Will force the ReadOnly setting in VolumeMounts. Default
            false.
          type: boolean
      required:
      - claimName
      type: object
    kubevirt.io.api.core.v1.PluginBinding:
      description: PluginBinding represents a binding implemented in a plugin.
      properties:
        name:
          default: ""
          description: "Name references to the binding name as denined in the kubevirt\
            \ CR. version: 1alphav1"
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.PodNetwork:
      description: Represents the stock pod network interface.
      properties:
        vmIPv6NetworkCIDR:
          description: IPv6 CIDR for the vm network. Defaults to fd10:0:2::/120 if
            not specified.
          type: string
        vmNetworkCIDR:
          description: CIDR for vm network. Default 10.0.2.0/24 if not specified.
          type: string
      type: object
    kubevirt.io.api.core.v1.Port:
      description: Port represents a port to expose from the virtual machine. Default
        protocol TCP. The port field is mandatory
      properties:
        name:
          description: "If specified, this must be an IANA_SVC_NAME and unique within\
            \ the pod. Each named port in a pod must have a unique name. Name for\
            \ the port that can be referred to by services."
          type: string
        port:
          default: 0
          description: "Number of port to expose for the virtual machine. This must\
            \ be a valid port number, 0 < x < 65536."
          format: int32
          type: integer
        protocol:
          description: Protocol for port. Must be UDP or TCP. Defaults to "TCP".
          type: string
      required:
      - port
      type: object
    kubevirt.io.api.core.v1.PreferenceMatcher:
      description: PreferenceMatcher references a set of preference that is used to
        fill fields in the VMI template.
      properties:
        inferFromVolume:
          description: InferFromVolume lists the name of a volume that should be used
            to infer or discover the preference to be used through known annotations
            on the underlying resource. Once applied to the PreferenceMatcher this
            field is removed.
          type: string
        inferFromVolumeFailurePolicy:
          description: "InferFromVolumeFailurePolicy controls what should happen on\
            \ failure when preference the instancetype. Allowed values are: \"RejectInferFromVolumeFailure\"\
            \ and \"IgnoreInferFromVolumeFailure\". If not specified, \"RejectInferFromVolumeFailure\"\
            \ is used by default."
          type: string
        kind:
          description: "Kind specifies which preference resource is referenced. Allowed\
            \ values are: \"VirtualMachinePreference\" and \"VirtualMachineClusterPreference\"\
            . If not specified, \"VirtualMachineClusterPreference\" is used by default."
          type: string
        name:
          description: Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference
          type: string
        revisionName:
          description: RevisionName specifies a ControllerRevision containing a specific
            copy of the VirtualMachinePreference or VirtualMachineClusterPreference
            to be used. This is initially captured the first time the instancetype
            is applied to the VirtualMachineInstance.
          type: string
      type: object
    kubevirt.io.api.core.v1.Probe:
      description: Probe describes a health check to be performed against a VirtualMachineInstance
        to determine whether it is alive or ready to receive traffic.
      properties:
        exec:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ExecAction'
          description: "One and only one of the following should be specified. Exec\
            \ specifies the action to take, it will be executed on the guest through\
            \ the qemu-guest-agent. If the guest agent is not available, this probe\
            \ will fail."
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered
            failed after having succeeded. Defaults to 3. Minimum value is 1.
          format: int32
          type: integer
        guestAgentPing:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.GuestAgentPing'
          description: GuestAgentPing contacts the qemu-guest-agent for availability
            checks.
        httpGet:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.HTTPGetAction'
          description: HTTPGet specifies the http request to perform.
        initialDelaySeconds:
          description: "Number of seconds after the VirtualMachineInstance has started\
            \ before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1.
          format: int32
          type: integer
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered
            successful after having failed. Defaults to 1. Must be 1 for liveness.
            Minimum value is 1.
          format: int32
          type: integer
        tcpSocket:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TCPSocketAction'
          description: TCPSocket specifies an action involving a TCP port. TCP hooks
            not yet supported
        timeoutSeconds:
          description: "Number of seconds after which the probe times out. For exec\
            \ probes the timeout fails the probe but does not terminate the command\
            \ running on the guest. This means a blocking command can result in an\
            \ increasing load on the guest. A small buffer will be added to the resulting\
            \ workload exec probe to compensate for delays caused by the qemu guest\
            \ exec mechanism. Defaults to 1 second. Minimum value is 1. More info:\
            \ https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
      type: object
    kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation:
      properties:
        users:
          description: Users represents a list of guest users that should have the
            ssh public keys added to their authorized_keys file.
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-list-type: set
      required:
      - users
      type: object
    kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation:
      type: object
    kubevirt.io.api.core.v1.RTCTimer:
      properties:
        present:
          description: Enabled set to false makes sure that the machine type or a
            preset can't add the timer. Defaults to true.
          type: boolean
        tickPolicy:
          description: "TickPolicy determines what happens when QEMU misses a deadline\
            \ for injecting a tick to the guest. One of \"delay\", \"catchup\"."
          type: string
        track:
          description: Track the guest or the wall clock.
          type: string
      type: object
    kubevirt.io.api.core.v1.Realtime:
      description: Realtime holds the tuning knobs specific for realtime workloads.
      properties:
        mask:
          description: "Mask defines the vcpu mask expression that defines which vcpus\
            \ are used for realtime. Format matches libvirt's expressions. Example:\
            \ \"0-3,^1\",\"0,2,3\",\"2-3\""
          type: string
      type: object
    kubevirt.io.api.core.v1.RemoveVolumeOptions:
      description: RemoveVolumeOptions is provided when dynamically hot unplugging
        volume and disk
      properties:
        dryRun:
          description: "When present, indicates that modifications should not be persisted.\
            \ An invalid or unrecognized dryRun directive will result in an error\
            \ response and no further processing of the request. Valid values are:\
            \ - All: all dry run stages will be processed"
          items:
            default: ""
            type: string
          type: array
          x-kubernetes-list-type: atomic
        name:
          default: ""
          description: Name represents the name that maps to both the disk and volume
            that should be removed
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.ResourceRequirements:
      properties:
        limits:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: Limits describes the maximum amount of compute resources allowed.
            Valid resource keys are "memory" and "cpu".
          type: object
        overcommitGuestOverhead:
          description: Don't ask the scheduler to take the guest-management overhead
            into account. Instead put the overhead only into the container's memory
            limit. This can lead to crashes if all memory is in use on a node. Defaults
            to false.
          type: boolean
        requests:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/k8s.io.apimachinery.pkg.api.resource.Quantity'
            default: {}
          description: Requests is a description of the initial vmi resources. Valid
            resource keys are "memory" and "cpu".
          type: object
      type: object
    kubevirt.io.api.core.v1.Rng:
      description: Rng represents the random device passed from host
      type: object
    kubevirt.io.api.core.v1.SEV:
      properties:
        attestation:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEVAttestation'
          description: "If specified, run the attestation process for a vmi."
        dhCert:
          description: Base64 encoded guest owner's Diffie-Hellman key.
          type: string
        policy:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SEVPolicy'
          description: "Guest policy flags as defined in AMD SEV API specification.\
            \ Note: due to security reasons it is not allowed to enable guest debugging.\
            \ Therefore NoDebug flag is not exposed to users and is always true."
        session:
          description: Base64 encoded session blob.
          type: string
      type: object
    kubevirt.io.api.core.v1.SEVAttestation:
      type: object
    kubevirt.io.api.core.v1.SEVPolicy:
      properties:
        encryptedState:
          description: SEV-ES is required. Defaults to false.
          type: boolean
      type: object
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredential:
      description: SSHPublicKeyAccessCredential represents a source and propagation
        method for injecting ssh public keys into a vm guest
      properties:
        propagationMethod:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod'
          default: {}
          description: PropagationMethod represents how the public key is injected
            into the vm guest.
        source:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource'
          default: {}
          description: Source represents where the public keys are pulled from
      required:
      - propagationMethod
      - source
      type: object
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialPropagationMethod:
      description: SSHPublicKeyAccessCredentialPropagationMethod represents the method
        used to inject a ssh public key into the vm guest. Only one of its members
        may be specified.
      properties:
        configDrive:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation'
          description: ConfigDrivePropagation means that the ssh public keys are injected
            into the VM using metadata using the configDrive cloud-init provider
        noCloud:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.NoCloudSSHPublicKeyAccessCredentialPropagation'
          description: NoCloudPropagation means that the ssh public keys are injected
            into the VM using metadata using the noCloud cloud-init provider
        qemuGuestAgent:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation'
          description: QemuGuestAgentAccessCredentailPropagation means ssh public
            keys are dynamically injected into the vm at runtime via the qemu guest
            agent. This feature requires the qemu guest agent to be running within
            the guest.
      type: object
    kubevirt.io.api.core.v1.SSHPublicKeyAccessCredentialSource:
      description: SSHPublicKeyAccessCredentialSource represents where to retrieve
        the ssh key credentials Only one of its members may be specified.
      properties:
        secret:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource'
          description: Secret means that the access credential is pulled from a kubernetes
            secret
      type: object
    kubevirt.io.api.core.v1.SecretVolumeSource:
      description: SecretVolumeSource adapts a Secret into a volume.
      properties:
        optional:
          description: Specify whether the Secret or it's keys must be defined
          type: boolean
        secretName:
          description: "Name of the secret in the pod's namespace to use. More info:\
            \ https://kubernetes.io/docs/concepts/storage/volumes#secret"
          type: string
        volumeLabel:
          description: "The volume label of the resulting disk inside the VMI. Different\
            \ bootstrapping mechanisms require different values. Typical values are\
            \ \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart)."
          type: string
      type: object
    kubevirt.io.api.core.v1.ServiceAccountVolumeSource:
      description: ServiceAccountVolumeSource adapts a ServiceAccount into a volume.
      properties:
        serviceAccountName:
          description: "Name of the service account in the pod's namespace to use.\
            \ More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
          type: string
      type: object
    kubevirt.io.api.core.v1.SoundDevice:
      description: Represents the user's configuration to emulate sound cards in the
        VMI.
      properties:
        model:
          description: "We only support ich9 or ac97. If SoundDevice is not set: No\
            \ sound card is emulated. If SoundDevice is set but Model is not: ich9"
          type: string
        name:
          default: ""
          description: User's defined name for this sound device
          type: string
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.SyNICTimer:
      properties:
        direct:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
        enabled:
          type: boolean
      type: object
    kubevirt.io.api.core.v1.SysprepSource:
      description: Represents a Sysprep volume source.
      properties:
        configMap:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: ConfigMap references a ConfigMap that contains Sysprep answer
            file named autounattend.xml that should be attached as disk of CDROM type.
        secret:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LocalObjectReference'
          description: Secret references a k8s Secret that contains Sysprep answer
            file named autounattend.xml that should be attached as disk of CDROM type.
      type: object
    kubevirt.io.api.core.v1.TPMDevice:
      properties:
        persistent:
          description: Persistent indicates the state of the TPM device should be
            kept accross reboots Defaults to false
          type: boolean
      type: object
    kubevirt.io.api.core.v1.Timer:
      description: Represents all available timers in a vmi.
      properties:
        hpet:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HPETTimer'
          description: HPET (High Precision Event Timer) - multiple timers with periodic
            interrupts.
        hyperv:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HypervTimer'
          description: Hyperv (Hypervclock) - lets guests read the host’s wall clock
            time (paravirtualized). For windows guests.
        kvm:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.KVMTimer'
          description: "KVM \t(KVM clock) - lets guests read the host’s wall clock\
            \ time (paravirtualized). For linux guests."
        pit:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PITTimer'
          description: PIT (Programmable Interval Timer) - a timer with periodic interrupts.
        rtc:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.RTCTimer'
          description: RTC (Real Time Clock) - a continuously running timer with periodic
            interrupts.
      type: object
    kubevirt.io.api.core.v1.TopologyHints:
      properties:
        tscFrequency:
          format: int64
          type: integer
      type: object
    kubevirt.io.api.core.v1.UserPasswordAccessCredential:
      description: UserPasswordAccessCredential represents a source and propagation
        method for injecting user passwords into a vm guest Only one of its members
        may be specified.
      properties:
        propagationMethod:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod'
          default: {}
          description: propagationMethod represents how the user passwords are injected
            into the vm guest.
        source:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource'
          default: {}
          description: Source represents where the user passwords are pulled from
      required:
      - propagationMethod
      - source
      type: object
    kubevirt.io.api.core.v1.UserPasswordAccessCredentialPropagationMethod:
      description: UserPasswordAccessCredentialPropagationMethod represents the method
        used to inject a user passwords into the vm guest. Only one of its members
        may be specified.
      properties:
        qemuGuestAgent:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.QemuGuestAgentUserPasswordAccessCredentialPropagation'
          description: QemuGuestAgentAccessCredentailPropagation means passwords are
            dynamically injected into the vm at runtime via the qemu guest agent.
            This feature requires the qemu guest agent to be running within the guest.
      type: object
    kubevirt.io.api.core.v1.UserPasswordAccessCredentialSource:
      description: UserPasswordAccessCredentialSource represents where to retrieve
        the user password credentials Only one of its members may be specified.
      properties:
        secret:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredentialSecretSource'
          description: Secret means that the access credential is pulled from a kubernetes
            secret
      type: object
    kubevirt.io.api.core.v1.VGPUDisplayOptions:
      properties:
        enabled:
          description: Enabled determines if a display addapter backed by a vGPU should
            be enabled or disabled on the guest. Defaults to true.
          type: boolean
        ramFB:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.FeatureState'
          description: "Enables a boot framebuffer, until the guest OS loads a real\
            \ GPU driver Defaults to true."
      type: object
    kubevirt.io.api.core.v1.VGPUOptions:
      properties:
        display:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.VGPUDisplayOptions'
      type: object
    kubevirt.io.api.core.v1.VirtualMachine:
      description: VirtualMachine handles the VirtualMachines that are not running
        or are in a stopped state The VirtualMachine contains the template to create
        the VirtualMachineInstance. It also mirrors the running state of the created
        VirtualMachineInstance in its status.
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineSpec'
          default: {}
          description: Spec contains the specification of VirtualMachineInstance created
        status:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStatus'
          default: {}
          description: Status holds the current state of the controller and brief
            information about its associated VirtualMachineInstance
      required:
      - spec
      type: object
    kubevirt.io.api.core.v1.VirtualMachineCondition:
      description: VirtualMachineCondition represents the state of VirtualMachine
      properties:
        lastProbeTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        message:
          type: string
        reason:
          type: string
        status:
          default: ""
          type: string
        type:
          default: ""
          type: string
      required:
      - status
      - type
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstance:
      description: VirtualMachineInstance is *the* VirtualMachineInstance Definition.
        It represents a virtual machine in the runtime environment of kubernetes.
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec'
          default: {}
          description: VirtualMachineInstance Spec contains the VirtualMachineInstance
            specification.
        status:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceStatus'
          default: {}
          description: Status is the high level overview of how the VirtualMachineInstance
            is doing. It contains information available to controllers and users.
      required:
      - spec
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceCondition:
      properties:
        lastProbeTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        message:
          type: string
        reason:
          type: string
        status:
          default: ""
          type: string
        type:
          default: ""
          type: string
      required:
      - status
      - type
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo:
      properties:
        id:
          description: Guest OS Id
          type: string
        kernelRelease:
          description: Guest OS Kernel Release
          type: string
        kernelVersion:
          description: Kernel version of the Guest OS
          type: string
        machine:
          description: Machine type of the Guest OS
          type: string
        name:
          description: Name of the Guest OS
          type: string
        prettyName:
          description: Guest OS Pretty Name
          type: string
        version:
          description: Guest OS Version
          type: string
        versionId:
          description: Version ID of the Guest OS
          type: string
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceList:
      description: VirtualMachineInstanceList is a list of VirtualMachines
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstance'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigration:
      description: VirtualMachineInstanceMigration represents the object tracking
        a VMI's migration to another host in the cluster
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus'
          default: {}
      required:
      - spec
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition:
      properties:
        lastProbeTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
        message:
          type: string
        reason:
          type: string
        status:
          default: ""
          type: string
        type:
          default: ""
          type: string
      required:
      - status
      - type
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationList:
      description: VirtualMachineInstanceMigrationList is a list of VirtualMachineMigrations
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigration'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp:
      description: VirtualMachineInstanceMigrationPhaseTransitionTimestamp gives a
        timestamp in relation to when a phase is set on a vmi
      properties:
        phase:
          description: "Phase is the status of the VirtualMachineInstanceMigrationPhase\
            \ in kubernetes world. It is not the VirtualMachineInstanceMigrationPhase\
            \ status, but partially correlates to it."
          type: string
        phaseTransitionTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
          description: PhaseTransitionTimestamp is the timestamp of when the phase
            change occurred
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationSpec:
      properties:
        vmiName:
          description: The name of the VMI to perform the migration on. VMI must exist
            in the migration objects namespace
          type: string
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState:
      properties:
        abortRequested:
          description: Indicates that the migration has been requested to abort
          type: boolean
        abortStatus:
          description: Indicates the final status of the live migration abortion
          type: string
        completed:
          description: Indicates the migration completed
          type: boolean
        endTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: The time the migration action ended
        failed:
          description: Indicates that the migration failed
          type: boolean
        migrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.MigrationConfiguration'
          description: Migration configurations to apply
        migrationPolicyName:
          description: "Name of the migration policy. If string is empty, no policy\
            \ is matched"
          type: string
        migrationUid:
          description: The VirtualMachineInstanceMigration object associated with
            this migration
          type: string
        mode:
          description: Lets us know if the vmi is currently running pre or post copy
            migration
          type: string
        sourceNode:
          description: The source node that the VMI originated on
          type: string
        startTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: The time the migration action began
        targetAttachmentPodUID:
          description: The UID of the target attachment pod for hotplug volumes
          type: string
        targetCPUSet:
          description: "If the VMI requires dedicated CPUs, this field will hold the\
            \ dedicated CPU set on the target node"
          items:
            default: 0
            format: int32
            type: integer
          type: array
          x-kubernetes-list-type: atomic
        targetDirectMigrationNodePorts:
          additionalProperties:
            default: 0
            format: int32
            type: integer
          description: The list of ports opened for live migration on the destination
            node
          type: object
        targetNode:
          description: The target node that the VMI is moving to
          type: string
        targetNodeAddress:
          description: The address of the target node to use for the migration
          type: string
        targetNodeDomainDetected:
          description: The Target Node has seen the Domain Start Event
          type: boolean
        targetNodeDomainReadyTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: The timestamp at which the target node detects the domain is
            active
        targetNodeTopology:
          description: "If the VMI requires dedicated CPUs, this field will hold the\
            \ numa topology on the target node"
          type: string
        targetPod:
          description: The target pod that the VMI is moving to
          type: string
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationStatus:
      description: VirtualMachineInstanceMigration reprents information pertaining
        to a VMI's migration.
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationCondition'
            default: {}
          type: array
        migrationState:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState'
          description: Represents the status of a live migration
        phase:
          type: string
        phaseTransitionTimestamps:
          description: PhaseTransitionTimestamp is the timestamp of when the last
            phase change occurred
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface:
      properties:
        infoSource:
          description: "Specifies the origin of the interface data collected. values:\
            \ domain, guest-agent, multus-status."
          type: string
        interfaceName:
          description: The interface name inside the Virtual Machine
          type: string
        ipAddress:
          description: IP address of a Virtual Machine interface. It is always the
            first item of IPs
          type: string
        ipAddresses:
          description: List of all IP addresses of a Virtual Machine interface
          items:
            default: ""
            type: string
          type: array
        mac:
          description: Hardware address of a Virtual Machine interface
          type: string
        name:
          description: "Name of the interface, corresponds to name of the network\
            \ assigned to the interface"
          type: string
        queueCount:
          description: Specifies how many queues are allocated by MultiQueue
          format: int32
          type: integer
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp:
      description: VirtualMachineInstancePhaseTransitionTimestamp gives a timestamp
        in relation to when a phase is set on a vmi
      properties:
        phase:
          description: "Phase is the status of the VirtualMachineInstance in kubernetes\
            \ world. It is not the VirtualMachineInstance status, but partially correlates\
            \ to it."
          type: string
        phaseTransitionTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          default: {}
          description: PhaseTransitionTimestamp is the timestamp of when the phase
            change occurred
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceSpec:
      description: VirtualMachineInstanceSpec is a description of a VirtualMachineInstance.
      properties:
        accessCredentials:
          description: Specifies a set of public keys to inject into the vm guest
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.AccessCredential'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        affinity:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Affinity'
          description: "If affinity is specifies, obey all the affinity rules"
        architecture:
          description: Specifies the architecture of the vm guest you are attempting
            to run. Defaults to the compiled architecture of the KubeVirt components
          type: string
        dnsConfig:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PodDNSConfig'
          description: Specifies the DNS parameters of a pod. Parameters specified
            here will be merged to the generated DNS configuration based on DNSPolicy.
        dnsPolicy:
          description: |-
            Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.

            Possible enum values:
             - `"ClusterFirst"` indicates that the pod should use cluster DNS first unless hostNetwork is true, if it is available, then fall back on the default (as determined by kubelet) DNS settings.
             - `"ClusterFirstWithHostNet"` indicates that the pod should use cluster DNS first, if it is available, then fall back on the default (as determined by kubelet) DNS settings.
             - `"Default"` indicates that the pod should use the default (as determined by kubelet) DNS settings.
             - `"None"` indicates that the pod should use empty DNS settings. DNS parameters such as nameservers and search paths should be defined via DNSConfig.
          enum:
          - ClusterFirst
          - ClusterFirstWithHostNet
          - Default
          - None
          type: string
        domain:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DomainSpec'
          default: {}
          description: Specification of the desired behavior of the VirtualMachineInstance
            on the host.
        evictionStrategy:
          description: EvictionStrategy can be set to "LiveMigrate" if the VirtualMachineInstance
            should be migrated instead of shut-off in case of a node drain.
          type: string
        hostname:
          description: "Specifies the hostname of the vmi If not specified, the hostname\
            \ will be set to the name of the vmi, if dhcp or cloud-init is configured\
            \ properly."
          type: string
        livenessProbe:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Probe'
          description: "Periodic probe of VirtualMachineInstance liveness. VirtualmachineInstances\
            \ will be stopped if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        networks:
          description: List of networks that can be attached to a vm's virtual interface.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Network'
            default: {}
          type: array
        nodeSelector:
          additionalProperties:
            default: ""
            type: string
          description: "NodeSelector is a selector which must be true for the vmi\
            \ to fit on a node. Selector which must match a node's labels for the\
            \ vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
          type: object
        priorityClassName:
          description: "If specified, indicates the pod's priority. If not specified,\
            \ the pod priority will be default or zero if there is no default."
          type: string
        readinessProbe:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Probe'
          description: "Periodic probe of VirtualMachineInstance service readiness.\
            \ VirtualmachineInstances will be removed from service endpoints if the\
            \ probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        schedulerName:
          description: "If specified, the VMI will be dispatched by specified scheduler.\
            \ If not specified, the VMI will be dispatched by default scheduler."
          type: string
        startStrategy:
          description: StartStrategy can be set to "Paused" if Virtual Machine should
            be started in paused state.
          type: string
        subdomain:
          description: "If specified, the fully qualified vmi hostname will be \"\
            <hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not\
            \ specified, the vmi will not have a domainname at all. The DNS entry\
            \ will resolve to the vmi, no matter if the vmi itself can pick up a hostname."
          type: string
        terminationGracePeriodSeconds:
          description: Grace period observed after signalling a VirtualMachineInstance
            to stop after which the VirtualMachineInstance is force terminated.
          format: int64
          type: integer
        tolerations:
          description: "If toleration is specified, obey all the toleration rules."
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.Toleration'
            default: {}
          type: array
        topologySpreadConstraints:
          description: TopologySpreadConstraints describes how a group of VMIs will
            be spread across a given topology domains. K8s scheduler will schedule
            VMI pods in a way which abides by the constraints.
          items:
            allOf:
            - $ref: '#/components/schemas/k8s.io.v1.TopologySpreadConstraint'
            default: {}
          type: array
          x-kubernetes-list-map-keys:
          - topologyKey
          - whenUnsatisfiable
          x-kubernetes-list-type: map
          x-kubernetes-patch-merge-key: topologyKey
          x-kubernetes-patch-strategy: merge
        volumes:
          description: List of volumes that can be mounted by disks belonging to the
            vmi.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Volume'
            default: {}
          type: array
      required:
      - domain
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceStatus:
      description: VirtualMachineInstanceStatus represents information about the status
        of a VirtualMachineInstance. Status may trail the actual state of a system.
      properties:
        VSOCKCID:
          description: VSOCKCID is used to track the allocated VSOCK CID in the VM.
          format: int64
          type: integer
        activePods:
          additionalProperties:
            default: ""
            type: string
          description: ActivePods is a mapping of pod UID to node name. It is possible
            for multiple pods to be running for a single VMI during migration.
          type: object
        conditions:
          description: Conditions are specific points in VirtualMachineInstance's
            pod runtime.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceCondition'
            default: {}
          type: array
        currentCPUTopology:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CPUTopology'
          description: CurrentCPUTopology specifies the current CPU topology used
            by the VM workload. Current topology may differ from the desired topology
            in the spec while CPU hotplug takes place.
        evacuationNodeName:
          description: EvacuationNodeName is used to track the eviction process of
            a VMI. It stores the name of the node that we want to evacuate. It is
            meant to be used by KubeVirt core components only and can't be set or
            modified by users.
          type: string
        fsFreezeStatus:
          description: FSFreezeStatus is the state of the fs of the guest it can be
            either frozen or thawed
          type: string
        guestOSInfo:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceGuestOSInfo'
          default: {}
          description: Guest OS Information
        interfaces:
          description: Interfaces represent the details of available network interfaces.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceNetworkInterface'
            default: {}
          type: array
        kernelBootStatus:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.KernelBootStatus'
          description: KernelBootStatus contains info about the kernelBootContainer
        launcherContainerImageVersion:
          description: LauncherContainerImageVersion indicates what container image
            is currently active for the vmi.
          type: string
        machine:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.Machine'
          description: "Machine shows the final resulting qemu machine type. This\
            \ can be different than the machine type selected in the spec, due to\
            \ qemus machine type alias mechanism."
        memory:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.MemoryStatus'
          description: Memory shows various informations about the VirtualMachine
            memory.
        migrationMethod:
          description: "Represents the method using which the vmi can be migrated:\
            \ live migration or block migration"
          type: string
        migrationState:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceMigrationState'
          description: Represents the status of a live migration
        migrationTransport:
          description: This represents the migration transport
          type: string
        nodeName:
          description: NodeName is the name where the VirtualMachineInstance is currently
            running.
          type: string
        phase:
          description: "Phase is the status of the VirtualMachineInstance in kubernetes\
            \ world. It is not the VirtualMachineInstance status, but partially correlates\
            \ to it."
          type: string
        phaseTransitionTimestamps:
          description: PhaseTransitionTimestamp is the timestamp of when the last
            phase change occurred
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstancePhaseTransitionTimestamp'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        qosClass:
          description: "The Quality of Service (QOS) classification assigned to the\
            \ virtual machine instance based on resource requirements See PodQOSClass\
            \ type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md"
          type: string
        reason:
          description: A brief CamelCase message indicating details about why the
            VMI is in this state. e.g. 'NodeUnresponsive'
          type: string
        runtimeUser:
          default: 0
          description: RuntimeUser is used to determine what user will be used in
            launcher
          format: int64
          type: integer
        selinuxContext:
          description: SELinuxContext is the actual SELinux context of the virt-launcher
            pod
          type: string
        topologyHints:
          $ref: '#/components/schemas/kubevirt.io.api.core.v1.TopologyHints'
        virtualMachineRevisionName:
          description: VirtualMachineRevisionName is used to get the vm revision of
            the vmi when doing an online vm snapshot
          type: string
        volumeStatus:
          description: VolumeStatus contains the statuses of all the volumes
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VolumeStatus'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
      type: object
    kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec:
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceSpec'
          default: {}
          description: VirtualMachineInstance Spec contains the VirtualMachineInstance
            specification.
      type: object
    kubevirt.io.api.core.v1.VirtualMachineList:
      description: VirtualMachineList is a list of virtualmachines
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachine'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      type: object
    kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest:
      description: VirtualMachineMemoryDumpRequest represent the memory dump request
        phase and info
      properties:
        claimName:
          default: ""
          description: ClaimName is the name of the pvc that will contain the memory
            dump
          type: string
        endTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: EndTimestamp represents the time the memory dump was completed
        fileName:
          description: FileName represents the name of the output file
          type: string
        message:
          description: Message is a detailed message about failure of the memory dump
          type: string
        phase:
          default: ""
          description: Phase represents the memory dump phase
          type: string
        remove:
          description: Remove represents request of dissociating the memory dump pvc
          type: boolean
        startTimestamp:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.Time'
          description: StartTimestamp represents the time the memory dump started
      required:
      - claimName
      - phase
      type: object
    kubevirt.io.api.core.v1.VirtualMachineSpec:
      description: VirtualMachineSpec describes how the proper VirtualMachine should
        look like
      properties:
        dataVolumeTemplates:
          description: dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance
            template can reference. DataVolumes in this list are dynamically created
            for the VirtualMachine and are tied to the VirtualMachine's life-cycle.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeTemplateSpec'
            default: {}
          type: array
        instancetype:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.InstancetypeMatcher'
          description: InstancetypeMatcher references a instancetype that is used
            to fill fields in Template
        liveUpdateFeatures:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.LiveUpdateFeatures'
          description: LiveUpdateFeatures references a configuration of hotpluggable
            resources
        preference:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PreferenceMatcher'
          description: PreferenceMatcher references a set of preference that is used
            to fill fields in Template
        runStrategy:
          description: Running state indicates the requested running state of the
            VirtualMachineInstance mutually exclusive with Running
          type: string
        running:
          description: Running controls whether the associatied VirtualMachineInstance
            is created or not Mutually exclusive with RunStrategy
          type: boolean
        template:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineInstanceTemplateSpec'
          description: Template is the direct specification of VirtualMachineInstance
      required:
      - template
      type: object
    kubevirt.io.api.core.v1.VirtualMachineStartFailure:
      description: VirtualMachineStartFailure tracks VMIs which failed to transition
        successfully to running using the VM status
      properties:
        consecutiveFailCount:
          format: int32
          type: integer
        lastFailedVMIUID:
          type: string
        retryAfterTimestamp:
          default: ""
          description: Time is a wrapper around time.Time which supports correct marshaling
            to YAML and JSON.  Wrappers are provided for many of the factory methods
            that the time package offers.
          type: string
      type: object
    kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest:
      properties:
        action:
          default: ""
          description: Indicates the type of action that is requested. e.g. Start
            or Stop
          type: string
        data:
          additionalProperties:
            default: ""
            type: string
          description: Provides additional data in order to perform the Action
          type: object
        uid:
          description: Indicates the UUID of an existing Virtual Machine Instance
            that this change request applies to -- if applicable
          type: string
      required:
      - action
      type: object
    kubevirt.io.api.core.v1.VirtualMachineStatus:
      description: VirtualMachineStatus represents the status returned by the controller
        to describe how the VirtualMachine is doing
      properties:
        conditions:
          description: Hold the state information of the VirtualMachine and its VirtualMachineInstance
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineCondition'
            default: {}
          type: array
        created:
          description: Created indicates if the virtual machine is created in the
            cluster
          type: boolean
        desiredGeneration:
          description: DesiredGeneration is the generation which is desired for the
            VMI. This will be used in comparisons with ObservedGeneration to understand
            when the VMI is out of sync. This will be changed at the same time as
            ObservedGeneration to remove errors which could occur if Generation is
            updated through an Update() before ObservedGeneration in Status.
          format: int64
          type: integer
        memoryDumpRequest:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineMemoryDumpRequest'
          description: MemoryDumpRequest tracks memory dump request phase and info
            of getting a memory dump to the given pvc
        observedGeneration:
          description: ObservedGeneration is the generation observed by the vmi when
            started.
          format: int64
          type: integer
        printableStatus:
          description: "PrintableStatus is a human readable, high-level representation\
            \ of the status of the virtual machine"
          type: string
        ready:
          description: Ready indicates if the virtual machine is running and ready
          type: boolean
        restoreInProgress:
          description: RestoreInProgress is the name of the VirtualMachineRestore
            currently executing
          type: string
        snapshotInProgress:
          description: SnapshotInProgress is the name of the VirtualMachineSnapshot
            currently executing
          type: string
        startFailure:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStartFailure'
          description: StartFailure tracks consecutive VMI startup failures for the
            purposes of crash loop backoffs
        stateChangeRequests:
          description: StateChangeRequests indicates a list of actions that should
            be taken on a VMI e.g. stop a specific VMI then start a new one.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineStateChangeRequest'
            default: {}
          type: array
        volumeRequests:
          description: VolumeRequests indicates a list of volumes add or remove from
            the VMI template and hotplug on an active running VMI.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VirtualMachineVolumeRequest'
            default: {}
          type: array
          x-kubernetes-list-type: atomic
        volumeSnapshotStatuses:
          description: VolumeSnapshotStatuses indicates a list of statuses whether
            snapshotting is supported by each volume.
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.api.core.v1.VolumeSnapshotStatus'
            default: {}
          type: array
      type: object
    kubevirt.io.api.core.v1.VirtualMachineVolumeRequest:
      properties:
        addVolumeOptions:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.AddVolumeOptions'
          description: AddVolumeOptions when set indicates a volume should be added.
            The details within this field specify how to add the volume
        removeVolumeOptions:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.RemoveVolumeOptions'
          description: RemoveVolumeOptions when set indicates a volume should be removed.
            The details within this field specify how to add the volume
      type: object
    kubevirt.io.api.core.v1.Volume:
      description: Volume represents a named volume in a vmi.
      properties:
        cloudInitConfigDrive:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CloudInitConfigDriveSource'
          description: "CloudInitConfigDrive represents a cloud-init Config Drive\
            \ user-data source. The Config Drive data will be added as a disk to the\
            \ vmi. A proper cloud-init installation is required inside the guest.\
            \ More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html"
        cloudInitNoCloud:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.CloudInitNoCloudSource'
          description: "CloudInitNoCloud represents a cloud-init NoCloud user-data\
            \ source. The NoCloud data will be added as a disk to the vmi. A proper\
            \ cloud-init installation is required inside the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html"
        configMap:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ConfigMapVolumeSource'
          description: "ConfigMapSource represents a reference to a ConfigMap in the\
            \ same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/"
        containerDisk:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ContainerDiskSource'
          description: "ContainerDisk references a docker image, embedding a qcow\
            \ or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html"
        dataVolume:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DataVolumeSource'
          description: DataVolume represents the dynamic creation a PVC for this volume
            as well as the process of populating that PVC with a disk image.
        downwardAPI:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardAPIVolumeSource'
          description: DownwardAPI represents downward API about the pod that should
            populate this volume
        downwardMetrics:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DownwardMetricsVolumeSource'
          description: DownwardMetrics adds a very small disk to VMIs which contains
            a limited view of host and guest metrics. The disk content is compatible
            with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
        emptyDisk:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.EmptyDiskSource'
          description: "EmptyDisk represents a temporary disk which shares the vmis\
            \ lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html"
        ephemeral:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.EphemeralVolumeSource'
          description: Ephemeral is a special volume source that "wraps" specified
            source and provides copy-on-write image on top of it.
        hostDisk:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HostDisk'
          description: HostDisk represents a disk created on the cluster level
        memoryDump:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.MemoryDumpVolumeSource'
          description: MemoryDump is attached to the virt launcher and is populated
            with a memory dump of the vmi
        name:
          default: ""
          description: "Volume's name. Must be a DNS_LABEL and unique within the vmi.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        persistentVolumeClaim:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimVolumeSource'
          description: "PersistentVolumeClaimVolumeSource represents a reference to\
            \ a PersistentVolumeClaim in the same namespace. Directly attached to\
            \ the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        secret:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SecretVolumeSource'
          description: "SecretVolumeSource represents a reference to a secret data\
            \ in the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/"
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ServiceAccountVolumeSource'
          description: "ServiceAccountVolumeSource represents a reference to a service\
            \ account. There can only be one volume of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
        sysprep:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.SysprepSource'
          description: Represents a Sysprep volume source.
      required:
      - name
      type: object
    kubevirt.io.api.core.v1.VolumeSnapshotStatus:
      properties:
        enabled:
          default: false
          description: True if the volume supports snapshotting
          type: boolean
        name:
          default: ""
          description: Volume name
          type: string
        reason:
          description: "Empty if snapshotting is enabled, contains reason otherwise"
          type: string
      required:
      - enabled
      - name
      type: object
    kubevirt.io.api.core.v1.VolumeStatus:
      description: VolumeStatus represents information about the status of volumes
        attached to the VirtualMachineInstance.
      properties:
        containerDiskVolume:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.ContainerDiskInfo'
          description: "ContainerDiskVolume shows info about the containerdisk, if\
            \ the volume is a containerdisk"
        hotplugVolume:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.HotplugVolumeStatus'
          description: "If the volume is hotplug, this will contain the hotplug status."
        memoryDumpVolume:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.DomainMemoryDumpInfo'
          description: "If the volume is memorydump volume, this will contain the\
            \ memorydump info."
        message:
          description: Message is a detailed message about the current hotplug volume
            phase
          type: string
        name:
          default: ""
          description: Name is the name of the volume
          type: string
        persistentVolumeClaimInfo:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.PersistentVolumeClaimInfo'
          description: PersistentVolumeClaimInfo is information about the PVC that
            handler requires during start flow
        phase:
          description: Phase is the phase
          type: string
        reason:
          description: Reason is a brief description of why we are in the current
            hotplug volume phase
          type: string
        size:
          description: Represents the size of the volume
          format: int64
          type: integer
        target:
          default: ""
          description: "Target is the target name used when adding the volume to the\
            \ VM, eg: vda"
          type: string
      required:
      - name
      - target
      type: object
    kubevirt.io.api.core.v1.Watchdog:
      description: Named watchdog device.
      properties:
        i6300esb:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.api.core.v1.I6300ESBWatchdog'
          description: i6300esb watchdog device.
        name:
          default: ""
          description: Name of the watchdog.
          type: string
      required:
      - name
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeBlankImage:
      description: DataVolumeBlankImage provides the parameters to create a new raw
        blank image for the PVC
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint:
      description: DataVolumeCheckpoint defines a stage in a warm migration.
      properties:
        current:
          default: ""
          description: Current is the identifier of the snapshot created for this
            checkpoint.
          type: string
        previous:
          default: ""
          description: Previous is the identifier of the snapshot from the previous
            checkpoint.
          type: string
      required:
      - current
      - previous
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource:
      description: "DataVolumeSource represents the source for our Data Volume, this\
        \ can be HTTP, Imageio, S3, GCS, Registry or an existing PVC"
      properties:
        blank:
          description: DataVolumeBlankImage provides the parameters to create a new
            raw blank image for the PVC
          type: object
        gcs:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS'
        http:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP'
        imageio:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO'
        pvc:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC'
        registry:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry'
        s3:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3'
        snapshot:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot'
        upload:
          description: DataVolumeSourceUpload provides the parameters to create a
            Data Volume by uploading the source
          type: object
        vddk:
          $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK'
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceGCS:
      description: DataVolumeSourceGCS provides the parameters to create a Data Volume
        from an GCS source
      properties:
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            GCS source
          type: string
        url:
          default: ""
          description: URL is the url of the GCS source
          type: string
      required:
      - url
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceHTTP:
      description: "DataVolumeSourceHTTP can be either an http or https endpoint,\
        \ with an optional basic auth user name and password, and an optional configmap\
        \ containing additional CAs"
      properties:
        certConfigMap:
          description: "CertConfigMap is a configmap reference, containing a Certificate\
            \ Authority(CA) public key, and a base64 encoded pem certificate"
          type: string
        extraHeaders:
          description: ExtraHeaders is a list of strings containing extra headers
            to include with HTTP transfer requests
          items:
            default: ""
            type: string
          type: array
        secretExtraHeaders:
          description: "SecretExtraHeaders is a list of Secret references, each containing\
            \ an extra HTTP header that may include sensitive information"
          items:
            default: ""
            type: string
          type: array
        secretRef:
          description: "SecretRef A Secret reference, the secret should contain accessKeyId\
            \ (user name) base64 encoded, and secretKey (password) also base64 encoded"
          type: string
        url:
          default: ""
          description: URL is the URL of the http(s) endpoint
          type: string
      required:
      - url
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceImageIO:
      description: DataVolumeSourceImageIO provides the parameters to create a Data
        Volume from an imageio source
      properties:
        certConfigMap:
          description: CertConfigMap provides a reference to the CA cert
          type: string
        diskId:
          default: ""
          description: DiskID provides id of a disk to be imported
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            ovirt-engine
          type: string
        url:
          default: ""
          description: URL is the URL of the ovirt-engine
          type: string
      required:
      - diskId
      - url
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourcePVC:
      description: DataVolumeSourcePVC provides the parameters to create a Data Volume
        from an existing PVC
      properties:
        name:
          default: ""
          description: The name of the source PVC
          type: string
        namespace:
          default: ""
          description: The namespace of the source PVC
          type: string
      required:
      - name
      - namespace
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef:
      description: DataVolumeSourceRef defines an indirect reference to the source
        of data for the DataVolume
      properties:
        kind:
          default: ""
          description: "The kind of the source reference, currently only \"DataSource\"\
            \ is supported"
          type: string
        name:
          default: ""
          description: The name of the source reference
          type: string
        namespace:
          description: "The namespace of the source reference, defaults to the DataVolume\
            \ namespace"
          type: string
      required:
      - kind
      - name
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRegistry:
      description: DataVolumeSourceRegistry provides the parameters to create a Data
        Volume from an registry source
      properties:
        certConfigMap:
          description: CertConfigMap provides a reference to the Registry certs
          type: string
        imageStream:
          description: ImageStream is the name of image stream for import
          type: string
        pullMethod:
          description: "PullMethod can be either \"pod\" (default import), or \"node\"\
            \ (node docker cache based import)"
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            Registry source
          type: string
        url:
          description: "URL is the url of the registry source (starting with the scheme:\
            \ docker, oci-archive)"
          type: string
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceS3:
      description: DataVolumeSourceS3 provides the parameters to create a Data Volume
        from an S3 source
      properties:
        certConfigMap:
          description: "CertConfigMap is a configmap reference, containing a Certificate\
            \ Authority(CA) public key, and a base64 encoded pem certificate"
          type: string
        secretRef:
          description: SecretRef provides the secret reference needed to access the
            S3 source
          type: string
        url:
          default: ""
          description: URL is the url of the S3 source
          type: string
      required:
      - url
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceSnapshot:
      description: DataVolumeSourceSnapshot provides the parameters to create a Data
        Volume from an existing VolumeSnapshot
      properties:
        name:
          default: ""
          description: The name of the source VolumeSnapshot
          type: string
        namespace:
          default: ""
          description: The namespace of the source VolumeSnapshot
          type: string
      required:
      - name
      - namespace
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceUpload:
      description: DataVolumeSourceUpload provides the parameters to create a Data
        Volume by uploading the source
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceVDDK:
      description: DataVolumeSourceVDDK provides the parameters to create a Data Volume
        from a Vmware source
      properties:
        backingFile:
          description: BackingFile is the path to the virtual hard disk to migrate
            from vCenter/ESXi
          type: string
        initImageURL:
          description: "InitImageURL is an optional URL to an image containing an\
            \ extracted VDDK library, overrides v2v-vmware config map"
          type: string
        secretRef:
          description: SecretRef provides a reference to a secret containing the username
            and password needed to access the vCenter or ESXi host
          type: string
        thumbprint:
          description: Thumbprint is the certificate thumbprint of the vCenter or
            ESXi host
          type: string
        url:
          description: URL is the URL of the vCenter or ESXi host with the VM to migrate
          type: string
        uuid:
          description: UUID is the UUID of the virtual machine that the backing file
            is attached to in vCenter/ESXi
          type: string
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSpec:
      description: DataVolumeSpec defines the DataVolume type specification
      properties:
        checkpoints:
          description: "Checkpoints is a list of DataVolumeCheckpoints, representing\
            \ stages in a multistage import."
          items:
            allOf:
            - $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeCheckpoint'
            default: {}
          type: array
        contentType:
          description: "DataVolumeContentType options: \"kubevirt\", \"archive\""
          type: string
        finalCheckpoint:
          description: FinalCheckpoint indicates whether the current DataVolumeCheckpoint
            is the final checkpoint.
          type: boolean
        preallocation:
          description: Preallocation controls whether storage for DataVolumes should
            be allocated in advance.
          type: boolean
        priorityClassName:
          description: "PriorityClassName for Importer, Cloner and Uploader pod"
          type: string
        pvc:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.PersistentVolumeClaimSpec'
          description: PVC is the PVC specification
        source:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSource'
          description: Source is the src of the data for the requested DataVolume
        sourceRef:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.DataVolumeSourceRef'
          description: SourceRef is an indirect reference to the source of data for
            the requested DataVolume
        storage:
          allOf:
          - $ref: '#/components/schemas/kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec'
          description: Storage is the requested storage specification
      type: object
    kubevirt.io.containerized-data-importer-api.pkg.apis.core.v1beta1.StorageSpec:
      description: StorageSpec defines the Storage type specification
      properties:
        accessModes:
          description: "AccessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            default: ""
            type: string
          type: array
        dataSource:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedLocalObjectReference'
          description: "This field can be used to specify either: * An existing VolumeSnapshot\
            \ object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim)\
            \ * An existing custom resource that implements data population (Alpha)\
            \ In order to use custom resource types that implement data population,\
            \ the AnyVolumeDataSource feature gate must be enabled. If the provisioner\
            \ or an external controller can support the specified data source, it\
            \ will create a new volume based on the contents of the specified data\
            \ source. If the AnyVolumeDataSource feature gate is enabled, this field\
            \ will always have the same contents as the DataSourceRef field."
        dataSourceRef:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.TypedObjectReference'
          description: "Specifies the object from which to populate the volume with\
            \ data, if a non-empty volume is desired. This may be any local object\
            \ from a non-empty API group (non core object) or a PersistentVolumeClaim\
            \ object. When this field is specified, volume binding will only succeed\
            \ if the type of the specified object matches some installed volume populator\
            \ or dynamic provisioner. This field will replace the functionality of\
            \ the DataSource field and as such if both fields are non-empty, they\
            \ must have the same value. For backwards compatibility, both fields (DataSource\
            \ and DataSourceRef) will be set to the same value automatically if one\
            \ of them is empty and the other is non-empty. There are two important\
            \ differences between DataSource and DataSourceRef: * While DataSource\
            \ only allows two specific types of objects, DataSourceRef allows any\
            \ non-core object, as well as PersistentVolumeClaim objects. * While DataSource\
            \ ignores disallowed values (dropping them), DataSourceRef preserves all\
            \ values, and generates an error if a disallowed value is specified. (Beta)\
            \ Using this field requires the AnyVolumeDataSource feature gate to be\
            \ enabled."
        resources:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ResourceRequirements'
          default: {}
          description: "Resources represents the minimum resources the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        selector:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.LabelSelector'
          description: A label query over volumes to consider for binding.
        storageClassName:
          description: "Name of the StorageClass required by the claim. More info:\
            \ https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          description: volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
          type: string
        volumeName:
          description: VolumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    network.harvesterhci.io.v1beta1.ClusterNetwork:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetworkStatus'
          default: {}
      type: object
    network.harvesterhci.io.v1beta1.ClusterNetworkList:
      description: ClusterNetworkList is a list of ClusterNetwork resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.ClusterNetwork'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    network.harvesterhci.io.v1beta1.ClusterNetworkStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
      type: object
    network.harvesterhci.io.v1beta1.Condition:
      properties:
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        lastUpdateTime:
          description: The last time this condition was updated.
          type: string
        message:
          description: Human-readable message indicating details about last transition
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          default: ""
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          default: ""
          description: Type of the condition.
          type: string
      required:
      - status
      - type
      type: object
    network.harvesterhci.io.v1beta1.LinkStatus:
      properties:
        index:
          format: int32
          type: integer
        mac:
          type: string
        masterIndex:
          format: int32
          type: integer
        name:
          default: ""
          type: string
        promiscuous:
          type: boolean
        state:
          type: string
        type:
          type: string
      required:
      - name
      type: object
    network.harvesterhci.io.v1beta1.NetworkInterface:
      properties:
        index:
          default: 0
          description: Index of the NIC
          format: int32
          type: integer
        masterIndex:
          description: Index of the NIC's master
          format: int32
          type: integer
        name:
          default: ""
          description: Name of the NIC
          type: string
        state:
          default: ""
          description: "State of the NIC, up/down/unknown"
          type: string
        type:
          default: ""
          description: Interface type of the NIC
          type: string
        usedByManagementNetwork:
          description: Specify whether used by management network or not
          type: boolean
        usedByVlanNetwork:
          description: Specify whether used by VLAN network or not
          type: boolean
      required:
      - index
      - name
      - state
      - type
      type: object
    network.harvesterhci.io.v1beta1.NodeNetwork:
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        spec: ""
        status: ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ObjectMeta'
          default: {}
        spec:
          allOf:
          - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkSpec'
          default: {}
        status:
          allOf:
          - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetworkStatus'
          default: {}
      type: object
    network.harvesterhci.io.v1beta1.NodeNetworkList:
      description: NodeNetworkList is a list of NodeNetwork resources
      example:
        metadata: ""
        apiVersion: apiVersion
        kind: kind
        items:
        - ""
        - ""
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NodeNetwork'
            default: {}
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
          type: string
        metadata:
          allOf:
          - $ref: '#/components/schemas/k8s.io.v1.ListMeta'
          default: {}
      required:
      - items
      - metadata
      type: object
    network.harvesterhci.io.v1beta1.NodeNetworkSpec:
      properties:
        description:
          type: string
        nic:
          type: string
        nodeName:
          default: ""
          type: string
        type:
          type: string
      required:
      - nodeName
      type: object
    network.harvesterhci.io.v1beta1.NodeNetworkStatus:
      properties:
        conditions:
          items:
            allOf:
            - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.Condition'
            default: {}
          type: array
        networkIDs:
          items:
            default: 0
            format: int32
            type: integer
          type: array
        networkLinkStatus:
          additionalProperties:
            $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.LinkStatus'
          type: object
        nics:
          items:
            allOf:
            - $ref: '#/components/schemas/network.harvesterhci.io.v1beta1.NetworkInterface'
            default: {}
          type: array
      type: object
  securitySchemes:
    Basic:
      scheme: Basic
      type: http
    Bearer:
      scheme: Bearer
      type: http
