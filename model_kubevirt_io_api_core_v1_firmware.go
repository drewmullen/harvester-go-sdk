/*
Harvester APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1beta1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harvester

import (
	"encoding/json"
)

// checks if the KubevirtIoApiCoreV1Firmware type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubevirtIoApiCoreV1Firmware{}

// KubevirtIoApiCoreV1Firmware struct for KubevirtIoApiCoreV1Firmware
type KubevirtIoApiCoreV1Firmware struct {
	Bootloader *KubevirtIoApiCoreV1Bootloader `json:"bootloader,omitempty"`
	KernelBoot *KubevirtIoApiCoreV1KernelBoot `json:"kernelBoot,omitempty"`
	Serial *string `json:"serial,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewKubevirtIoApiCoreV1Firmware instantiates a new KubevirtIoApiCoreV1Firmware object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubevirtIoApiCoreV1Firmware() *KubevirtIoApiCoreV1Firmware {
	this := KubevirtIoApiCoreV1Firmware{}
	return &this
}

// NewKubevirtIoApiCoreV1FirmwareWithDefaults instantiates a new KubevirtIoApiCoreV1Firmware object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubevirtIoApiCoreV1FirmwareWithDefaults() *KubevirtIoApiCoreV1Firmware {
	this := KubevirtIoApiCoreV1Firmware{}
	return &this
}

// GetBootloader returns the Bootloader field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Firmware) GetBootloader() KubevirtIoApiCoreV1Bootloader {
	if o == nil || IsNil(o.Bootloader) {
		var ret KubevirtIoApiCoreV1Bootloader
		return ret
	}
	return *o.Bootloader
}

// GetBootloaderOk returns a tuple with the Bootloader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Firmware) GetBootloaderOk() (*KubevirtIoApiCoreV1Bootloader, bool) {
	if o == nil || IsNil(o.Bootloader) {
		return nil, false
	}
	return o.Bootloader, true
}

// HasBootloader returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Firmware) HasBootloader() bool {
	if o != nil && !IsNil(o.Bootloader) {
		return true
	}

	return false
}

// SetBootloader gets a reference to the given KubevirtIoApiCoreV1Bootloader and assigns it to the Bootloader field.
func (o *KubevirtIoApiCoreV1Firmware) SetBootloader(v KubevirtIoApiCoreV1Bootloader) {
	o.Bootloader = &v
}

// GetKernelBoot returns the KernelBoot field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Firmware) GetKernelBoot() KubevirtIoApiCoreV1KernelBoot {
	if o == nil || IsNil(o.KernelBoot) {
		var ret KubevirtIoApiCoreV1KernelBoot
		return ret
	}
	return *o.KernelBoot
}

// GetKernelBootOk returns a tuple with the KernelBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Firmware) GetKernelBootOk() (*KubevirtIoApiCoreV1KernelBoot, bool) {
	if o == nil || IsNil(o.KernelBoot) {
		return nil, false
	}
	return o.KernelBoot, true
}

// HasKernelBoot returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Firmware) HasKernelBoot() bool {
	if o != nil && !IsNil(o.KernelBoot) {
		return true
	}

	return false
}

// SetKernelBoot gets a reference to the given KubevirtIoApiCoreV1KernelBoot and assigns it to the KernelBoot field.
func (o *KubevirtIoApiCoreV1Firmware) SetKernelBoot(v KubevirtIoApiCoreV1KernelBoot) {
	o.KernelBoot = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Firmware) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Firmware) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Firmware) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *KubevirtIoApiCoreV1Firmware) SetSerial(v string) {
	o.Serial = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *KubevirtIoApiCoreV1Firmware) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubevirtIoApiCoreV1Firmware) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *KubevirtIoApiCoreV1Firmware) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *KubevirtIoApiCoreV1Firmware) SetUuid(v string) {
	o.Uuid = &v
}

func (o KubevirtIoApiCoreV1Firmware) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubevirtIoApiCoreV1Firmware) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bootloader) {
		toSerialize["bootloader"] = o.Bootloader
	}
	if !IsNil(o.KernelBoot) {
		toSerialize["kernelBoot"] = o.KernelBoot
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableKubevirtIoApiCoreV1Firmware struct {
	value *KubevirtIoApiCoreV1Firmware
	isSet bool
}

func (v NullableKubevirtIoApiCoreV1Firmware) Get() *KubevirtIoApiCoreV1Firmware {
	return v.value
}

func (v *NullableKubevirtIoApiCoreV1Firmware) Set(val *KubevirtIoApiCoreV1Firmware) {
	v.value = val
	v.isSet = true
}

func (v NullableKubevirtIoApiCoreV1Firmware) IsSet() bool {
	return v.isSet
}

func (v *NullableKubevirtIoApiCoreV1Firmware) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubevirtIoApiCoreV1Firmware(val *KubevirtIoApiCoreV1Firmware) *NullableKubevirtIoApiCoreV1Firmware {
	return &NullableKubevirtIoApiCoreV1Firmware{value: val, isSet: true}
}

func (v NullableKubevirtIoApiCoreV1Firmware) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubevirtIoApiCoreV1Firmware) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


